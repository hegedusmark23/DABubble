var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.01,1,0.647]],["body/components/AppComponent.html",[0,0.016,1,1.13,2,1.002,3,0.175,4,0.15,5,0.8,6,0.8,7,0.8,8,0.15,9,3.405,10,2.378,11,2.666,12,0.8,13,1.531,14,1.531,15,1.799,16,1.059,17,0.793,18,1.059,19,5.057,20,1.13,21,1.13,22,1.196,23,1.13,24,1.13,25,1.196,26,1.196,27,5.057,28,1.059,29,5.27,30,2.119,31,5.27,32,0.175,33,0.265,34,1.932,35,3.227,36,0.567,37,2.677,38,0.416,39,3.979,40,0.428,41,0.021,42,0.745,43,0.526,44,0.526,45,2.004,46,3.979,47,0.253,48,0.675,49,3.339,50,3.979,51,0.552,52,0.891,53,0.28,54,2.173,55,3.979,56,3.979,57,2.746,58,3.405,59,3.979,60,3.979,61,3.979,62,3.028,63,3.405,64,3.979,65,3.028,66,3.028,67,3.979,68,3.405,69,3.979,70,1.513,71,0.175,72,0.175,73,3.979,74,0.811,75,3.979,76,1.358,77,3.979,78,0.336,79,3.979,80,2.746,81,3.979,82,1.222,83,3.979,84,3.405,85,1.907,86,3.405,87,3.405,88,1.513,89,3.979,90,3.979,91,3.405,92,3.979,93,0.8,94,1.059,95,1.002,96,0.8,97,1.264,98,0.8,99,0.756,100,0.756,101,1.264,102,0.8,103,0.756,104,0.728,105,1.123,106,1.187,107,0.715,108,1.315,109,0.756,110,0.834,111,1.264,112,0.715,113,0.8,114,0.8,115,0.756,116,1.264,117,1.062,118,0.715,119,0.8,120,0.715,121,0.756,122,0.756,123,1.123,124,0.715,125,0.8,126,0.715,127,1.123,128,0.8,129,0.715,130,0.8,131,0.715,132,0.8,133,0.8,134,0.8,135,0.715,136,0.677,137,0.8,138,0.715,139,0.756,140,0.715,141,0.947,142,0.8,143,0.715,144,0.947,145,0.8,146,1.059,147,0.715,148,0.715,149,0.8,150,0.715,151,0.8,152,0.8,153,0.715,154,0.756,155,0.8,156,0.715,157,0.756,158,0.8,159,0.715,160,0.756,161,0.8,162,0.756,163,0.8,164,0.756,165,0.8,166,0.756,167,1.123,168,0.715,169,0.8,170,0.715,171,0.756,172,0.715,173,0.8,174,0.8,175,0.014,176,0.014]],["title/injectables/AuthService.html",[34,1.106,177,0.576]],["body/injectables/AuthService.html",[3,0.111,4,0.095,8,0.095,15,0.863,32,0.111,33,0.192,34,1.173,36,0.411,38,0.483,40,0.76,41,0.021,43,0.578,44,0.578,47,0.368,48,1.272,51,0.449,52,0.566,53,0.178,71,0.111,72,0.111,74,0.884,76,2.542,78,0.426,80,4.639,82,1.945,85,1.83,87,3.938,88,2.201,91,4.711,136,0.753,148,1.323,160,1.142,164,0.875,175,0.01,176,0.01,177,0.61,178,0.863,179,2.163,180,4.601,181,2.112,182,4.601,183,3.938,184,3.268,185,4.388,186,4.954,187,4.954,188,3.268,189,3.818,190,5.127,191,2.775,192,3.268,193,3.818,194,3.818,195,4.388,196,2.527,197,2.906,198,5.054,199,4.709,200,6.01,201,4.819,202,3.818,203,3.186,204,0.67,205,0.67,206,1.874,207,3.938,208,2.635,209,4.953,210,5.907,211,3.995,212,3.818,213,2.527,214,3.995,215,4.388,216,3.818,217,3.818,218,4.575,219,4.954,220,3.818,221,2.527,222,2.8,223,2.419,224,2.527,225,2.239,226,2.35,227,5.127,228,5.127,229,3.818,230,2.527,231,2.906,232,2.419,233,5.788,234,3.268,235,3.818,236,2.527,237,3.818,238,3.161,239,5.127,240,3.538,241,2.085,242,1.236,243,2.635,244,1.66,245,3.818,246,2.527,247,3.818,248,4.711,249,3.268,250,3.268,251,3.818,252,2.527,253,5.144,254,3.818,255,2.527,256,3.902,257,2.906,258,3.818,259,2.527,260,3.818,261,2.527,262,3.818,263,2.527,264,4.601,265,2.527,266,3.818,267,2.527,268,3.818,269,2.527,270,2.527,271,2.527,272,2.527,273,2.527,274,2.527,275,2.527,276,2.527,277,2.527,278,2.527,279,2.527,280,2.527,281,1.38,282,1.744,283,2.527,284,1.744,285,2.163,286,2.527,287,1.14,288,1.212,289,0.91,290,0.91,291,1.881,292,2.527,293,2.527,294,3.818,295,2.085,296,3.268,297,2.527,298,3.818,299,2.527,300,2.527,301,2.527,302,2.527,303,4.601,304,3.818,305,2.527,306,2.527,307,4.601,308,4.601,309,2.527,310,2.527,311,2.527,312,3.938,313,3.268,314,2.163,315,2.419,316,2.527,317,2.527,318,2.906,319,4.954,320,3.16,321,2.557,322,2.527,323,2.527,324,2.527,325,2.527,326,3.818,327,2.527,328,5.127,329,2.163,330,3.175,331,2.239,332,5.127,333,3.818,334,2.527,335,4.601,336,2.527,337,3.818,338,2.527,339,1.744,340,1.482,341,2.527,342,2.527,343,2.527,344,2.527,345,2.527,346,2.527,347,2.163,348,2.527,349,2.527,350,2.527,351,2.527,352,4.601,353,2.527,354,2.527,355,2.527,356,3.818,357,2.527,358,2.527,359,1.923,360,3.818,361,2.619,362,2.527,363,4.601,364,2.527,365,2.527,366,2.527,367,2.527,368,1.923,369,2.527,370,2.527,371,2.527,372,2.527]],["title/interfaces/Channel.html",[104,0.417,373,1.84]],["body/interfaces/Channel.html",[3,0.252,4,0.216,8,0.216,32,0.252,33,0.333,41,0.02,47,0.421,48,1.248,71,0.252,78,0.407,104,0.765,175,0.018,176,0.018,244,2.317,373,2.931,374,3.96,375,4.911]],["title/components/ChannelComponent.html",[0,0.01,23,0.647]],["body/components/ChannelComponent.html",[0,0.015,1,0.66,2,0.95,3,0.161,4,0.138,5,0.739,6,0.739,7,0.739,8,0.138,11,1.659,12,0.739,13,1.525,14,1.527,16,1.004,17,0.752,18,1.004,20,0.66,21,0.66,22,0.699,23,1.095,24,0.66,25,0.699,26,0.699,28,1.004,32,0.161,33,0.252,38,0.449,41,0.021,43,0.367,44,0.367,47,0.388,51,0.538,52,0.823,53,0.259,71,0.161,72,0.161,74,0.62,78,0.323,93,0.739,94,1.004,95,0.95,96,0.739,97,1.224,98,0.739,99,0.699,100,0.699,101,1.224,102,0.739,103,1.158,104,0.831,105,1.211,106,1.141,107,1.095,108,1.28,109,1.158,110,0.848,111,1.224,112,0.66,113,0.739,114,0.739,115,0.699,116,1.224,117,1.02,118,0.66,119,0.739,120,0.66,121,0.699,122,0.699,123,1.079,124,0.66,125,0.739,126,0.66,127,1.079,128,0.739,129,0.66,130,0.739,131,0.66,132,0.739,133,0.739,134,0.739,135,0.66,136,0.656,137,0.739,138,0.66,139,0.699,140,0.66,141,0.898,142,0.739,143,0.66,144,0.898,145,0.739,146,1.004,147,0.66,148,0.66,149,0.739,150,0.66,151,0.739,152,0.739,153,0.66,154,0.699,155,0.739,156,0.66,157,0.699,158,0.739,159,0.66,160,0.699,161,0.739,162,0.699,163,0.739,164,0.699,165,0.739,166,0.699,167,1.319,168,1.095,169,0.739,170,0.66,171,0.699,172,0.66,173,0.739,174,0.739,175,0.014,176,0.014,204,0.425,205,0.425,225,2.156,241,2.421,376,1.398,377,3.147,378,1.744,379,1.901,380,3.676,381,2.9,382,4.997,383,3.918,384,4.86,385,2.749,386,4.86,387,0.487,388,3.147,389,3.589,390,4.997,391,3.676,392,3.676,393,2.729,394,3.676,395,2.798,396,2.537,397,3.147,398,2.798,399,3.147,400,2.537,401,3.676,402,0.965,403,2.798,404,1.324,405,1.659,406,1.398,407,2.008,408,4.997,409,1.762,410,3.676,411,3.676,412,3.676,413,3.676,414,3.676,415,2.045,416,2.711,417,2.526,418,5.214,419,5.677,420,3.676,421,3.676,422,3.918,423,4.277,424,2.449,425,1.659,426,2.329,427,2.749,428,2.875,429,2.396,430,2.537,431,3.676,432,3.147,433,2.329,434,2.396,435,2.553,436,5.677,437,3.676,438,2.798,439,2.537,440,1.659,441,2.749,442,1.457]],["title/components/ChannelHeaderComponent.html",[0,0.01,107,0.647]],["body/components/ChannelHeaderComponent.html",[0,0.014,1,0.384,2,0.638,3,0.094,4,0.08,5,0.429,6,0.429,7,0.429,8,0.08,12,0.429,13,1.47,14,1.47,16,0.674,17,0.975,18,0.674,20,0.384,21,0.384,22,0.406,23,0.384,24,0.384,25,0.406,26,0.406,28,0.674,32,0.271,33,0.169,36,0.361,37,1.996,38,0.476,40,0.609,41,0.021,42,0.927,43,0.413,44,0.413,47,0.344,51,0.454,52,0.479,53,0.151,66,1.626,71,0.094,72,0.094,74,0.859,78,0.308,85,1.608,86,2.871,93,0.429,94,0.674,95,1.028,96,0.429,97,0.943,98,0.429,99,0.406,100,1.076,101,0.943,102,0.429,103,0.406,104,0.853,105,0.787,106,0.832,107,0.843,108,1.024,109,0.406,110,0.671,111,0.943,112,0.384,113,0.429,114,0.429,115,0.406,116,0.943,117,0.744,118,0.384,119,0.429,120,0.384,121,0.406,122,0.892,123,0.892,124,0.384,125,0.429,126,0.384,127,0.892,128,0.429,129,0.384,130,0.429,131,0.384,132,0.429,133,0.429,134,0.429,135,0.384,136,0.505,137,0.429,138,0.384,139,0.406,140,0.384,141,0.603,142,0.429,143,0.384,144,0.603,145,0.429,146,0.674,147,0.384,148,0.384,149,0.429,150,0.384,151,0.429,152,0.429,153,0.384,154,0.406,155,0.429,156,0.384,157,0.406,158,0.429,159,0.384,160,0.406,161,0.429,162,0.406,163,0.429,164,0.406,165,0.429,166,0.406,167,0.787,168,0.384,169,0.429,170,0.384,171,0.406,172,0.384,173,0.429,174,0.429,175,0.009,176,0.009,181,2,197,3.57,199,3.57,203,3.063,204,0.247,205,0.247,206,1.832,208,2.315,222,3.367,226,1.713,241,2.264,242,1.832,244,1.086,287,0.964,288,1.024,289,0.769,295,0.978,373,1.713,376,0.812,378,1.272,379,1.276,383,3.518,387,0.445,395,5.093,402,0.561,404,2.17,405,0.964,406,0.812,415,2.221,417,2.264,424,2.175,425,1.513,426,2.125,427,2.3,428,2.782,429,1.985,433,1.353,434,2.249,440,0.964,441,1.513,442,2.019,443,5.728,444,1.353,445,2.889,446,2.136,447,3.151,448,2.125,449,3.151,450,2.441,451,3.616,452,4.306,453,5.658,454,3.906,455,6.166,456,2.883,457,4.691,458,4.691,459,4.117,460,5.41,461,3.734,462,1.024,463,2.871,464,2.136,465,2.345,466,3.57,467,4.015,468,3.57,469,4.691,470,4.691,471,2.136,472,2.553,473,1.565,474,2.871,475,2.136,476,2.871,477,3.354,478,3.173,479,2.972,480,2.562,481,3.354,482,3.354,483,3.354,484,2.871,485,2.871,486,2.136,487,2.751,488,2.562,489,2.553,490,3.354,491,2.136,492,2.784,493,2.136,494,3.013,495,2.763,496,4.692,497,2.315,498,2.871,499,2.871,500,2.871,501,2.871,502,3.354,503,2.871,504,1.967,505,3.354,506,3.354,507,2.136,508,2.125,509,2.89,510,2.275,511,2.871,512,2.261,513,2.315,514,4.015,515,2.553,516,1.985,517,2.871,518,2.871,519,2.553,520,2.553,521,2.553,522,1.427,523,1.828,524,2.136,525,2.136,526,1.828,527,2.136,528,1.828,529,1.626,530,1.828,531,1.828,532,0.769,533,0.964,534,1.253,535,1.353,536,1.353,537,1.253,538,1.167,539,1.167,540,1.091,541,1.626,542,1.626,543,2.125,544,1.208,545,1.626,546,2.553,547,1.474,548,2.136,549,2.136,550,1.253,551,1.253,552,1.253,553,1.253,554,1.253,555,1.626,556,1.626,557,1.253,558,1.626,559,1.626,560,2.136,561,3.354,562,3.354,563,1.474,564,4.141,565,4.141,566,3.354,567,3.354,568,5.859,569,2.315,570,4.306,571,1.886,572,1.985,573,1.665,574,1.024,575,1.167,576,2.396,577,1.832,578,1.253,579,2.923,580,2.883,581,2.594,582,3.089,583,2.3,584,1.713,585,1.828,586,2.136,587,2.136,588,1.828,589,1.513,590,1.253,591,2.136,592,2.553,593,1.868,594,1.868,595,2.136,596,2.889,597,1.474,598,1.713,599,5.859,600,3.354,601,5.41,602,3.428,603,3.09,604,5.41,605,2.809,606,2.809,607,3.29,608,3.354,609,2.871,610,3.354,611,3.354,612,2.623,613,2.784,614,3.544,615,2.249,616,2.428,617,2.136,618,2.444,619,2.125,620,2.136,621,1.828,622,1.626,623,1.626,624,1.868,625,1.985,626,2.871,627,2.315,628,1.474,629,2.871,630,2.136,631,1.967,632,2.871,633,2.136,634,1.713,635,2.562,636,2.136,637,2.136,638,2.136,639,1.091,640,2.136,641,0.964,642,1.353,643,1.828]],["title/injectables/ChannelSelectionService.html",[177,0.576,404,1.297]],["body/injectables/ChannelSelectionService.html",[3,0.194,4,0.166,8,0.166,15,1.506,32,0.194,33,0.284,36,0.607,38,0.526,40,0.785,41,0.021,42,1.024,43,0.653,44,0.653,47,0.43,48,1.173,51,0.437,53,0.311,71,0.194,72,0.194,78,0.353,104,0.757,136,0.744,175,0.015,176,0.015,177,0.901,178,1.506,204,0.719,205,0.719,218,2.795,281,2.409,290,1.589,291,1.907,387,0.823,404,2.03,473,1.22,544,2.589,644,6.404,645,3.045,646,6.211,647,4.516,648,6.211,649,6.211,650,4.726,651,6.544,652,4.146,653,6.544,654,6.544,655,5.601,656,4.98,657,6.544,658,6.544,659,4.289,660,5.636,661,5.636,662,5.636,663,4.412,664,4.412,665,4.412,666,4.412,667,3.776,668,4.412,669,4.412,670,4.412,671,4.824,672,4.412,673,5.636,674,4.412,675,3.358,676,5.636,677,4.412,678,3.776,679,3.776,680,4.851,681,3.358,682,3.776,683,3.776,684,3.776,685,3.776,686,4.412,687,4.412,688,6.762,689,2.795,690,4.412,691,4.412,692,4.412,693,4.412]],["title/components/ChannelUserlistComponent.html",[0,0.01,112,0.647]],["body/components/ChannelUserlistComponent.html",[0,0.014,1,0.397,2,0.655,3,0.097,4,0.083,5,0.444,6,0.444,7,0.444,8,0.083,12,0.444,13,1.474,14,1.474,16,0.692,17,0.719,18,0.692,20,0.397,21,0.397,22,0.42,23,0.397,24,0.397,25,0.42,26,0.42,28,0.692,32,0.186,33,0.173,34,1.591,35,2.312,36,0.371,38,0.482,40,0.711,41,0.021,42,0.911,43,0.477,44,0.477,45,1.31,47,0.396,51,0.46,52,0.495,53,0.156,70,0.841,71,0.097,72,0.097,74,0.911,78,0.354,82,1.871,85,1.06,93,0.444,94,0.692,95,0.655,96,0.444,97,0.961,98,0.444,99,0.42,100,0.909,101,0.961,102,0.444,103,0.42,104,0.842,105,0.805,106,0.851,107,0.397,108,1.041,109,0.42,110,0.681,111,0.961,112,0.859,113,0.444,114,0.444,115,0.42,116,0.961,117,0.761,118,0.397,119,0.444,120,0.397,121,0.42,122,0.42,123,0.805,124,0.397,125,0.444,126,0.397,127,0.805,128,0.444,129,0.397,130,0.444,131,0.397,132,0.444,133,0.444,134,0.444,135,0.397,136,0.515,137,0.444,138,0.397,139,0.42,140,0.397,141,0.619,142,0.444,143,0.397,144,0.761,145,0.444,146,0.692,147,0.397,148,0.397,149,0.444,150,0.397,151,0.444,152,0.444,153,0.397,154,0.42,155,0.444,156,0.397,157,0.42,158,0.444,159,0.397,160,0.42,161,0.444,162,0.42,163,0.444,164,0.42,165,0.444,166,0.42,167,0.805,168,0.397,169,0.444,170,0.397,171,0.42,172,0.397,173,0.444,174,0.444,175,0.009,176,0.013,181,2.165,197,4.177,199,3.638,203,2.985,204,0.553,205,0.553,206,1.855,208,3.788,222,2.312,226,1.129,232,1.401,238,2.312,241,2.285,242,1.547,244,1.115,287,0.998,288,1.06,289,0.796,295,1.004,321,0.841,331,2.021,376,0.841,378,1.3,379,1.31,381,2.162,383,3.576,387,0.457,402,0.58,404,2.285,405,0.998,406,0.841,415,1.977,416,1.802,417,2.38,424,2.503,425,1.555,427,2.338,428,1.91,429,2.292,430,1.526,434,2.484,435,2.162,439,1.526,440,0.998,441,1.555,442,1.815,449,3.222,450,2.476,451,3.652,452,4.362,456,1.91,459,1.683,461,3.788,465,1.818,473,0.612,476,2.949,478,3.039,479,2.183,480,2.997,484,2.949,485,2.949,487,2.021,488,3.646,489,1.683,492,3.4,494,1.652,495,1.129,504,2.021,508,3.477,509,2.927,510,2.626,511,4.091,512,2.829,513,3.299,514,5.074,515,3.638,516,2.484,517,4.698,518,4.698,520,2.622,522,1.466,532,0.796,533,0.998,534,1.297,535,1.401,536,1.401,537,1.297,538,1.207,539,1.207,540,1.129,541,1.683,542,1.683,544,0.796,545,1.683,546,2.622,547,1.526,550,2.021,551,2.021,552,2.021,553,2.021,554,2.021,555,1.683,556,1.683,557,2.021,558,1.683,559,1.683,563,3.299,572,2.484,573,2.083,574,1.06,575,1.207,576,2.162,579,1.91,580,1.91,581,2.292,582,2.675,583,1.91,584,1.129,589,2.157,590,2.021,592,2.675,593,2.338,594,2.338,596,2.292,597,1.526,598,1.129,603,1.882,605,2.03,606,2.03,607,1.207,612,1.401,613,2.997,615,1.06,618,2.484,619,2.183,624,1.555,625,1.652,634,2.647,635,1.882,639,1.129,641,1.91,642,1.401,694,5.893,695,5.24,696,1.893,697,5.515,698,4.233,699,2.211,700,3.446,701,3.955,702,4.233,703,3.283,704,2.949,705,4.091,706,2.183,707,3.446,708,3.943,709,3.788,710,1.526,711,3.446,712,2.211,713,1.893,714,2.949,715,3.446,716,3.446,717,2.378,718,2.211,719,1.129,720,2.211,721,2.949,722,2.211,723,2.513,724,3.326,725,2.622,726,3.446,727,2.622,728,4.177,729,3.446,730,2.211,731,2.622,732,3.446,733,3.446,734,2.021,735,1.401,736,2.211,737,1.401,738,2.183,739,2.312,740,1.526,741,1.526,742,1.526,743,2.211,744,1.129,745,1.893,746,1.683,747,2.211,748,2.211,749,1.893,750,1.893,751,1.893,752,1.893,753,1.893,754,1.893,755,2.211,756,1.893,757,1.893,758,1.893,759,1.893,760,2.211,761,1.683,762,1.297,763,1.297,764,2.211,765,2.211,766,2.211,767,3.446,768,2.949,769,3.446,770,2.183,771,2.949,772,2.211,773,2.211,774,2.211,775,2.211,776,2.211,777,2.211,778,2.211,779,1.297,780,3.446,781,1.526,782,1.526,783,2.211,784,2.211,785,1.683,786,3.446,787,3.446,788,2.949,789,2.183,790,3.446,791,2.949,792,2.949,793,2.949,794,1.207,795,1.297,796,1.401,797,1.297,798,2.211,799,2.211,800,2.211,801,2.211,802,1.526,803,1.683,804,4.233,805,2.211,806,1.882,807,1.893,808,2.183,809,1.297,810,1.401,811,1.207,812,2.378,813,1.526,814,1.526,815,1.526,816,2.183,817,1.526,818,2.378,819,1.893,820,2.211,821,2.211,822,3.446,823,2.211,824,1.893,825,1.207,826,1.401,827,2.211,828,1.893,829,1.683,830,2.211,831,2.211,832,2.378,833,1.401,834,1.526,835,1.893,836,2.211]],["title/injectables/ChatAreaService.html",[177,0.576,451,2.112]],["body/injectables/ChatAreaService.html",[3,0.096,4,0.159,8,0.083,15,0.749,17,0.86,32,0.096,33,0.298,34,1.462,36,0.369,38,0.47,40,0.765,41,0.021,43,0.219,44,0.59,45,1.302,47,0.424,48,1.266,51,0.327,52,0.491,53,0.155,71,0.096,72,0.096,74,0.818,76,1.169,78,0.408,82,1.462,84,1.878,88,1.302,104,0.684,110,0.896,136,0.654,157,1.223,175,0.009,176,0.009,177,0.547,178,0.749,181,1.625,191,2.019,203,1.642,204,0.754,205,0.754,206,2.158,209,2.907,211,1.514,222,2.3,232,3.746,242,1.109,244,2.211,253,3.605,257,1.669,287,0.99,288,1.052,290,0.79,291,1.96,295,1.976,319,2.931,320,1.749,321,2.67,330,1.514,331,1.286,359,1.669,361,1.749,368,1.669,387,0.558,442,1.665,451,2.008,465,2.08,473,1.581,479,2.17,494,3.393,495,1.749,496,2.606,497,3.775,499,4.418,501,1.878,503,1.878,504,3.208,519,2.606,521,3.928,537,1.286,571,2.199,574,1.052,629,1.878,675,3.928,678,4.682,723,2.727,725,2.606,734,3.208,756,1.878,770,2.17,837,5.757,838,1.878,839,3.424,840,3.424,841,3.424,842,3.424,843,3.424,844,3.424,845,3.424,846,3.424,847,3.424,848,3.424,849,4.212,850,3.424,851,3.424,852,2.194,853,4.759,854,6.431,855,3.424,856,5.198,857,5.912,858,5.47,859,3.424,860,3.424,861,2.194,862,4.759,863,3.424,864,4.759,865,4.499,866,4.212,867,4.759,868,5.714,869,3.424,870,4.728,871,2.194,872,4.682,873,4.499,874,3.622,875,3.424,876,2.194,877,4.894,878,4.212,879,4.759,880,3.424,881,6.431,882,2.194,883,5.47,884,4.728,885,3.424,886,2.194,887,2.834,888,3.424,889,2.194,890,4.759,891,3.424,892,2.194,893,4.499,894,5.912,895,2.931,896,2.194,897,6.726,898,3.208,899,5.47,900,5.06,901,2.931,902,2.931,903,2.363,904,4.682,905,3.424,906,2.194,907,2.606,908,3.205,909,3.205,910,2.606,911,2.606,912,2.363,913,2.606,914,2.606,915,2.931,916,1.878,917,1.878,918,2.606,919,2.363,920,2.194,921,3.424,922,2.194,923,3.424,924,5.47,925,3.849,926,3.424,927,2.194,928,5.47,929,5.162,930,2.194,931,3.928,932,4.349,933,4.212,934,3.424,935,3.424,936,2.194,937,2.194,938,2.17,939,1.669,940,1.669,941,1.669,942,1.669,943,1.669,944,1.669,945,1.669,946,1.669,947,1.669,948,1.669,949,1.669,950,1.669,951,1.669,952,1.878,953,1.669,954,1.669,955,1.669,956,1.669,957,1.669,958,1.669,959,1.669,960,1.669,961,1.669,962,1.669,963,1.669,964,1.669,965,1.669,966,1.669,967,1.669,968,1.878,969,1.878,970,1.878,971,1.878,972,2.606,973,1.878,974,1.669,975,1.669,976,2.194,977,1.878,978,2.194,979,2.194,980,2.194,981,2.194,982,2.194,983,2.194,984,2.194,985,2.194,986,2.194,987,2.194,988,2.194,989,2.194,990,2.194,991,2.194,992,2.194,993,1.39,994,1.878,995,1.39,996,1.878,997,2.194,998,2.194,999,1.39,1000,2.363,1001,2.194,1002,2.194,1003,2.194,1004,2.194,1005,2.194,1006,2.194,1007,2.194,1008,2.194,1009,3.424,1010,2.194,1011,2.194,1012,2.194,1013,2.194,1014,2.194,1015,2.194,1016,1.878,1017,2.194,1018,2.194,1019,1.878,1020,2.194,1021,2.194,1022,2.194,1023,2.194,1024,1.878,1025,3.424,1026,2.194,1027,3.424,1028,2.194,1029,2.194,1030,2.194,1031,2.194,1032,2.194,1033,2.194,1034,2.194,1035,2.194,1036,2.194,1037,1.669,1038,3.424,1039,2.194,1040,2.194,1041,2.194,1042,2.194,1043,2.931,1044,3.424,1045,3.424,1046,2.194,1047,2.194,1048,2.194,1049,2.194,1050,3.424,1051,2.194,1052,2.194,1053,2.194,1054,2.194,1055,2.606,1056,3.424,1057,2.194,1058,2.194,1059,2.194,1060,2.194,1061,1.39,1062,2.194,1063,2.194,1064,2.194,1065,2.194,1066,3.424,1067,2.194,1068,1.286,1069,2.194,1070,2.194,1071,2.194,1072,2.194,1073,2.194,1074,2.194,1075,2.194,1076,2.194,1077,2.194,1078,2.194,1079,2.194]],["title/classes/DirectMessage.html",[72,0.158,689,2.282]],["body/classes/DirectMessage.html",[3,0.172,4,0.148,8,0.148,32,0.172,33,0.263,38,0.53,41,0.021,47,0.478,48,1.136,71,0.172,72,0.172,74,0.728,78,0.223,82,1.803,110,0.728,175,0.014,176,0.014,204,0.454,205,0.791,244,1.9,387,0.52,494,3.494,689,3.309,856,4.467,870,4.467,873,4.467,877,4.467,887,2.504,898,4.407,907,4.467,908,4.467,909,4.467,910,4.467,911,4.467,912,4.051,913,4.467,914,4.467,918,4.467,938,2.487,939,2.987,940,2.987,941,2.987,942,2.987,943,2.987,944,2.987,945,2.987,946,2.987,947,2.987,948,2.987,949,2.987,950,2.987,951,2.987,953,4.467,954,2.987,955,4.467,956,2.987,957,4.467,958,2.987,959,4.467,960,2.987,961,4.467,962,2.987,963,4.467,964,2.987,965,4.467,966,2.987,967,2.987,1080,2.987,1081,6.441,1082,3.36,1083,5.869,1084,4.47,1085,5.223,1086,2.987,1087,3.925,1088,3.925,1089,3.925,1090,3.925,1091,3.925,1092,3.925,1093,3.925,1094,3.925,1095,3.925,1096,3.925,1097,3.925,1098,3.925,1099,3.925,1100,3.925,1101,3.925,1102,3.925,1103,3.925,1104,3.925,1105,3.925,1106,3.925,1107,3.925,1108,3.925,1109,3.925,1110,3.925,1111,3.36,1112,3.36,1113,3.36,1114,3.36,1115,3.36,1116,3.36,1117,3.36,1118,3.36,1119,3.36,1120,3.36,1121,3.36,1122,3.36,1123,3.36,1124,3.36,1125,2.487,1126,3.36,1127,3.36,1128,3.36,1129,3.36,1130,3.36,1131,3.36,1132,3.36,1133,3.36,1134,3.36,1135,3.36,1136,3.36,1137,3.925,1138,3.925]],["title/injectables/DirectMessageSelectionService.html",[177,0.576,1139,2.112]],["body/injectables/DirectMessageSelectionService.html",[3,0.232,4,0.198,8,0.198,15,1.799,32,0.232,33,0.317,36,0.677,38,0.491,40,0.677,41,0.021,42,0.745,43,0.526,44,0.526,47,0.335,51,0.488,53,0.372,71,0.232,72,0.232,78,0.3,88,2.005,104,0.61,110,0.883,136,0.677,175,0.017,176,0.017,177,1.006,178,1.799,204,0.61,205,0.61,218,3.339,281,2.878,290,1.898,291,1.536,387,0.891,544,2.422,645,3.638,647,4.342,652,4.413,659,4.788,671,5.384,680,3.638,681,4.788,684,4.511,1019,4.511,1139,3.689,1140,6.092,1141,6.725,1142,5.271,1143,5.271,1144,5.384,1145,5.271,1146,4.511,1147,5.271,1148,5.271,1149,4.511,1150,4.788,1151,5.271,1152,5.271,1153,5.271]],["title/components/DirectMessagesComponent.html",[0,0.01,118,0.647]],["body/components/DirectMessagesComponent.html",[0,0.015,1,0.673,2,0.962,3,0.165,4,0.141,5,0.753,6,0.753,7,0.753,8,0.141,10,2.283,11,2.586,12,0.753,13,1.526,14,1.526,16,1.017,17,0.761,18,1.017,20,0.673,21,0.673,22,0.712,23,0.673,24,0.673,25,0.712,26,0.712,28,1.017,30,2.035,32,0.165,33,0.255,36,0.545,37,2.612,38,0.466,40,0.545,41,0.021,42,0.81,43,0.374,44,0.66,47,0.365,51,0.524,52,0.839,53,0.264,71,0.165,72,0.165,74,0.863,78,0.326,93,0.753,94,1.017,95,0.962,96,0.753,97,1.234,98,0.753,99,0.712,100,0.712,101,1.234,102,0.753,103,0.712,104,0.795,105,1.219,106,1.152,107,0.673,108,1.289,109,0.712,110,0.863,111,1.234,112,0.673,113,0.753,114,0.753,115,1.167,116,1.447,117,1.276,118,1.103,119,0.753,120,1.103,121,1.167,122,0.712,123,1.09,124,0.673,125,0.753,126,0.673,127,1.09,128,0.753,129,0.673,130,0.753,131,0.673,132,0.753,133,0.753,134,0.753,135,0.673,136,0.711,137,0.753,138,0.673,139,0.712,140,0.673,141,0.909,142,0.753,143,0.673,144,0.909,145,0.753,146,1.017,147,0.673,148,0.673,149,0.753,150,0.673,151,0.753,152,0.753,153,0.673,154,0.712,155,0.753,156,0.673,157,0.712,158,0.753,159,0.673,160,0.712,161,0.753,162,0.712,163,0.753,164,0.712,165,0.753,166,0.712,167,1.09,168,0.673,169,0.753,170,0.673,171,0.712,172,0.673,173,0.753,174,0.753,175,0.014,176,0.014,204,0.433,205,0.433,218,3.206,226,3.136,240,3.493,378,1.76,385,2.77,387,0.671,393,2.764,396,2.585,398,2.85,400,2.585,402,0.983,406,1.424,407,2.045,450,2.586,465,1.925,478,3.6,495,2.585,508,3.206,652,2.373,763,2.968,1125,2.373,1139,4.083,1154,5.141,1155,4.997,1156,3.206,1157,5.061,1158,5.061,1159,5.254,1160,3.206,1161,5.061,1162,3.745,1163,3.745,1164,2.426,1165,5.061,1166,4.332,1167,6.139,1168,5.061,1169,3.745,1170,3.745,1171,2.85,1172,2.85,1173,3.206,1174,3.206,1175,3.206,1176,3.206,1177,3.206]],["title/components/DirectMessagesHeaderComponent.html",[0,0.01,120,0.647]],["body/components/DirectMessagesHeaderComponent.html",[0,0.014,1,0.539,2,0.824,3,0.132,4,0.113,5,0.603,6,0.603,7,0.603,8,0.113,10,1.956,11,2.296,12,0.603,13,1.507,14,1.507,16,0.871,17,0.652,18,0.871,19,2.569,20,0.539,21,0.539,22,0.571,23,0.539,24,0.539,25,0.571,26,0.571,28,0.871,30,1.743,32,0.132,33,0.218,34,1.712,36,0.467,37,2.371,38,0.5,40,0.663,41,0.021,42,0.871,43,0.508,44,0.556,45,1.648,47,0.421,48,0.735,51,0.528,52,0.672,53,0.212,54,1.639,70,1.141,71,0.132,72,0.132,74,0.904,76,1.024,78,0.336,82,1.563,85,2.078,93,0.603,94,0.871,95,0.824,96,0.603,97,1.12,98,0.603,99,0.571,100,0.571,101,1.12,102,0.603,103,0.571,104,0.713,105,0.967,106,1.022,107,0.539,108,1.188,109,0.571,110,0.821,111,1.12,112,0.539,113,0.603,114,0.603,115,0.571,116,1.383,117,1.353,118,0.539,119,0.603,120,1.001,121,0.571,122,0.571,123,0.967,124,0.539,125,0.603,126,0.539,127,0.967,128,0.603,129,0.539,130,0.603,131,0.539,132,0.603,133,0.603,134,0.603,135,0.539,136,0.6,137,0.603,138,0.539,139,0.571,140,0.539,141,0.779,142,0.603,143,0.539,144,0.779,145,0.603,146,0.871,147,0.539,148,0.539,149,0.603,150,0.539,151,0.603,152,0.603,153,0.539,154,0.571,155,0.603,156,0.539,157,0.571,158,0.603,159,0.539,160,0.571,161,0.603,162,0.571,163,0.603,164,0.571,165,0.603,166,0.571,167,0.967,168,0.539,169,0.603,170,0.539,171,0.571,172,0.539,173,0.603,174,0.603,175,0.012,176,0.012,181,2.219,198,2.991,203,3.117,204,0.502,205,0.502,206,0.971,222,3.043,226,2.214,238,3.043,242,1.647,243,2.991,244,1.913,256,3.299,287,1.354,288,1.439,289,1.081,295,0.875,378,1.563,387,0.575,389,1.639,402,0.788,403,2.284,404,1.081,405,1.354,406,1.648,442,0.875,444,1.901,445,2.078,448,2.746,449,3.872,450,2.296,462,1.439,465,1.648,478,3.612,479,3.531,492,3.468,495,2.214,508,3.531,510,1.206,512,1.639,513,2.991,516,1.439,522,1.844,532,1.081,533,1.354,534,1.76,535,1.901,536,1.901,537,1.76,538,1.639,539,1.639,540,1.533,543,2.746,544,1.081,550,1.76,551,1.76,552,1.76,553,1.76,554,1.76,557,1.76,652,1.901,689,1.901,701,3.512,708,4.241,709,3.846,723,2.119,724,3.227,761,3.299,762,2.542,770,2.746,781,2.071,782,2.071,785,2.284,791,3.71,792,5.059,793,3.71,865,2.284,898,1.76,904,2.569,919,2.071,1068,1.76,1125,1.901,1139,3.944,1154,5.426,1155,4.921,1159,4.77,1171,2.284,1172,5.426,1175,2.569,1176,2.569,1177,2.569,1178,5.088,1179,5.088,1180,5.669,1181,5.572,1182,4.334,1183,3.001,1184,3.001,1185,3.001,1186,2.569,1187,2.569,1188,3.001,1189,2.284,1190,3.71,1191,3.71,1192,4.334,1193,3.001,1194,3.001,1195,3.001,1196,3.001,1197,3.001,1198,3.001,1199,3.001,1200,3.001,1201,2.569,1202,3.001,1203,3.001,1204,3.001,1205,3.001,1206,3.001,1207,3.001,1208,3.001,1209,3.001,1210,2.569,1211,2.569,1212,2.569,1213,3.001,1214,3.001,1215,2.284,1216,3.001,1217,3.001,1218,3.299]],["title/injectables/EditChannelService.html",[177,0.576,454,2.282]],["body/injectables/EditChannelService.html",[3,0.221,4,0.189,8,0.189,15,1.714,17,0.919,32,0.221,33,0.308,36,0.658,38,0.503,40,0.709,41,0.021,42,0.71,43,0.61,44,0.61,47,0.419,51,0.389,53,0.354,71,0.221,72,0.221,78,0.286,88,2.324,123,1.161,144,1.231,175,0.017,176,0.017,177,0.977,178,1.714,204,0.581,205,0.581,290,1.808,291,1.781,387,0.873,454,3.871,473,1.895,544,2.572,656,5.345,887,3.466,999,3.181,1061,3.181,1146,5.229,1219,6.188,1220,4.298,1221,7.023,1222,6.852,1223,6.852,1224,6.109,1225,6.109,1226,5.021,1227,5.021,1228,6.109,1229,5.021,1230,5.021,1231,6.109,1232,4.65,1233,6.109,1234,5.021,1235,5.021,1236,5.021,1237,6.109,1238,5.021,1239,5.229,1240,5.229,1241,6.109]],["title/components/EditProfilComponent.html",[0,0.01,124,0.647]],["body/components/EditProfilComponent.html",[0,0.012,1,0.466,2,0.74,3,0.114,4,0.098,5,0.521,6,0.521,7,0.521,8,0.098,12,0.521,13,1.493,14,1.493,16,0.782,17,0.837,18,0.782,20,0.466,21,0.466,22,0.493,23,0.466,24,0.466,25,0.493,26,0.493,28,0.782,32,0.171,33,0.196,34,1.595,35,2.551,36,0.419,38,0.427,40,0.559,41,0.021,42,0.734,43,0.466,44,0.466,45,1.48,47,0.165,51,0.403,52,0.581,53,0.183,70,0.986,71,0.114,72,0.114,74,0.87,76,1.772,78,0.345,88,1.48,93,0.521,94,0.782,95,0.74,96,0.521,97,1.043,98,0.521,99,0.493,100,0.493,101,1.043,102,0.521,103,0.493,104,0.601,105,0.888,106,0.939,107,0.466,108,1.118,109,0.493,110,0.829,111,1.043,112,0.466,113,0.521,114,0.521,115,0.493,116,1.043,117,0.839,118,0.466,119,0.521,120,0.466,121,0.493,122,0.493,123,1.359,124,0.933,125,0.521,126,0.466,127,1.297,128,0.521,129,0.466,130,0.521,131,0.466,132,0.521,133,0.521,134,0.521,135,0.466,136,0.559,137,0.521,138,0.466,139,0.493,140,0.466,141,0.699,142,0.521,143,0.466,144,0.699,145,0.521,146,0.782,147,0.466,148,0.466,149,0.521,150,0.466,151,0.521,152,0.521,153,0.466,154,0.493,155,0.521,156,0.466,157,0.493,158,0.521,159,0.466,160,0.493,161,0.521,162,0.493,163,0.521,164,0.493,165,0.521,166,0.493,167,0.888,168,0.466,169,0.521,170,0.466,171,0.493,172,0.466,173,0.521,174,0.521,175,0.011,176,0.011,204,0.3,205,0.3,206,0.839,211,2.685,231,2.961,234,3.998,238,3.191,240,2.685,241,2.496,242,2.064,318,2.961,321,0.986,376,0.986,378,1.435,379,1.48,381,2.386,402,0.68,415,2.457,416,2.368,417,2.553,422,1.789,424,2.821,425,2.108,427,1.756,428,1.756,429,2.24,433,1.642,434,2.489,435,1.324,440,1.169,441,2.343,442,1.766,445,1.865,456,1.756,465,1.975,468,2.961,473,1.539,487,2.282,488,3.649,522,1.656,532,0.934,533,1.169,571,2.237,572,3.057,573,2.564,574,2.489,575,2.551,576,1.987,577,1.415,578,1.52,579,2.343,580,2.343,581,2.802,582,2.976,583,2.813,584,1.987,589,1.169,590,1.52,592,2.813,593,2.735,594,2.735,596,2.24,598,2.842,602,2.465,603,1.415,605,2.24,606,2.24,607,1.415,613,2.551,615,2.489,616,2.282,618,2.668,619,3.29,624,2.511,625,2.489,628,1.789,631,2.282,634,2.842,635,2.125,639,2.652,641,2.108,703,3.29,706,2.465,717,2.685,719,1.987,723,1.777,734,2.282,735,2.465,737,3.29,738,3.29,739,3.191,740,2.685,741,2.685,742,2.685,744,2.985,763,3.045,789,2.465,794,1.415,795,1.52,796,1.642,797,2.282,806,2.551,808,1.642,809,3.045,810,1.642,811,2.125,812,2.685,813,1.789,814,1.789,816,1.642,818,3.583,824,2.218,825,2.551,826,2.465,829,1.973,832,2.685,1164,2.989,1242,4.745,1243,4.745,1244,1.973,1245,2.592,1246,3.33,1247,3.224,1248,3.555,1249,5.192,1250,4.444,1251,2.592,1252,2.961,1253,3.33,1254,3.951,1255,2.961,1256,2.218,1257,4.444,1258,2.465,1259,3.33,1260,2.961,1261,2.592,1262,3.33,1263,2.961,1264,3.33,1265,3.33,1266,2.592,1267,3.891,1268,3.891,1269,3.891,1270,2.592,1271,2.592,1272,2.592,1273,3.33,1274,2.218,1275,2.592,1276,2.218,1277,2.592,1278,2.961,1279,3.33,1280,3.891,1281,3.33,1282,3.33,1283,2.282,1284,2.282,1285,3.33,1286,2.961,1287,2.685,1288,2.96,1289,2.961,1290,1.642,1291,1.789,1292,2.218,1293,2.218,1294,2.218,1295,2.218,1296,2.218,1297,2.218,1298,2.218,1299,1.973,1300,2.218,1301,2.218,1302,2.218,1303,2.218,1304,2.218,1305,2.218,1306,3.33,1307,1.789,1308,3.33,1309,1.642,1310,2.218,1311,2.218,1312,2.218,1313,2.218,1314,2.218,1315,1.973,1316,1.642,1317,2.218,1318,2.218,1319,2.218,1320,2.218,1321,2.592,1322,2.218,1323,2.961,1324,2.592,1325,2.592,1326,2.592,1327,2.282,1328,3.33,1329,1.52]],["title/components/EditProfilContactformComponent.html",[0,0.01,126,0.647]],["body/components/EditProfilContactformComponent.html",[0,0.011,1,0.396,2,0.653,3,0.097,4,0.083,5,0.443,6,0.443,7,0.443,8,0.083,12,0.443,13,1.474,14,1.474,16,0.691,17,0.517,18,0.691,20,0.396,21,0.396,22,0.419,23,0.396,24,0.396,25,0.419,26,0.419,28,0.691,32,0.151,33,0.173,34,1.683,35,2.605,36,0.37,38,0.454,40,0.59,41,0.021,42,0.731,43,0.547,44,0.547,45,1.307,47,0.269,48,0.809,51,0.401,52,0.494,53,0.155,70,0.838,71,0.097,72,0.097,74,0.592,76,1.766,78,0.371,88,2.366,93,0.443,94,0.691,95,0.653,96,0.443,97,0.959,98,0.443,99,0.419,100,0.419,101,0.959,102,0.443,103,0.419,104,0.634,105,0.803,106,0.849,107,0.396,108,1.039,109,0.419,110,0.771,111,0.959,112,0.396,113,0.443,114,0.443,115,0.419,116,0.959,117,0.929,118,0.396,119,0.443,120,0.396,121,0.419,122,0.419,123,1.241,124,0.396,125,0.443,126,0.857,127,1.408,128,0.443,129,0.396,130,0.443,131,0.396,132,0.443,133,0.443,134,0.443,135,0.396,136,0.514,137,0.443,138,0.396,139,0.419,140,0.396,141,0.617,142,0.443,143,0.396,144,0.617,145,0.443,146,0.691,147,0.396,148,0.396,149,0.443,150,0.396,151,0.443,152,0.443,153,0.396,154,0.419,155,0.443,156,0.396,157,0.419,158,0.443,159,0.396,160,0.419,161,0.443,162,0.419,163,0.443,164,0.419,165,0.443,166,0.419,167,0.803,168,0.396,169,0.443,170,0.396,171,0.419,172,0.396,173,0.443,174,0.443,175,0.009,176,0.009,191,2.025,192,2.941,198,2.371,204,0.255,205,0.255,206,0.713,223,2.676,238,2.993,241,2.403,242,1.675,285,1.886,291,1.002,295,0.642,315,3.277,320,2.642,321,0.838,339,4.086,359,1.677,361,1.125,368,1.677,376,0.838,378,1.297,379,1.307,381,2.158,402,0.578,415,2.403,416,2.03,417,2.541,424,2.654,425,1.55,427,2.153,428,1.55,429,2.744,434,2.025,435,1.755,440,0.994,441,2.745,442,1.726,445,2.287,456,1.906,473,0.609,480,1.876,488,3.233,495,1.755,521,3.631,522,1.462,532,0.794,533,0.994,571,0.886,572,2.744,573,2.301,574,2.025,575,1.876,576,3.024,577,2.993,578,1.292,579,3.01,580,2.582,581,2.48,582,2.807,583,3.01,584,2.799,589,2.153,590,1.292,592,2.807,593,2.473,594,2.473,596,2.287,597,1.521,598,2.799,602,2.676,603,1.203,605,2.025,606,1.647,607,1.203,613,2.825,615,2.287,618,2.839,622,2.615,623,2.615,624,2.905,625,2.48,627,3.95,631,3.033,634,2.799,635,1.876,639,2.437,641,1.906,703,3.023,706,2.177,719,2.437,723,1.606,735,2.177,737,2.177,738,2.177,739,2.307,744,2.437,779,1.292,789,3.472,794,1.203,795,1.292,796,1.396,797,2.015,802,2.371,806,1.876,808,2.177,809,1.292,810,1.396,811,2.307,812,2.371,813,1.521,814,1.521,816,2.177,817,2.371,819,1.886,826,2.177,829,1.677,832,2.915,833,1.396,925,3.472,993,2.177,995,2.177,1000,1.521,1242,4.966,1247,2.915,1254,3.631,1258,4.015,1276,1.886,1278,2.615,1279,2.941,1283,2.798,1284,2.015,1287,2.915,1288,2.676,1289,2.615,1290,1.396,1291,1.521,1309,3.023,1315,1.677,1316,1.396,1320,2.941,1322,1.886,1323,2.615,1327,2.015,1328,2.941,1329,3.357,1330,4.966,1331,1.886,1332,5.173,1333,2.915,1334,2.203,1335,3.436,1336,2.915,1337,4.427,1338,5.173,1339,4.771,1340,3.293,1341,4.771,1342,2.203,1343,3.436,1344,2.941,1345,2.203,1346,2.203,1347,2.203,1348,3.436,1349,3.436,1350,2.203,1351,2.371,1352,2.371,1353,2.941,1354,3.436,1355,3.436,1356,2.203,1357,2.203,1358,2.203,1359,2.371,1360,2.203,1361,2.615,1362,3.436,1363,2.941,1364,3.436,1365,3.436,1366,2.615,1367,4.171,1368,3.631,1369,2.615,1370,2.615,1371,2.615,1372,2.203,1373,2.203,1374,2.203,1375,1.521,1376,1.521,1377,3.436,1378,1.677,1379,3.436,1380,1.886,1381,2.203,1382,2.203,1383,3.293,1384,1.521,1385,1.886,1386,2.203,1387,3.436,1388,2.203,1389,2.203,1390,1.677,1391,2.203,1392,2.203,1393,2.203,1394,2.203,1395,2.203,1396,3.436,1397,2.203,1398,2.203,1399,2.203,1400,2.203,1401,2.371,1402,3.436,1403,3.436,1404,3.436,1405,2.941,1406,2.941,1407,2.371,1408,3.436,1409,3.436,1410,4.083,1411,1.521,1412,2.203,1413,2.203,1414,2.203,1415,2.203,1416,4.083,1417,3.436,1418,2.203,1419,1.677,1420,3.436,1421,2.203,1422,2.941,1423,3.615,1424,1.886,1425,3.215,1426,2.203,1427,3.436,1428,1.886,1429,2.203,1430,1.886,1431,2.203,1432,1.886,1433,2.203,1434,2.941,1435,2.203,1436,1.677,1437,1.886,1438,2.203]],["title/injectables/FileUploadeService.html",[177,0.576,1439,2.741]],["body/injectables/FileUploadeService.html",[3,0.216,4,0.271,8,0.271,15,1.677,32,0.216,36,0.649,38,0.46,40,0.649,41,0.021,47,0.383,48,1.106,51,0.506,53,0.346,71,0.216,72,0.216,78,0.343,136,0.529,175,0.016,176,0.016,177,0.964,178,1.677,181,1.677,191,3.406,204,0.698,205,0.698,209,4.694,211,3.39,289,1.769,290,1.769,291,1.432,295,2.071,312,4.204,320,3.079,330,3.39,387,0.865,912,3.39,1150,3.738,1439,4.588,1440,5.821,1441,4.204,1442,6.028,1443,6.028,1444,4.912,1445,6.028,1446,4.912,1447,6.028,1448,4.912,1449,4.912,1450,4.912,1451,5.583,1452,4.912,1453,4.912,1454,4.912,1455,6.028,1456,4.912,1457,4.912,1458,4.912,1459,4.912,1460,3.112,1461,4.912,1462,4.912,1463,4.912,1464,4.912,1465,6.028,1466,4.912,1467,4.912,1468,4.912,1469,4.912,1470,4.912,1471,4.912,1472,4.912,1473,4.204,1474,4.912,1475,4.912,1476,4.912,1477,4.912,1478,4.912,1479,4.912,1480,4.912,1481,4.912,1482,4.912]],["title/components/HeaderComponent.html",[0,0.01,20,0.647]],["body/components/HeaderComponent.html",[0,0.014,1,0.57,2,0.857,3,0.139,4,0.119,5,0.637,6,0.637,7,0.637,8,0.119,12,0.637,13,1.512,14,1.512,16,0.906,17,0.908,18,0.906,20,1.027,21,0.57,22,0.603,23,0.57,24,0.57,25,0.603,26,0.603,28,0.906,32,0.139,33,0.227,34,1.755,35,1.732,36,0.485,38,0.426,40,0.485,41,0.021,42,0.637,43,0.524,44,0.524,45,1.715,51,0.486,52,0.71,53,0.224,70,1.206,71,0.139,72,0.139,74,0.8,78,0.299,88,2.173,93,0.637,94,0.906,95,0.857,96,0.637,97,1.148,98,0.637,99,0.603,100,0.603,101,1.148,102,0.637,103,0.603,104,0.661,105,0.998,106,1.054,107,0.57,108,1.213,109,0.603,110,0.778,111,1.148,112,0.57,113,0.637,114,0.637,115,0.603,116,1.261,117,1.085,118,0.57,119,0.637,120,0.57,121,0.603,122,0.603,123,0.998,124,0.57,125,0.637,126,0.57,127,1.227,128,0.637,129,0.57,130,0.637,131,0.57,132,0.637,133,0.637,134,0.637,135,0.57,136,0.615,137,0.637,138,0.57,139,0.603,140,0.57,141,0.943,142,0.637,143,0.57,144,1.127,145,0.637,146,0.906,147,0.57,148,0.57,149,0.637,150,0.57,151,0.637,152,0.637,153,1.027,154,0.998,155,0.637,156,0.57,157,0.603,158,0.637,159,0.57,160,0.603,161,0.637,162,1.086,163,0.637,164,0.603,165,0.637,166,0.603,167,0.998,168,0.57,169,0.637,170,0.57,171,0.603,172,0.57,173,0.637,174,0.637,175,0.012,176,0.012,241,2.26,242,1.85,250,4.891,339,3.112,376,1.206,379,1.715,385,2.578,393,2.462,407,1.732,415,2.376,416,1.919,417,2.505,424,2.297,427,2.034,428,2.367,434,2.74,440,1.431,441,2.367,442,0.924,445,3.094,447,3.993,448,2.857,456,1.431,465,2.173,472,3.431,473,1.451,487,2.644,488,3.121,497,3.112,509,2.303,513,3.112,522,1.919,532,1.142,533,1.431,543,2.857,571,1.275,572,2.74,573,2.297,574,1.52,575,1.732,577,1.732,579,1.431,580,1.431,581,2.74,582,2.034,583,1.431,589,2.034,592,2.724,593,2.367,594,2.367,596,2.516,603,2.865,605,2.162,606,2.162,615,2.516,616,3.351,618,1.52,624,2.367,625,1.52,631,1.86,632,4.891,639,1.62,641,2.034,642,4.179,643,2.714,719,2.303,723,1.206,731,4.349,734,3.351,763,2.644,789,2.857,794,1.732,809,1.86,815,2.188,825,2.462,826,3.324,833,2.009,834,3.112,1164,2.74,1247,3.621,1255,4.349,1260,3.431,1278,4.349,1290,2.009,1291,2.188,1307,3.621,1309,2.857,1329,2.644,1425,3.431,1434,3.859,1483,2.714,1484,3.171,1485,5.715,1486,5.715,1487,3.171,1488,3.621,1489,4.509,1490,4.509,1491,4.509,1492,3.171,1493,3.431,1494,4.509,1495,3.171,1496,3.171,1497,3.171,1498,2.714,1499,3.171,1500,2.413,1501,3.171,1502,2.714,1503,2.714,1504,2.413,1505,2.413,1506,3.171,1507,4.509,1508,4.509,1509,3.171,1510,3.171,1511,2.714,1512,2.714,1513,2.714,1514,3.171,1515,3.171,1516,3.171,1517,3.171,1518,3.171,1519,3.171,1520,2.413,1521,2.714,1522,2.714,1523,3.171,1524,3.171,1525,3.171,1526,3.171,1527,3.171,1528,3.171,1529,3.171,1530,3.171,1531,3.171]],["title/components/HomeComponent.html",[0,0.01,129,0.647]],["body/components/HomeComponent.html",[0,0.014,1,0.598,2,0.887,3,0.146,4,0.125,5,0.669,6,0.669,7,0.669,8,0.125,10,2.105,11,2.431,12,0.669,13,1.517,14,1.526,16,0.938,17,0.702,18,0.938,20,1.049,21,1.049,22,1.11,23,1.049,24,0.598,25,1.11,26,0.633,28,0.938,32,0.146,33,0.235,36,0.502,37,2.485,38,0.449,40,0.358,41,0.021,42,0.47,43,0.466,44,0.466,47,0.371,48,0.791,51,0.568,52,0.745,53,0.329,57,2.297,58,2.848,65,2.532,66,4.1,71,0.146,72,0.146,74,0.762,78,0.306,93,0.669,94,0.938,95,0.887,96,0.669,97,1.173,98,0.669,99,1.11,100,0.887,101,1.173,102,0.669,103,0.633,104,0.757,105,1.024,106,1.083,107,0.598,108,1.235,109,0.633,110,0.811,111,1.173,112,1.049,113,0.669,114,0.938,115,0.633,116,1.281,117,1.049,118,1.049,119,0.669,120,0.598,121,0.633,122,1.11,123,1.212,124,1.049,125,0.669,126,1.049,127,1.169,128,0.669,129,1.049,130,0.669,131,0.598,132,0.669,133,0.669,134,0.669,135,1.049,136,0.686,137,0.669,138,0.598,139,0.633,140,0.598,141,0.838,142,0.669,143,1.049,144,1.105,145,0.669,146,0.938,147,0.598,148,0.598,149,0.669,150,0.598,151,0.669,152,0.669,153,0.598,154,0.633,155,0.669,156,1.049,157,1.024,158,0.669,159,0.598,160,0.633,161,0.669,162,0.633,163,0.669,164,0.633,165,0.669,166,0.633,167,1.024,168,0.598,169,0.669,170,0.598,171,0.633,172,1.049,173,0.669,174,0.669,175,0.013,176,0.013,204,0.385,205,0.385,241,2.357,376,1.266,378,1.655,379,1.774,381,2.752,387,0.618,402,0.874,404,2.444,405,1.501,406,1.266,415,2.103,416,2.485,417,2.214,424,2.347,425,2.105,426,2.956,427,2.875,433,3.895,435,1.7,440,1.501,442,0.97,445,2.237,450,2.875,454,4.404,529,2.532,530,2.848,531,2.848,573,1.876,577,1.817,589,2.634,596,1.595,641,1.501,650,4.1,695,2.532,710,2.297,762,1.951,797,1.951,816,2.956,817,4.516,931,2.532,1155,3.22,1239,3.993,1243,2.532,1330,2.532,1410,2.848,1488,3.413,1532,2.848,1533,4.443,1534,3.328,1535,4.665,1536,4.03,1537,4.665,1538,3.328,1539,3.328,1540,3.328,1541,4.665,1542,3.328,1543,3.328,1544,3.328,1545,3.328,1546,4.665,1547,3.328,1548,2.532,1549,2.848,1550,3.328,1551,2.956,1552,3.328,1553,3.328,1554,3.328,1555,2.532,1556,3.328,1557,3.328,1558,2.532,1559,3.328,1560,4.665,1561,3.328,1562,2.297,1563,3.328,1564,3.328,1565,3.328,1566,3.328,1567,2.848,1568,2.848,1569,4.665,1570,3.993]],["title/components/ImpressumComponent.html",[0,0.01,131,0.647]],["body/components/ImpressumComponent.html",[0,0.016,1,0.748,2,1.032,3,0.183,4,0.157,5,0.837,6,0.837,7,0.837,8,0.157,12,0.837,13,1.534,14,1.534,16,1.091,17,0.817,18,0.837,20,0.748,21,0.748,22,0.792,23,0.748,24,0.748,25,0.792,26,0.792,28,1.091,30,2.183,32,0.183,33,0.273,36,0.585,38,0.426,40,0.448,41,0.021,42,0.589,43,0.416,44,0.416,47,0.345,48,0.921,51,0.421,53,0.294,71,0.183,72,0.183,74,0.673,76,1.854,78,0.344,93,0.837,94,1.091,95,1.032,96,0.837,97,1.287,98,0.837,99,0.792,100,0.792,101,1.287,102,0.837,103,0.792,104,0.741,105,1.149,106,1.214,107,0.748,108,1.335,109,0.792,110,0.844,111,1.287,112,0.748,113,0.837,114,0.837,115,0.792,116,1.287,117,1.086,118,0.748,119,0.837,120,0.748,121,0.792,122,0.792,123,1.149,124,0.748,125,0.837,126,0.748,127,1.149,128,0.837,129,0.748,130,0.837,131,1.15,132,0.837,133,0.837,134,0.837,135,0.748,136,0.689,137,0.837,138,0.748,139,0.792,140,0.748,141,0.976,142,0.837,143,0.748,144,0.976,145,0.837,146,1.091,147,0.748,148,0.748,149,0.837,150,0.748,151,0.837,152,0.837,153,0.748,154,0.792,155,0.837,156,0.748,157,0.792,158,0.837,159,0.748,160,0.792,161,0.837,162,0.792,163,0.837,164,0.792,165,0.837,166,0.792,167,1.149,168,0.748,169,0.837,170,0.748,171,0.792,172,0.748,173,0.837,174,0.837,175,0.015,176,0.015,204,0.482,205,0.482,340,3.185,387,0.552,402,1.093,409,1.997,1257,4.648,1571,3.565,1572,4.419,1573,5.43,1574,5.43,1575,4.17,1576,4.873,1577,3.17,1578,4.873,1579,5.43,1580,4.133,1581,4.165,1582,4.648,1583,4.648,1584,4.648,1585,3.185,1586,3.748,1587,3.748,1588,3.17,1589,5.43,1590,4.648,1591,4.648,1592,4.648,1593,4.648,1594,4.648,1595,5.43,1596,5.43,1597,5.43,1598,5.43,1599,4.165,1600,4.165]],["title/components/LogInComponent.html",[0,0.01,24,0.647]],["body/components/LogInComponent.html",[0,0.009,1,0.261,2,0.466,3,0.064,4,0.055,5,0.292,6,0.292,7,0.292,8,0.055,10,1.107,11,1.435,12,0.292,13,1.414,14,1.414,16,0.493,17,0.627,18,0.493,20,0.261,21,0.261,22,0.277,23,0.261,24,0.671,25,0.277,26,0.277,27,2.722,28,0.493,32,0.257,33,0.123,34,1.388,36,0.264,37,1.588,38,0.451,40,0.616,41,0.021,42,0.714,43,0.504,44,0.48,45,0.933,47,0.202,48,0.891,49,2.365,51,0.392,52,0.326,53,0.103,54,0.795,62,4.916,63,2.722,70,0.554,71,0.064,72,0.064,74,0.674,76,1.085,78,0.212,82,1.388,85,1.789,88,1.42,93,0.292,94,0.493,95,0.466,96,0.292,97,0.75,98,0.292,99,0.277,100,0.277,101,0.75,102,0.292,103,0.277,104,0.432,105,0.605,106,0.639,107,0.261,108,0.837,109,0.277,110,0.71,111,0.75,112,0.261,113,0.292,114,0.292,115,0.277,116,0.75,117,0.749,118,0.261,119,0.292,120,0.261,121,0.277,122,0.277,123,0.605,124,0.261,125,0.292,126,0.261,127,0.605,128,0.292,129,0.261,130,0.292,131,0.261,132,0.292,133,1.056,134,0.292,135,0.261,136,0.64,137,0.292,138,0.261,139,0.277,140,0.261,141,0.441,142,0.292,143,0.261,144,0.441,145,0.292,146,0.493,147,0.261,148,0.671,149,0.292,150,0.261,151,0.292,152,0.292,153,0.261,154,0.277,155,0.292,156,0.261,157,0.277,158,0.292,159,0.261,160,0.277,161,0.292,162,0.277,163,0.292,164,1.062,165,0.292,166,0.277,167,0.605,168,0.261,169,0.292,170,0.261,171,0.277,172,0.261,173,0.292,174,0.292,175,0.007,176,0.007,181,1.542,185,3.195,186,5.091,191,2.743,201,2.841,204,0.284,205,0.284,206,0.471,214,2.576,215,2.1,223,2.862,225,3.082,241,2.208,248,4.322,287,1.684,288,0.698,289,0.524,291,0.927,295,1.317,296,1.246,313,2.722,315,2.64,320,3.3,321,0.554,361,1.624,376,0.554,378,0.977,379,0.933,387,0.193,402,0.382,409,0.698,415,2.431,416,2.531,417,2.513,418,2.1,424,2.525,425,2.169,426,0.922,427,1.88,428,2.278,429,1.789,430,1.004,432,2.1,434,3.042,435,1.624,438,2.841,439,4.032,441,1.684,442,1.967,456,1.435,462,0.698,465,0.933,480,2.038,510,0.585,516,0.698,522,1.044,532,0.524,533,0.657,540,0.743,544,1.145,571,2.349,572,2.166,573,2.03,576,2.775,577,2.625,578,1.439,579,2.451,580,1.88,581,2.678,582,2.038,583,2.451,588,1.246,589,2.169,592,2.636,593,2.371,594,2.278,596,2.604,597,1.004,598,2.775,602,2.64,603,2.87,605,0.698,606,0.698,607,3.125,612,2.015,613,3.703,614,4.498,615,2.743,618,1.998,621,1.246,622,3.658,623,3.438,624,2.959,625,1.176,627,4.032,628,1.004,634,1.253,635,1.34,639,1.253,642,4.02,728,1.108,744,2.455,746,3.999,761,1.867,779,0.854,794,0.795,795,1.439,802,1.004,803,1.108,806,2.467,807,2.722,808,3.701,811,1.34,817,1.693,818,3.485,825,2.967,826,0.922,828,1.246,833,2.015,834,2.195,835,1.246,874,3.438,925,4.02,993,2.015,995,1.554,999,0.922,1000,1.004,1043,3.195,1055,2.42,1061,2.365,1068,2.65,1086,2.42,1164,1.176,1190,3.195,1191,1.246,1218,1.867,1232,2.42,1248,2.841,1258,3.046,1283,2.819,1284,2.65,1287,2.195,1288,2.015,1307,2.195,1316,3.829,1327,0.854,1329,3.756,1333,2.195,1336,2.195,1340,2.576,1344,3.195,1351,2.576,1352,1.693,1359,1.693,1361,1.867,1366,1.867,1367,3.438,1368,2.841,1369,1.867,1370,1.867,1371,1.867,1375,1.004,1376,1.004,1380,1.246,1383,3.118,1416,2.722,1419,1.108,1422,2.722,1423,2.722,1424,1.246,1425,1.867,1428,3.567,1432,2.1,1460,2.365,1522,4.782,1533,3.438,1562,2.195,1572,1.693,1585,2.189,1601,5.529,1602,1.246,1603,1.455,1604,3.18,1605,2.453,1606,2.365,1607,2.576,1608,3.18,1609,3.733,1610,3.733,1611,3.733,1612,3.733,1613,4.65,1614,3.733,1615,2.841,1616,3.195,1617,1.455,1618,1.455,1619,1.455,1620,2.453,1621,3.118,1622,3.195,1623,2.453,1624,1.455,1625,2.1,1626,2.453,1627,1.455,1628,2.453,1629,2.453,1630,2.453,1631,2.453,1632,1.455,1633,1.455,1634,1.455,1635,1.455,1636,2.453,1637,2.1,1638,2.453,1639,1.455,1640,1.455,1641,1.455,1642,1.455,1643,1.455,1644,1.455,1645,1.455,1646,2.841,1647,1.455,1648,2.1,1649,1.455,1650,1.693,1651,1.455,1652,1.455,1653,1.246,1654,1.246,1655,1.455,1656,1.455,1657,3.18,1658,3.18,1659,2.453,1660,2.453,1661,3.18,1662,3.18,1663,3.18,1664,4.65,1665,3.18,1666,2.722,1667,4.518,1668,3.18,1669,3.18,1670,3.18,1671,2.722,1672,1.246,1673,1.246,1674,2.576,1675,1.246,1676,1.108,1677,1.455,1678,1.246,1679,1.246,1680,1.246,1681,1.455,1682,1.455,1683,1.455,1684,1.455,1685,1.246,1686,1.246,1687,1.246,1688,1.246,1689,2.42,1690,2.722,1691,1.455,1692,1.455,1693,1.246,1694,1.455,1695,1.455,1696,1.246,1697,1.455,1698,1.108,1699,1.455,1700,1.455,1701,1.455,1702,1.455,1703,3.195,1704,1.246,1705,2.722,1706,1.455,1707,1.455,1708,1.246,1709,1.246,1710,4.167,1711,2.453,1712,1.455,1713,2.876,1714,1.455,1715,3.18,1716,3.18,1717,2.42,1718,2.722,1719,1.455,1720,1.455,1721,1.455,1722,2.722,1723,1.455,1724,1.455,1725,1.455,1726,2.453,1727,1.455,1728,1.455,1729,1.455,1730,3.733,1731,3.867,1732,3.733,1733,3.733,1734,2.453,1735,1.867,1736,2.453,1737,2.453,1738,2.453,1739,2.453,1740,2.453,1741,2.1,1742,2.453,1743,2.453,1744,3.195,1745,2.453,1746,1.867,1747,1.455,1748,6.209,1749,1.455,1750,6.121,1751,2.453,1752,3.999,1753,5.049,1754,5.255,1755,5.255,1756,5.587,1757,5.432,1758,5.255,1759,5.255,1760,5.255,1761,3.18,1762,3.18,1763,1.455,1764,1.246,1765,5.587,1766,1.455,1767,1.455,1768,1.455,1769,1.455,1770,2.365,1771,3.18,1772,1.455,1773,3.733,1774,2.453,1775,1.455,1776,1.455,1777,1.455,1778,1.455,1779,3.733,1780,3.733,1781,1.455,1782,1.455,1783,1.455,1784,3.733,1785,2.453,1786,3.195,1787,1.455,1788,2.453,1789,2.453,1790,1.455,1791,1.455,1792,2.453,1793,4.167,1794,1.455,1795,1.455,1796,1.455,1797,1.455,1798,1.455,1799,1.455,1800,1.455,1801,3.18,1802,3.733,1803,2.453,1804,1.455,1805,6.035,1806,5.432,1807,2.453,1808,1.455,1809,5.255,1810,2.453,1811,2.453,1812,1.455,1813,1.455,1814,1.455,1815,4.167,1816,2.453,1817,2.453,1818,1.455,1819,2.453,1820,1.455,1821,2.453,1822,2.453,1823,2.453,1824,2.453,1825,2.453,1826,1.455,1827,3.733,1828,2.1,1829,1.455,1830,1.455,1831,1.455]],["title/classes/Message.html",[72,0.158,110,0.447]],["body/classes/Message.html",[3,0.176,4,0.151,8,0.151,32,0.176,33,0.266,38,0.531,41,0.021,47,0.479,48,1.142,71,0.176,72,0.176,74,0.735,78,0.228,82,1.821,110,0.813,175,0.014,176,0.014,204,0.463,205,0.817,244,1.919,387,0.531,494,3.503,856,4.511,870,4.511,873,4.511,877,4.511,887,2.537,898,4.414,907,4.511,908,4.511,909,4.511,910,4.511,911,4.511,912,4.091,913,4.511,914,4.511,915,5.073,918,4.511,938,2.537,939,3.047,940,3.047,941,3.047,942,3.047,943,3.047,944,3.047,945,3.047,946,3.047,947,3.047,948,3.047,949,3.047,950,3.047,951,3.047,952,3.427,953,4.511,954,3.047,955,4.511,956,3.047,957,4.511,958,3.047,959,4.511,960,3.047,961,4.511,962,3.047,963,4.511,964,3.047,965,4.511,966,3.047,967,3.047,1080,3.047,1084,4.53,1086,3.047,1111,3.427,1112,3.427,1113,3.427,1114,3.427,1115,3.427,1116,3.427,1117,3.427,1118,3.427,1119,3.427,1120,3.427,1121,3.427,1122,3.427,1123,3.427,1124,3.427,1125,2.537,1126,3.427,1127,3.427,1128,3.427,1129,3.427,1130,3.427,1131,3.427,1132,3.427,1133,3.427,1134,3.427,1135,3.427,1136,3.427,1832,3.427,1833,5.292,1834,4.004,1835,4.004,1836,4.004,1837,4.004,1838,4.004,1839,4.004,1840,4.004,1841,4.004,1842,4.004,1843,4.004,1844,4.004,1845,4.004,1846,4.004,1847,4.004,1848,4.004,1849,4.004,1850,4.004,1851,4.004,1852,4.004,1853,4.004,1854,4.004,1855,4.004,1856,4.004,1857,4.004,1858,4.004]],["title/components/NewMessageComponent.html",[0,0.01,135,0.647]],["body/components/NewMessageComponent.html",[0,0.016,1,0.78,2,1.061,3,0.191,4,0.164,5,0.873,6,0.873,7,0.873,8,0.164,12,0.873,13,1.537,14,1.537,16,1.121,17,0.839,18,1.121,20,0.78,21,0.78,22,0.826,23,0.78,24,0.78,25,0.826,26,0.826,28,1.121,30,2.243,41,0.02,51,0.504,53,0.306,71,0.191,72,0.191,74,0.692,78,0.317,93,0.873,94,1.121,95,1.061,96,0.873,97,1.307,98,0.873,99,0.826,100,0.826,101,1.307,102,0.873,103,0.826,104,0.753,105,1.172,106,1.239,107,0.78,108,1.352,109,0.826,110,0.915,111,1.307,112,0.78,113,0.873,114,0.873,115,0.826,116,1.307,117,1.108,118,0.78,119,0.873,120,0.78,121,0.826,122,0.826,123,1.172,124,0.78,125,0.873,126,0.78,127,1.172,128,0.873,129,0.78,130,0.873,131,0.78,132,0.873,133,0.873,134,0.873,135,1.169,136,0.791,137,0.873,138,1.169,139,1.237,140,1.169,141,1.169,142,0.873,143,0.78,144,1.002,145,0.873,146,1.121,147,0.78,148,0.78,149,0.873,150,0.78,151,0.873,152,0.873,153,0.78,154,0.826,155,0.873,156,0.78,157,0.826,158,0.873,159,0.78,160,0.826,161,0.873,162,0.826,163,0.873,164,0.826,165,0.873,166,0.826,167,1.172,168,0.78,169,0.873,170,0.78,171,0.826,172,0.78,173,0.873,174,0.873,175,0.015,176,0.015,396,2.997,400,2.997,1551,3.535,1859,2.997,1860,3.717,1861,5.579,1862,5.579,1863,3.717,1864,3.305,1865,4.343,1866,3.305]],["title/components/NewMessageHeaderComponent.html",[0,0.01,138,0.647]],["body/components/NewMessageHeaderComponent.html",[0,0.015,1,0.608,2,0.897,3,0.149,4,0.127,5,0.68,6,0.68,7,0.68,8,0.127,10,2.129,11,2.452,12,0.68,13,1.518,14,1.518,16,0.948,17,0.71,18,0.68,20,0.608,21,0.608,22,0.643,23,0.608,24,0.608,25,0.643,26,0.643,28,0.948,30,1.897,32,0.149,33,0.237,36,0.508,37,2.502,38,0.491,40,0.69,41,0.021,42,0.874,47,0.427,48,1.17,51,0.421,53,0.238,71,0.149,72,0.149,74,0.585,76,1.611,78,0.393,82,1.449,93,0.68,94,0.948,95,0.897,96,0.68,97,1.182,98,0.68,99,0.643,100,0.643,101,1.182,102,0.68,103,0.643,104,0.68,105,1.033,106,1.092,107,0.608,108,1.243,109,0.643,110,0.934,111,1.182,112,0.608,113,0.68,114,0.68,115,0.643,116,1.182,117,0.976,118,0.608,119,0.68,120,0.608,121,0.643,122,0.643,123,1.033,124,0.608,125,0.68,126,0.608,127,1.033,128,0.68,129,0.608,130,0.68,131,0.608,132,0.68,133,0.68,134,0.68,135,0.608,136,0.743,137,0.68,138,1.056,139,0.643,140,0.608,141,0.848,142,0.68,143,0.608,144,0.848,145,0.68,146,0.948,147,0.608,148,0.608,149,0.68,150,0.608,151,0.68,152,0.68,153,0.608,154,0.643,155,0.68,156,0.608,157,0.643,158,0.68,159,0.608,160,0.643,161,0.68,162,0.643,163,0.68,164,0.643,165,0.68,166,0.643,167,1.033,168,0.608,169,0.68,170,0.608,171,0.643,172,0.608,173,0.68,174,0.68,175,0.013,176,0.013,181,2.187,204,0.68,205,0.68,206,1.527,242,1.527,244,2.205,289,1.218,291,1.375,295,1.584,387,0.625,406,1.286,442,0.986,444,2.143,445,2.262,448,2.989,461,4.058,462,1.621,492,2.577,496,3.591,509,1.727,510,1.36,512,1.847,516,1.621,519,3.591,539,1.847,543,2.989,544,1.699,547,2.334,550,2.767,551,2.767,552,2.767,553,2.767,554,2.767,557,2.767,701,3.75,709,4.058,724,1.847,770,2.989,781,2.334,782,2.334,895,4.038,898,2.767,901,4.038,902,4.038,903,3.256,919,3.256,938,2.143,968,2.895,969,2.895,970,2.895,971,2.895,972,3.591,973,2.895,974,2.574,975,2.574,1187,2.895,1189,2.574,1201,2.895,1215,2.574,1286,3.591,1551,4.457,1859,4.855,1866,5.354,1867,5.434,1868,4.651,1869,4.651,1870,4.718,1871,4.165,1872,4.718,1873,3.382,1874,3.382,1875,4.718,1876,3.382,1877,2.895,1878,3.382,1879,3.382,1880,3.382,1881,3.382,1882,2.895,1883,3.382,1884,3.382,1885,3.382,1886,2.895,1887,2.895,1888,3.382,1889,3.382,1890,4.718]],["title/components/NewMessageSearchResultsComponent.html",[0,0.01,140,0.647]],["body/components/NewMessageSearchResultsComponent.html",[0,0.014,1,0.564,2,0.851,3,0.138,4,0.118,5,0.631,6,0.631,7,0.631,8,0.118,10,2.02,11,2.354,12,0.631,13,1.512,14,1.512,16,0.9,17,0.674,18,0.9,20,0.564,21,0.564,22,0.597,23,0.564,24,0.564,25,0.597,26,0.597,28,0.9,32,0.275,33,0.225,34,2.086,35,1.714,36,0.482,37,2.421,38,0.484,40,0.482,41,0.021,42,0.738,43,0.447,44,0.447,47,0.432,48,0.759,51,0.485,53,0.221,70,1.194,71,0.138,72,0.138,74,0.705,78,0.324,82,0.964,85,2.146,88,2.164,93,0.631,94,0.9,95,0.851,96,0.631,97,1.143,98,0.631,99,0.597,100,0.597,101,1.143,102,0.631,103,0.597,104,0.775,105,0.992,106,1.049,107,0.564,108,1.209,109,0.597,110,0.931,111,1.143,112,0.564,113,0.631,114,0.631,115,0.597,116,1.143,117,0.937,118,0.564,119,0.631,120,0.564,121,0.597,122,0.597,123,0.992,124,0.564,125,0.631,126,0.564,127,0.992,128,0.631,129,0.564,130,0.631,131,0.564,132,0.631,133,0.631,134,0.631,135,0.564,136,0.74,137,0.631,138,0.564,139,0.597,140,1.022,141,1.341,142,0.631,143,0.564,144,0.804,145,0.631,146,0.9,147,0.564,148,0.564,149,0.631,150,0.564,151,0.631,152,0.631,153,0.564,154,0.597,155,0.631,156,0.564,157,0.597,158,0.631,159,0.564,160,0.597,161,0.631,162,0.597,163,0.631,164,0.597,165,0.631,166,0.597,167,0.992,168,0.564,169,0.631,170,0.564,171,0.597,172,0.564,173,0.631,174,0.631,175,0.016,176,0.012,204,0.518,205,0.518,241,1.879,281,1.714,376,1.194,378,1.603,379,1.703,387,0.593,402,0.824,404,2.446,405,1.416,406,1.703,415,1.879,416,1.336,417,2.166,422,2.166,423,2.687,424,2.514,425,2.354,426,2.836,429,2.883,430,2.166,438,2.389,439,2.166,450,3.021,456,2.02,494,2.501,563,3.09,573,1.8,576,2.665,577,1.714,578,1.841,579,2.354,580,2.354,582,2.567,583,2.567,584,1.603,589,2.567,592,2.02,593,2.02,594,2.02,598,2.906,612,2.836,618,2.146,624,2.02,631,1.841,647,3.601,739,2.849,806,1.714,808,1.989,815,3.09,816,2.836,1068,1.841,1288,1.989,1290,2.836,1329,2.625,1430,2.687,1551,4.398,1708,3.832,1859,4.791,1864,5.283,1868,4.466,1869,4.466,1871,4.242,1882,2.687,1886,2.687,1887,2.687,1891,2.687,1892,5.218,1893,4.476,1894,5.218,1895,5.218,1896,4.476,1897,3.139,1898,4.476,1899,3.139,1900,4.476,1901,3.139,1902,3.139,1903,3.139,1904,3.139,1905,3.139,1906,3.139,1907,3.139,1908,3.139,1909,3.139,1910,3.139,1911,3.139,1912,3.139,1913,3.139,1914,3.139,1915,3.139,1916,3.139,1917,3.139,1918,4.476,1919,3.139,1920,3.139,1921,3.139,1922,4.476,1923,6.253,1924,3.139,1925,3.139,1926,3.139,1927,3.139]],["title/injectables/NewMessageSelectionService.html",[177,0.576,1871,2.282]],["body/injectables/NewMessageSelectionService.html",[3,0.165,4,0.141,8,0.141,15,1.28,32,0.165,33,0.255,36,0.545,38,0.504,40,0.804,41,0.021,42,0.972,43,0.613,44,0.613,47,0.391,51,0.393,53,0.264,71,0.165,72,0.165,74,0.906,78,0.349,82,1.762,85,3.642,104,0.846,110,0.893,136,0.74,175,0.014,176,0.014,177,0.81,178,1.28,204,0.711,205,0.711,206,1.989,208,4.744,218,4.73,244,2.225,281,2.048,290,1.351,291,2.003,321,2.336,465,2.614,478,4.286,544,2.578,645,2.589,647,3.959,652,3.892,659,3.855,667,3.211,679,3.211,680,4.807,681,2.855,682,3.211,683,3.211,685,3.211,1166,6.255,1871,3.21,1928,6.165,1929,5.736,1930,5.736,1931,6.143,1932,6.143,1933,6.143,1934,5.066,1935,5.066,1936,5.066,1937,3.751,1938,7.308,1939,3.751,1940,3.751,1941,5.066,1942,3.751,1943,6.873,1944,5.066,1945,3.751,1946,5.066,1947,3.751,1948,5.066,1949,3.751,1950,3.751,1951,3.751,1952,3.751,1953,3.751,1954,3.751,1955,3.751,1956,3.751]],["title/injectables/OnlineService.html",[177,0.576,1957,2.741]],["body/injectables/OnlineService.html",[3,0.254,4,0.217,8,0.217,15,1.97,38,0.407,41,0.02,51,0.448,53,0.407,71,0.254,72,0.254,175,0.018,176,0.018,177,1.061,178,1.97,290,2.079,387,0.926,1957,5.049,1958,4.94,1959,5.771]],["title/components/OpenImgComponent.html",[0,0.01,143,0.647]],["body/components/OpenImgComponent.html",[0,0.015,1,0.655,2,0.945,3,0.16,4,0.239,5,0.733,6,0.733,7,0.733,8,0.137,10,2.242,11,2.551,12,0.733,13,1.524,14,1.524,16,0.999,17,0.748,18,0.999,20,0.655,21,0.655,22,0.693,23,0.655,24,0.655,25,0.693,26,0.693,28,0.999,30,1.998,32,0.16,33,0.25,36,0.535,37,2.584,38,0.462,40,0.745,41,0.021,42,0.898,43,0.364,44,0.364,47,0.404,48,1.077,51,0.438,53,0.257,71,0.16,72,0.16,74,0.616,78,0.361,93,0.733,94,0.999,95,0.945,96,0.733,97,1.22,98,0.733,99,0.693,100,0.693,101,1.22,102,0.733,103,0.693,104,0.703,105,1.075,106,1.136,107,0.655,108,1.277,109,0.693,110,0.813,111,1.22,112,0.655,113,0.733,114,0.733,115,0.693,116,1.22,117,1.016,118,0.655,119,0.733,120,0.655,121,0.693,122,0.693,123,1.075,124,0.655,125,0.733,126,0.655,127,1.075,128,0.733,129,0.655,130,0.733,131,0.655,132,0.733,133,0.733,134,0.733,135,0.655,136,0.684,137,0.733,138,0.655,139,0.693,140,0.655,141,0.893,142,0.733,143,1.091,144,1.227,145,0.733,146,0.999,147,0.655,148,0.655,149,0.733,150,0.655,151,0.733,152,0.733,153,0.655,154,0.693,155,0.733,156,0.655,157,0.693,158,0.733,159,0.655,160,0.693,161,0.733,162,0.693,163,0.733,164,0.693,165,0.733,166,0.693,167,1.075,168,0.655,169,0.733,170,0.655,171,0.693,172,0.655,173,0.733,174,0.733,175,0.014,176,0.014,204,0.654,205,0.654,206,1.609,232,3.149,242,2.172,243,3.43,291,1.449,295,1.063,321,1.89,378,1.736,387,0.483,402,0.957,404,2.494,405,1.645,406,1.387,415,2.459,417,2.459,450,2.242,495,2.539,504,2.915,571,1.998,675,5.106,710,2.517,723,1.89,734,2.915,739,3.58,741,3.43,742,4.19,815,3.902,865,3.782,1558,5.106,1960,5.106,1961,3.121,1962,4.97,1963,4.97,1964,4.97,1965,4.97,1966,4.97,1967,4.97,1968,3.647,1969,4.97,1970,4.97,1971,4.97,1972,4.97,1973,4.97,1974,4.97,1975,4.97,1976,3.647,1977,4.97,1978,3.647,1979,4.97,1980,4.97,1981,4.97,1982,4.97,1983,4.97,1984,3.647,1985,3.647,1986,3.647,1987,3.647,1988,3.647,1989,3.647,1990,3.647,1991,3.647,1992,4.97]],["title/components/OpenSidebarComponent.html",[0,0.01,21,0.647]],["body/components/OpenSidebarComponent.html",[0,0.015,1,0.618,2,0.908,3,0.151,4,0.13,5,0.691,6,0.691,7,0.691,8,0.13,12,0.691,13,1.519,14,1.519,16,0.96,17,0.891,18,0.691,20,0.618,21,1.064,22,0.654,23,0.618,24,0.618,25,0.654,26,0.654,28,0.96,32,0.151,33,0.24,36,0.514,38,0.337,40,0.37,41,0.021,42,0.486,43,0.343,44,0.547,51,0.37,52,0.771,53,0.242,57,3.785,71,0.151,72,0.151,74,0.592,78,0.272,93,0.691,94,0.96,95,0.908,96,0.691,97,1.19,98,0.691,99,0.654,100,0.654,101,1.19,102,0.691,103,0.654,104,0.685,105,1.043,106,1.102,107,0.618,108,1.251,109,0.654,110,0.799,111,1.19,112,0.618,113,0.691,114,0.691,115,0.654,116,1.19,117,0.985,118,0.618,119,0.691,120,0.618,121,0.654,122,0.654,123,1.043,124,0.618,125,0.691,126,0.618,127,1.043,128,0.691,129,0.618,130,0.691,131,0.618,132,0.691,133,0.691,134,0.691,135,0.618,136,0.638,137,0.691,138,0.618,139,0.654,140,0.618,141,0.858,142,0.691,143,0.618,144,1.328,145,0.691,146,0.96,147,0.618,148,0.618,149,0.691,150,0.618,151,0.691,152,0.691,153,0.618,154,0.654,155,0.691,156,0.618,157,0.654,158,0.691,159,0.618,160,0.654,161,0.691,162,0.654,163,0.691,164,0.654,165,0.691,166,0.654,167,1.043,168,0.618,169,0.691,170,0.618,171,0.654,172,0.618,173,0.691,174,0.691,175,0.013,176,0.013,203,2.289,226,2.439,241,1.975,242,1.918,376,1.308,379,1.816,415,2.32,417,2.241,424,1.92,427,2.154,428,2.154,435,3.29,440,1.552,441,1.552,447,4.173,456,2.154,473,1.321,522,2.032,532,1.239,533,1.552,572,2.289,573,1.92,574,2.289,575,2.607,579,2.154,580,2.154,581,2.84,582,2.906,583,2.673,584,3.026,589,1.552,592,2.673,593,2.154,594,2.154,605,2.289,606,2.289,615,2.84,624,2.154,625,2.289,627,3.295,634,3.026,639,2.439,641,1.552,642,4.08,717,3.295,723,1.816,759,5.653,763,2.8,802,3.295,803,3.634,810,3.025,811,3.235,834,3.295,1164,2.289,1316,3.025,1327,2.017,1436,3.634,1437,2.945,1488,4.503,1520,4.508,1521,5.07,1770,4.08,1828,4.087,1960,4.173,1993,2.945,1994,3.44,1995,4.775,1996,4.736,1997,5.924,1998,3.44,1999,4.775,2000,4.775,2001,6.44,2002,4.087,2003,4.775,2004,3.44,2005,4.775,2006,4.775,2007,4.775,2008,5.924,2009,4.775,2010,4.775,2011,5.924,2012,4.775,2013,4.775,2014,6.44,2015,5.924,2016,5.924,2017,3.44,2018,5.924,2019,5.924,2020,4.775,2021,4.775,2022,4.775,2023,3.44,2024,3.44,2025,3.44,2026,3.44,2027,3.44,2028,3.44,2029,3.44]],["title/components/PasswordResetComponent.html",[0,0.01,147,0.647]],["body/components/PasswordResetComponent.html",[0,0.014,1,0.556,2,0.842,3,0.136,4,0.116,5,0.621,6,0.621,7,0.621,8,0.116,12,0.621,13,1.51,14,1.51,16,0.89,17,0.936,18,0.89,20,0.556,21,0.556,22,0.588,23,0.556,24,0.556,25,0.588,26,0.588,28,0.89,30,1.78,32,0.136,33,0.223,34,1.911,36,0.477,38,0.492,40,0.644,41,0.021,42,0.626,43,0.676,44,0.676,45,1.684,47,0.408,48,1.087,51,0.482,52,0.693,53,0.218,54,1.689,70,1.176,71,0.136,72,0.136,74,0.701,78,0.294,88,2.676,93,0.621,94,0.89,95,0.842,96,0.621,97,1.135,98,0.621,99,0.588,100,0.588,101,1.135,102,0.621,103,0.588,104,0.654,105,0.984,106,1.04,107,0.556,108,1.202,109,0.588,110,0.813,111,1.135,112,0.556,113,0.621,114,0.621,115,0.588,116,1.135,117,0.93,118,0.556,119,0.621,120,0.556,121,0.588,122,0.588,123,0.984,124,0.556,125,0.621,126,0.556,127,0.984,128,0.621,129,0.556,130,0.621,131,0.556,132,0.621,133,0.621,134,0.621,135,0.556,136,0.608,137,0.621,138,0.556,139,0.588,140,0.556,141,0.796,142,0.621,143,0.556,144,0.796,145,0.621,146,0.89,147,1.015,148,1.244,149,0.621,150,0.556,151,0.621,152,0.621,153,0.556,154,0.588,155,0.621,156,0.556,157,0.588,158,0.621,159,0.556,160,1.074,161,0.621,162,0.588,163,0.621,164,0.588,165,0.621,166,0.588,167,0.984,168,0.556,169,0.621,170,0.556,171,0.588,172,0.556,173,0.621,174,0.621,175,0.012,176,0.012,184,3.791,195,5.609,204,0.358,205,0.358,206,1.001,207,2.647,223,2.806,241,1.595,291,1.291,295,1.647,315,3.278,320,3.178,321,1.176,340,2.597,347,2.647,378,1.589,387,0.686,402,0.812,465,2.149,473,1.431,480,2.419,504,2.597,723,1.968,727,4.3,779,1.813,884,3.37,887,2.481,893,3.37,1024,4.429,1149,3.791,1164,2.123,1258,4.227,1333,3.571,1336,3.571,1337,4.429,1340,3.899,1351,3.057,1352,3.057,1353,3.791,1359,3.057,1363,4.836,1375,2.134,1376,3.571,1383,2.134,1384,3.057,1385,3.791,1390,3.37,1401,2.134,1407,3.057,1411,3.057,1460,2.806,1572,3.057,1575,3.571,1586,3.057,1587,3.057,1606,3.58,1607,3.899,1621,3.057,1646,4.3,1648,3.791,1650,3.057,1653,2.647,1654,2.647,1672,2.647,1696,2.647,1698,2.353,1713,4.294,1744,3.791,1746,3.37,1752,3.37,2030,6.022,2031,6.022,2032,2.647,2033,4.429,2034,4.429,2035,5.174,2036,5.98,2037,4.429,2038,3.092,2039,3.092,2040,3.791,2041,3.791,2042,3.791,2043,4.429,2044,5.98,2045,3.092,2046,4.429,2047,4.429,2048,6.222,2049,5.65,2050,5.65,2051,4.429,2052,3.092,2053,4.429,2054,4.429,2055,3.092,2056,3.092,2057,3.092,2058,5.174,2059,4.429,2060,4.429,2061,3.092,2062,3.092,2063,3.092,2064,4.429,2065,3.092,2066,3.092,2067,3.092,2068,3.092,2069,3.092,2070,3.092,2071,3.092,2072,3.092,2073,4.429,2074,2.647,2075,2.647,2076,2.647,2077,3.092,2078,3.092,2079,3.092,2080,3.092,2081,3.092,2082,3.791,2083,4.429,2084,4.429,2085,4.429,2086,4.429,2087,4.429,2088,4.429]],["title/components/PrivacyPolicyComponent.html",[0,0.01,150,0.647]],["body/components/PrivacyPolicyComponent.html",[0,0.014,1,0.553,2,0.839,3,0.135,4,0.116,5,0.619,6,0.619,7,0.619,8,0.116,12,0.619,13,1.51,14,1.51,16,0.887,17,0.664,18,0.619,20,0.553,21,0.553,22,0.585,23,0.553,24,0.553,25,0.585,26,0.585,28,0.887,30,1.775,32,0.135,33,0.222,36,0.475,38,0.364,40,0.331,41,0.02,42,0.435,43,0.307,44,0.307,47,0.281,48,0.749,49,3.572,51,0.342,53,0.217,71,0.135,72,0.135,74,0.547,78,0.34,93,0.619,94,0.887,95,0.839,96,0.619,97,1.133,98,0.619,99,0.585,100,0.585,101,1.133,102,0.619,103,0.585,104,0.652,105,1.135,106,1.037,107,0.553,108,1.2,109,0.585,110,0.77,111,1.133,112,0.553,113,0.619,114,0.619,115,0.585,116,1.133,117,0.927,118,0.553,119,0.619,120,0.553,121,0.585,122,0.585,123,0.981,124,0.553,125,0.619,126,0.553,127,0.981,128,0.619,129,0.553,130,0.619,131,0.553,132,0.619,133,0.619,134,0.619,135,0.553,136,0.607,137,0.619,138,0.553,139,0.585,140,0.553,141,0.793,142,0.619,143,0.553,144,0.793,145,0.619,146,0.887,147,0.553,148,0.553,149,0.619,150,1.013,151,1.286,152,0.619,153,0.553,154,0.585,155,0.619,156,0.553,157,0.585,158,0.619,159,0.553,160,0.585,161,0.619,162,0.585,163,0.619,164,0.585,165,0.619,166,0.585,167,0.981,168,0.553,169,0.619,170,0.553,171,0.585,172,0.553,173,0.619,174,0.619,175,0.012,176,0.012,204,0.356,205,0.356,340,2.589,387,0.408,402,0.808,409,1.476,569,3.047,570,3.36,571,1.775,628,3.047,744,2.255,916,3.779,993,2.797,995,4.454,999,3.936,1016,3.779,1055,3.36,1061,3.572,1150,4.291,1232,4.982,1240,4.826,1283,2.589,1284,2.589,1384,3.047,1390,4.728,1405,4.826,1406,3.779,1407,3.047,1411,3.047,1460,4.147,1562,5,1575,3.562,1576,4.291,1577,2.343,1578,4.291,1580,3.36,1582,3.779,1583,3.779,1584,3.779,1585,2.589,1586,3.047,1587,3.047,1588,2.343,1590,4.826,1591,4.826,1592,4.826,1593,4.826,1594,4.826,1705,3.779,1709,4.826,1713,3.047,1717,3.36,1722,4.826,1731,5.789,1735,5.147,2089,4.826,2090,4.826,2091,2.635,2092,4.415,2093,4.415,2094,4.415,2095,4.415,2096,3.079,2097,6.546,2098,4.415,2099,4.415,2100,6.546,2101,4.415,2102,7.366,2103,6.213,2104,4.415,2105,4.415,2106,4.415,2107,4.415,2108,5.639,2109,5.639,2110,4.415,2111,4.415,2112,5.639,2113,4.415,2114,6.213,2115,4.415,2116,4.415,2117,4.415,2118,5.639,2119,4.415,2120,5.639,2121,5.639,2122,4.415,2123,4.415,2124,5.639,2125,4.415,2126,4.415,2127,4.415,2128,5.639,2129,4.415,2130,4.415,2131,4.415,2132,4.415,2133,5.639,2134,4.415,2135,4.415,2136,4.415,2137,4.415,2138,4.415,2139,4.415,2140,4.415,2141,4.826,2142,4.415,2143,4.415,2144,4.415,2145,4.415,2146,4.415,2147,5.639,2148,4.415,2149,4.415,2150,4.415,2151,4.415,2152,4.415,2153,4.415,2154,4.415,2155,6.213,2156,5.639,2157,4.415,2158,3.779,2159,4.415,2160,5.639,2161,4.415,2162,4.415,2163,5.639,2164,5.639,2165,5.639,2166,4.415,2167,5.639,2168,6.213,2169,4.415,2170,4.415,2171,4.415,2172,4.415,2173,4.415,2174,4.415,2175,4.415,2176,4.415,2177,4.415,2178,4.415,2179,4.415,2180,4.415,2181,4.415,2182,4.415,2183,4.415,2184,4.415,2185,4.415,2186,4.415]],["title/components/ProfilOptionsPopupComponent.html",[0,0.01,153,0.647]],["body/components/ProfilOptionsPopupComponent.html",[0,0.012,1,0.444,2,0.714,3,0.109,4,0.093,5,0.497,6,0.497,7,0.497,8,0.093,12,0.497,13,1.487,14,1.487,16,0.755,17,0.864,18,0.755,20,0.444,21,0.444,22,0.47,23,0.444,24,0.444,25,0.47,26,0.47,28,0.755,32,0.165,33,0.189,34,1.557,36,0.404,38,0.466,40,0.678,41,0.021,42,0.771,43,0.506,44,0.506,45,1.428,47,0.239,48,0.419,51,0.462,52,0.554,53,0.174,54,1.35,70,0.94,71,0.109,72,0.109,74,0.858,78,0.288,82,1.153,85,1.185,93,0.497,94,0.755,95,0.714,96,0.497,97,1.019,98,0.497,99,0.47,100,0.47,101,1.019,102,0.497,103,0.47,104,0.664,105,0.863,106,0.912,107,0.444,108,1.095,109,0.47,110,0.712,111,1.019,112,0.444,113,0.497,114,0.497,115,0.47,116,1.019,117,0.816,118,0.444,119,0.497,120,0.444,121,0.47,122,0.47,123,1.036,124,0.444,125,0.497,126,0.444,127,1.297,128,0.497,129,0.444,130,0.497,131,0.444,132,0.497,133,1.153,134,0.497,135,0.444,136,0.587,137,0.497,138,0.444,139,0.47,140,0.444,141,0.675,142,0.497,143,0.444,144,0.911,145,0.497,146,0.755,147,0.444,148,0.444,149,0.497,150,0.444,151,0.497,152,0.497,153,0.911,154,1.403,155,0.497,156,0.444,157,0.47,158,0.497,159,0.444,160,0.863,161,0.497,162,0.47,163,0.497,164,0.47,165,0.497,166,0.47,167,0.863,168,0.444,169,0.497,170,0.444,171,0.47,172,0.444,173,0.497,174,0.497,175,0.01,176,0.01,181,2.098,187,5.26,191,2.176,198,4.344,203,2.752,204,0.434,205,0.434,206,0.8,214,2.591,219,3.214,222,2.768,225,3.498,226,1.918,238,3.257,240,2.591,241,2.349,242,1.858,244,0.8,249,4.912,256,2.857,287,1.694,288,1.185,289,0.89,291,0.721,295,0.721,318,2.857,321,0.94,361,1.263,376,0.94,378,1.394,379,1.428,381,2.319,385,2.287,387,0.328,393,2.05,402,0.649,407,1.35,409,1.185,415,1.963,416,1.052,417,2.148,424,2.398,425,1.694,428,1.694,429,1.185,433,2.379,434,1.185,435,2.589,440,1.115,441,2.287,442,1.738,456,1.115,462,1.185,465,2.337,466,4.368,468,2.857,472,4.368,473,1.775,480,2.05,487,2.202,488,3.611,494,1.8,509,1.918,510,1.825,522,1.598,532,0.89,533,1.115,540,1.263,569,1.706,571,1.509,572,1.8,573,1.509,574,1.185,576,1.263,579,2.048,580,2.048,581,2.613,582,2.984,583,2.59,584,1.918,590,1.45,592,2.46,593,2.287,594,2.048,596,1.8,598,2.589,602,1.566,603,1.35,605,1.185,606,1.185,607,1.35,612,2.379,613,2.479,615,2.946,616,2.202,618,1.185,619,2.379,624,1.115,625,1.185,626,2.116,631,2.202,634,1.918,635,1.35,641,1.115,703,3.212,706,2.379,714,3.214,717,3.499,719,2.589,723,2.073,731,3.858,734,3.604,735,2.379,737,3.212,738,3.212,739,3.134,740,2.591,741,2.591,742,2.591,744,2.589,762,2.973,763,2.973,794,2.05,795,1.45,796,1.566,797,1.45,806,2.05,809,1.45,811,2.977,825,3.654,874,1.881,893,1.881,932,2.857,1037,2.857,1068,2.202,1164,3.208,1186,3.214,1247,3.133,1252,2.857,1253,3.214,1254,2.857,1255,4.677,1260,2.857,1262,3.214,1263,2.857,1264,3.214,1265,3.214,1274,2.116,1299,4.539,1309,1.566,1327,1.45,1329,1.45,1378,1.881,1419,1.881,1436,1.881,1488,2.379,1493,2.857,1500,5.092,1502,3.214,1503,2.116,1504,1.881,1505,1.881,1511,3.214,1512,3.214,1513,3.214,1520,2.857,1533,2.857,1570,2.116,1585,2.202,1607,3.499,1613,3.214,1615,3.858,1616,4.339,1621,2.591,1650,2.591,1664,2.116,1674,1.706,1689,1.881,1690,2.116,1693,2.116,1770,1.566,2187,5.727,2188,2.116,2189,2.472,2190,3.755,2191,5.069,2192,5.069,2193,3.755,2194,2.472,2195,2.472,2196,4.339,2197,3.214,2198,6.523,2199,2.472,2200,2.472,2201,2.472,2202,3.755,2203,3.755,2204,2.472,2205,2.472,2206,3.214,2207,2.472,2208,2.472,2209,2.472,2210,3.755,2211,2.472,2212,2.472,2213,2.472,2214,2.472,2215,2.472,2216,2.472,2217,2.472,2218,2.472,2219,2.472,2220,2.472,2221,2.472,2222,4.539,2223,3.755,2224,5.739,2225,3.755,2226,3.755,2227,2.116,2228,2.472,2229,2.472,2230,3.755,2231,2.472]],["title/components/ReactionListComponent.html",[0,0.01,156,0.647]],["body/components/ReactionListComponent.html",[0,0.015,1,0.638,2,0.928,3,0.156,4,0.134,5,0.714,6,0.714,7,0.714,8,0.134,12,0.714,13,1.522,14,1.522,16,0.981,17,0.735,18,0.981,20,0.638,21,0.638,22,0.675,23,0.638,24,0.638,25,0.675,26,0.675,28,0.981,30,1.963,32,0.156,33,0.246,34,1.845,36,0.526,37,2.556,38,0.5,40,0.7,41,0.021,42,0.849,43,0.487,44,0.487,45,1.857,47,0.432,48,1.103,51,0.488,52,0.796,53,0.25,70,1.351,71,0.156,72,0.156,74,0.781,76,1.667,78,0.386,82,1.713,93,0.714,94,0.981,95,0.928,96,0.714,97,1.207,98,0.714,99,0.675,100,0.675,101,1.207,102,0.714,103,0.675,104,0.695,105,1.06,106,1.121,107,0.638,108,1.265,109,0.675,110,0.807,111,1.207,112,0.638,113,0.714,114,0.714,115,0.675,116,1.207,117,1.002,118,0.638,119,0.714,120,0.638,121,0.675,122,0.675,123,1.06,124,0.638,125,0.714,126,0.638,127,1.06,128,0.714,129,0.638,130,0.714,131,0.638,132,0.714,133,0.714,134,0.714,135,0.638,136,0.647,137,0.714,138,0.638,139,0.675,140,0.638,141,0.877,142,0.714,143,0.638,144,0.877,145,0.714,146,0.981,147,0.638,148,0.638,149,0.714,150,0.638,151,0.714,152,0.714,153,0.638,154,0.675,155,0.714,156,1.079,157,1.29,158,0.714,159,0.638,160,0.675,161,0.714,162,0.675,163,0.714,164,0.675,165,0.714,166,0.675,167,1.06,168,0.638,169,0.714,170,0.638,171,0.675,172,0.638,173,0.714,174,0.714,175,0.013,176,0.013,181,2.274,204,0.695,205,0.695,242,1.581,244,1.806,287,1.603,288,1.703,289,1.28,291,1.036,295,1.036,378,1.713,387,0.647,402,0.933,404,2.48,405,1.603,406,1.351,442,1.036,450,2.517,492,3.046,510,1.428,512,1.94,516,1.703,534,2.084,535,2.251,536,2.251,537,2.084,538,1.94,539,1.94,540,1.815,544,1.28,550,2.084,551,2.084,552,2.084,553,2.084,554,2.084,557,2.084,650,4.245,701,3.85,704,4.179,708,4.571,709,4.145,710,2.452,721,4.179,724,1.94,770,3.093,781,2.452,782,2.452,785,2.704,898,2.084,919,3.37,925,2.251,938,2.251,972,2.704,974,2.704,975,2.704,999,3.093,1068,2.084,1125,2.251,1215,2.704,1218,3.716,1555,5.437,1567,3.041,1568,3.041,2232,6.115,2233,3.041,2234,4.882,2235,4.882,2236,4.882,2237,4.882,2238,3.553,2239,3.553,2240,3.553,2241,3.553,2242,3.553,2243,3.553,2244,3.553,2245,3.553,2246,3.553,2247,3.553,2248,3.553,2249,4.882]],["title/components/ResetPasswordComponent.html",[0,0.01,159,0.647]],["body/components/ResetPasswordComponent.html",[0,0.014,1,0.579,2,0.867,3,0.142,4,0.121,5,0.648,6,0.648,7,0.648,8,0.121,12,0.648,13,1.514,14,1.514,16,0.916,17,0.914,18,0.916,20,0.579,21,0.579,22,0.613,23,0.579,24,0.579,25,0.613,26,0.613,28,0.916,30,1.833,32,0.142,33,0.23,34,1.937,36,0.491,38,0.481,40,0.491,41,0.021,42,0.645,43,0.647,44,0.647,45,1.734,47,0.366,48,0.976,51,0.489,52,0.722,53,0.227,54,1.76,70,1.225,71,0.142,72,0.142,74,0.714,76,2.153,78,0.301,93,0.648,94,0.916,95,0.867,96,0.648,97,1.157,98,0.648,99,0.613,100,0.613,101,1.157,102,0.648,103,0.613,104,0.666,105,1.006,106,1.064,107,0.579,108,1.221,109,0.613,110,0.782,111,1.157,112,0.579,113,0.648,114,0.648,115,0.613,116,1.157,117,0.951,118,0.579,119,0.648,120,0.579,121,0.613,122,0.613,123,1.006,124,0.579,125,0.648,126,0.579,127,1.006,128,0.648,129,0.579,130,0.648,131,0.579,132,0.648,133,0.648,134,0.648,135,0.579,136,0.62,137,0.648,138,0.579,139,0.613,140,0.579,141,0.819,142,0.648,143,0.579,144,0.819,145,0.648,146,0.916,147,0.579,148,1.133,149,0.648,150,0.579,151,0.648,152,0.648,153,0.579,154,0.613,155,0.648,156,0.579,157,0.613,158,0.648,159,1.034,160,1.299,161,0.648,162,0.613,163,0.648,164,0.613,165,0.648,166,0.613,167,1.006,168,0.579,169,0.648,170,0.579,171,0.613,172,0.579,173,0.648,174,0.648,175,0.012,176,0.012,188,3.903,204,0.373,205,0.373,214,3.147,223,2.889,295,0.939,314,2.758,315,3.849,320,2.704,329,2.758,330,2.224,340,2.675,378,1.626,387,0.427,402,1.197,409,1.545,465,1.734,473,1.464,480,2.49,728,2.452,744,3.529,762,2.675,771,3.903,779,1.89,887,2.186,977,2.758,993,2.889,994,3.903,995,3.647,996,3.903,1000,3.147,1037,3.471,1061,3.354,1164,2.186,1258,4.108,1283,4.051,1284,3.562,1333,3.653,1336,3.653,1340,3.973,1351,3.147,1352,3.147,1359,3.147,1361,3.471,1366,3.471,1367,4.8,1368,4.38,1369,3.471,1370,3.471,1371,3.471,1375,2.224,1376,2.224,1383,3.147,1384,3.147,1401,2.224,1407,2.224,1460,3.354,1572,3.147,1575,3.653,1576,4.38,1577,2.452,1578,4.8,1580,3.471,1585,2.675,1586,3.147,1587,3.147,1588,2.452,1607,3.973,1621,3.973,1622,3.903,1625,3.903,1637,3.903,1646,3.471,1650,3.147,1666,2.758,1671,2.758,1698,2.452,1704,2.758,1713,3.973,1717,3.471,1718,3.903,1735,3.471,1741,3.903,1746,3.471,1752,3.471,2041,3.903,2042,3.903,2074,2.758,2075,2.758,2082,3.903,2141,3.903,2158,3.903,2250,5.913,2251,5.913,2252,2.758,2253,4.56,2254,4.56,2255,6.074,2256,3.222,2257,3.222,2258,4.56,2259,4.56,2260,3.903,2261,4.56,2262,3.222,2263,4.56,2264,3.222,2265,3.222,2266,3.222,2267,3.222,2268,3.222,2269,3.222,2270,3.222,2271,3.222,2272,3.222,2273,4.56,2274,3.222,2275,3.222,2276,3.222,2277,3.222,2278,5.756,2279,4.56,2280,4.56,2281,4.56,2282,4.56]],["title/injectables/ResponsiveService.html",[177,0.576,385,1.625]],["body/injectables/ResponsiveService.html",[3,0.235,4,0.201,8,0.201,15,1.824,17,0.954,32,0.235,33,0.319,38,0.516,41,0.021,43,0.723,44,0.723,51,0.414,53,0.377,71,0.235,72,0.235,175,0.017,176,0.017,177,1.014,178,1.824,290,1.925,385,2.862,387,0.897,473,2.063,616,3.967,655,5.79,2283,4.574,2284,6.764,2285,6.764,2286,6.764,2287,5.79,2288,6.343,2289,5.344,2290,5.344,2291,5.344,2292,5.344,2293,5.344]],["title/injectables/RevealPasswordService.html",[177,0.576,1606,2.282]],["body/injectables/RevealPasswordService.html",[3,0.208,4,0.178,8,0.178,15,1.618,32,0.208,33,0.297,36,0.635,38,0.519,40,0.691,41,0.021,42,0.907,43,0.713,44,0.713,47,0.466,48,1.255,51,0.367,53,0.334,71,0.208,72,0.208,80,4.43,148,1.283,175,0.016,176,0.016,177,0.943,178,1.618,290,1.707,340,4.13,387,0.851,473,1.631,887,2.827,1606,3.736,1770,4.377,1786,5.494,2294,6.336,2295,4.056,2296,6.419,2297,6.419,2298,6.716,2299,6.716,2300,6.716,2301,5.896,2302,4.739,2303,4.739,2304,4.739,2305,6.716,2306,4.739,2307,4.739,2308,5.896,2309,4.739,2310,4.739,2311,4.739,2312,4.739,2313,6.716,2314,4.739,2315,4.739,2316,5.896,2317,4.739,2318,4.739,2319,5.896,2320,4.739,2321,4.739]],["title/injectables/SaveNewUserService.html",[177,0.576,284,2.486]],["body/injectables/SaveNewUserService.html",[3,0.201,4,0.173,8,0.173,15,1.566,32,0.201,33,0.291,36,0.622,38,0.5,40,0.622,41,0.021,43,0.663,44,0.663,47,0.451,48,1.298,51,0.448,53,0.323,71,0.201,72,0.201,76,2.488,78,0.421,82,2.178,136,0.772,175,0.016,176,0.016,177,0.923,178,1.566,181,2.384,183,4.944,191,3.032,204,0.732,205,0.732,242,2.261,243,4.581,244,1.485,257,4.812,284,3.987,287,2.069,289,1.652,290,1.652,291,1.337,295,1.337,361,2.343,387,0.608,409,2.199,462,2.199,510,1.844,540,2.951,724,2.505,1180,5.413,1615,4.396,1689,4.396,2076,3.926,2322,6.139,2323,3.926,2324,6.324,2325,6.324,2326,4.586,2327,5.777,2328,4.586,2329,5.777,2330,4.586,2331,4.586,2332,4.586,2333,4.586,2334,4.586,2335,4.586,2336,4.586,2337,4.586,2338,4.586,2339,4.586]],["title/injectables/SearchService.html",[177,0.576,1536,2.486]],["body/injectables/SearchService.html",[3,0.161,4,0.138,8,0.138,15,1.248,32,0.161,33,0.251,36,0.536,38,0.482,40,0.746,41,0.021,42,0.517,43,0.497,44,0.497,47,0.417,48,1.235,51,0.471,52,0.819,53,0.258,71,0.161,72,0.161,78,0.373,82,1.122,104,0.777,110,0.453,117,1.28,141,1.309,175,0.014,176,0.014,177,0.796,178,1.248,181,2.239,191,3.417,204,0.736,205,0.736,206,1.967,209,5.095,210,5.848,232,3.153,244,2.058,289,1.316,290,1.316,291,1.65,295,2.139,321,2.311,361,3.104,387,0.484,409,1.752,442,1.065,462,1.752,473,1.566,479,3.153,492,3.731,495,3.104,509,3.64,510,1.469,522,2.118,532,1.316,538,1.996,585,5.615,724,3.731,727,4.625,758,5.202,872,5.202,887,2.386,903,2.522,1263,4.625,1536,3.435,1674,4.194,1676,3.788,1703,5.615,1770,2.315,1996,4.308,2227,4.26,2340,3.128,2341,5.66,2342,4.977,2343,6.077,2344,4.977,2345,4.977,2346,4.977,2347,4.977,2348,4.977,2349,3.655,2350,6.358,2351,3.655,2352,4.977,2353,3.655,2354,6.56,2355,7.338,2356,6.56,2357,6.56,2358,6.56,2359,6.56,2360,4.977,2361,3.655,2362,6.077,2363,4.977,2364,3.655,2365,3.655,2366,3.655,2367,3.655,2368,3.655,2369,5.66,2370,5.66,2371,4.977,2372,4.977,2373,4.977,2374,3.655,2375,3.655,2376,4.977,2377,3.655,2378,3.655,2379,3.655,2380,3.655,2381,4.977,2382,3.655,2383,3.655,2384,3.655,2385,3.655,2386,4.977,2387,4.977,2388,3.655,2389,4.977,2390,3.655,2391,3.655,2392,3.655,2393,3.655,2394,4.977,2395,3.655,2396,3.655,2397,3.655,2398,3.655,2399,3.655,2400,3.655,2401,3.655]],["title/injectables/SidebarService.html",[177,0.576,532,1.297]],["body/injectables/SidebarService.html",[3,0.115,4,0.098,8,0.098,15,0.89,17,0.588,32,0.115,33,0.197,36,0.421,38,0.53,40,0.561,41,0.021,42,0.736,43,0.746,44,0.746,47,0.47,48,1.274,51,0.404,52,0.584,53,0.184,71,0.115,72,0.115,78,0.222,88,1.487,104,0.302,175,0.011,176,0.011,177,0.625,178,0.89,181,2.073,191,1.874,204,0.452,205,0.452,244,0.844,289,0.939,290,0.939,295,1.972,320,2.66,361,1.997,387,0.518,389,2.844,404,2.187,406,0.992,442,1.77,459,3.568,462,1.25,473,1.979,489,3.568,494,3.274,498,4.013,500,4.013,509,1.997,510,1.049,516,1.25,532,1.408,538,1.424,544,1.408,563,3.595,571,1.885,656,2.975,697,4.013,724,2.135,749,4.013,750,4.013,751,4.013,752,4.013,753,4.013,754,4.013,825,2.561,903,2.698,1252,3.568,1259,4.013,1493,3.568,1562,2.698,1673,3.346,1674,3.595,1675,2.232,1676,3.964,1678,4.458,1679,3.346,1680,4.458,1685,3.346,1686,3.346,1687,3.346,1688,2.232,2002,4.013,2402,2.232,2403,4.689,2404,4.689,2405,4.689,2406,4.689,2407,4.689,2408,4.013,2409,4.689,2410,4.689,2411,4.689,2412,4.689,2413,4.689,2414,4.689,2415,4.689,2416,4.689,2417,4.689,2418,4.689,2419,4.689,2420,4.689,2421,4.689,2422,4.689,2423,4.689,2424,4.689,2425,4.689,2426,4.689,2427,4.689,2428,4.689,2429,4.689,2430,4.689,2431,4.689,2432,4.689,2433,5.857,2434,5.857,2435,5.208,2436,3.909,2437,2.608,2438,2.608,2439,3.909,2440,2.608,2441,2.608,2442,2.608,2443,2.608,2444,2.608,2445,2.608,2446,2.608,2447,2.608,2448,2.608,2449,2.608,2450,2.608,2451,2.608,2452,2.608,2453,2.608,2454,2.608,2455,2.608,2456,2.608,2457,2.608,2458,2.608,2459,2.608,2460,2.608,2461,2.608,2462,2.608,2463,2.608,2464,2.608,2465,2.608,2466,2.608,2467,2.608,2468,2.608,2469,2.608,2470,2.608,2471,2.608,2472,2.608,2473,2.608,2474,2.608,2475,2.608,2476,2.608,2477,2.608,2478,2.608,2479,2.608,2480,2.608,2481,2.608,2482,2.608,2483,2.608,2484,3.909,2485,2.608,2486,2.608,2487,2.608,2488,2.608,2489,2.608,2490,2.232,2491,2.608,2492,3.909,2493,2.608,2494,2.608,2495,2.608,2496,2.608,2497,2.608,2498,3.909,2499,2.608,2500,3.346,2501,3.909,2502,3.909,2503,3.909,2504,3.909,2505,3.909,2506,3.909,2507,2.608,2508,2.608,2509,3.909,2510,2.608,2511,3.909,2512,3.909,2513,3.909,2514,3.909,2515,3.909,2516,3.909,2517,3.909,2518,2.608,2519,2.608,2520,3.909,2521,2.608,2522,3.909,2523,3.909,2524,3.909,2525,3.909,2526,3.909,2527,3.909,2528,2.608,2529,3.909,2530,2.608,2531,2.608,2532,2.608,2533,2.608,2534,2.608,2535,2.608,2536,2.608,2537,2.608,2538,2.608,2539,2.608,2540,3.909,2541,2.608,2542,2.608,2543,2.608,2544,3.909,2545,3.909,2546,3.909,2547,3.909,2548,3.909,2549,3.909,2550,3.909,2551,3.909,2552,2.608,2553,3.909,2554,3.909,2555,3.909,2556,3.909,2557,2.608]],["title/components/ThreadComponent.html",[0,0.01,168,0.647]],["body/components/ThreadComponent.html",[0,0.015,1,0.687,2,0.975,3,0.168,4,0.144,5,0.768,6,0.768,7,0.768,8,0.144,10,2.315,11,2.613,12,0.768,13,1.528,14,1.528,16,1.031,17,0.772,18,1.031,20,0.687,21,0.687,22,0.727,23,0.687,24,0.687,25,0.727,26,0.727,28,1.031,32,0.168,33,0.258,36,0.552,37,2.634,38,0.493,40,0.412,41,0.021,42,0.725,43,0.645,44,0.645,47,0.432,51,0.527,52,0.856,53,0.269,71,0.168,72,0.168,74,0.636,78,0.33,93,0.768,94,1.031,95,0.975,96,0.768,97,1.244,98,0.768,99,0.727,100,0.727,101,1.244,102,0.768,103,0.727,104,0.716,105,1.228,106,1.164,107,0.687,108,1.298,109,0.727,110,0.896,111,1.244,112,0.687,113,0.768,114,0.768,115,0.727,116,1.244,117,1.041,118,0.687,119,0.768,120,0.687,121,0.727,122,0.727,123,1.101,124,0.687,125,0.768,126,0.687,127,1.101,128,0.768,129,0.687,130,0.768,131,0.687,132,0.768,133,0.768,134,0.768,135,0.687,136,0.666,137,0.768,138,0.687,139,0.727,140,0.687,141,0.922,142,0.768,143,0.687,144,0.922,145,0.768,146,1.031,147,0.687,148,0.687,149,0.768,150,0.687,151,0.768,152,0.768,153,0.687,154,0.727,155,0.768,156,0.687,157,0.727,158,0.768,159,0.687,160,0.727,161,0.768,162,0.727,163,0.768,164,0.727,165,0.768,166,1.177,167,1.373,168,1.112,169,0.768,170,1.112,171,1.177,172,0.687,173,0.768,174,0.768,175,0.014,176,0.014,181,2.269,204,0.442,205,0.442,289,1.377,376,1.454,379,1.952,381,2.958,385,2.793,387,0.507,393,2.802,396,2.638,398,2.909,400,2.638,407,2.088,409,1.833,415,1.377,416,2.184,417,1.848,440,1.725,442,1.496,462,1.833,494,1.833,510,1.537,512,2.088,516,1.833,534,2.242,539,2.088,573,1.537,641,1.725,925,3.251,2558,3.272,2559,3.823,2560,5.131,2561,5.792,2562,5.792,2563,5.792,2564,5.792,2565,5.792,2566,5.131,2567,5.131,2568,3.823,2569,3.823,2570,3.823,2571,3.823,2572,3.823,2573,3.823,2574,3.823,2575,3.272,2576,3.272,2577,2.909,2578,3.823,2579,5.131,2580,3.823,2581,3.823,2582,3.823]],["title/components/ThreadHeaderComponent.html",[0,0.01,170,0.647]],["body/components/ThreadHeaderComponent.html",[0,0.014,1,0.594,2,0.883,3,0.145,4,0.125,5,0.665,6,0.665,7,0.665,8,0.125,12,0.665,13,1.516,14,1.516,16,0.934,17,0.699,18,0.934,20,0.594,21,0.594,22,0.629,23,0.594,24,0.594,25,0.629,26,0.629,28,0.934,30,1.868,32,0.145,33,0.234,36,0.5,38,0.484,40,0.66,41,0.021,42,0.924,43,0.464,44,0.635,47,0.405,51,0.507,52,0.741,53,0.233,71,0.145,72,0.145,74,0.576,78,0.305,93,0.665,94,0.934,95,0.883,96,0.665,97,1.17,98,0.665,99,0.629,100,0.629,101,1.17,102,0.665,103,0.629,104,0.795,105,1.021,106,1.079,107,0.594,108,1.233,109,0.629,110,0.789,111,1.17,112,0.594,113,0.665,114,0.665,115,0.629,116,1.17,117,0.965,118,0.594,119,0.665,120,0.594,121,0.629,122,0.629,123,1.021,124,0.594,125,0.665,126,0.594,127,1.021,128,0.665,129,0.594,130,0.665,131,0.594,132,0.665,133,0.665,134,0.665,135,0.594,136,0.627,137,0.665,138,0.594,139,0.629,140,0.594,141,0.835,142,0.665,143,0.594,144,1.046,145,0.665,146,0.934,147,0.594,148,0.594,149,0.665,150,0.594,151,0.665,152,0.665,153,0.594,154,0.629,155,0.665,156,0.594,157,0.629,158,0.665,159,0.594,160,0.629,161,0.665,162,0.629,163,0.665,164,0.629,165,0.665,166,0.629,167,1.373,168,0.594,169,0.665,170,1.046,171,0.629,172,0.594,173,0.665,174,0.665,175,0.013,176,0.013,181,2.314,203,2.792,204,0.383,205,0.383,222,2.537,244,1.504,287,1.492,288,1.586,289,1.191,291,1.697,295,0.964,331,2.724,378,1.649,383,4.234,385,2.627,387,0.616,388,2.831,389,3.474,393,2.537,402,0.868,403,2.517,404,2.474,405,1.492,406,1.258,407,1.806,444,2.096,445,2.227,448,2.943,450,2.87,451,4.028,452,4.668,461,4.234,463,2.831,465,1.767,467,3.976,473,0.915,474,3.976,492,1.806,508,2.943,509,2.743,510,2.159,512,1.806,515,3.535,516,1.586,520,3.535,523,2.831,526,2.831,528,2.831,534,1.94,535,2.096,536,2.096,537,1.94,538,1.806,539,1.806,540,1.69,541,2.517,542,2.517,543,2.943,544,1.673,545,2.517,546,3.535,547,2.283,550,1.94,551,1.94,552,1.94,553,1.94,554,1.94,555,2.517,556,2.517,557,1.94,558,2.517,559,2.517,616,2.724,705,4.984,719,2.373,725,3.535,757,3.976,762,2.724,768,3.976,932,3.535,1164,3.293,1189,2.517,1473,3.976,1505,2.517,1877,2.831,2197,3.976,2408,5.25,2490,2.831,2500,2.831,2577,5.284,2583,5.943,2584,5.592,2585,3.308,2586,3.308,2587,4.646,2588,4.646,2589,3.308,2590,4.646,2591,4.646,2592,4.646,2593,3.976,2594,4.646,2595,4.646,2596,4.646,2597,5.823,2598,4.646,2599,3.308,2600,4.646,2601,3.308,2602,4.646]],["title/injectables/ThreadService.html",[177,0.576,389,1.967]],["body/injectables/ThreadService.html",[3,0.207,4,0.177,8,0.177,15,1.606,17,0.883,32,0.207,33,0.295,36,0.632,38,0.503,40,0.721,41,0.021,42,0.83,43,0.669,44,0.669,47,0.299,51,0.455,53,0.332,71,0.207,72,0.303,78,0.268,88,1.789,95,0.894,136,0.721,144,1.295,167,1.424,175,0.016,176,0.016,177,0.938,178,1.606,204,0.544,205,0.544,206,1.523,225,2.758,226,3.421,281,2.569,290,1.694,291,1.371,321,1.789,331,3.442,384,5.475,386,6.017,389,3.205,428,2.886,473,1.623,487,3.442,497,4.05,504,3.442,544,2.532,571,1.891,680,3.246,713,5.023,719,2.998,723,2.232,887,3.067,1144,5.733,1401,3.246,1750,5.733,2040,5.023,2287,5.733,2584,5.733,2603,4.026,2604,6.397,2605,5.868,2606,4.703,2607,5.868,2608,6.698,2609,4.703,2610,5.868,2611,4.703,2612,5.868,2613,5.868,2614,4.703,2615,4.703,2616,5.868,2617,4.703,2618,4.703,2619,4.703,2620,4.703,2621,4.703,2622,4.703,2623,4.703,2624,4.703,2625,4.703]],["title/interfaces/User.html",[74,0.447,373,1.84]],["body/interfaces/User.html",[3,0.247,4,0.212,8,0.212,32,0.247,33,0.329,41,0.02,47,0.452,48,1.282,71,0.247,74,0.81,76,2.428,78,0.405,82,2.184,175,0.018,176,0.018,242,2.302,373,2.871,374,3.88,2626,4.812]],["title/interfaces/UserInterFace.html",[282,2.486,373,1.84]],["body/interfaces/UserInterFace.html",[3,0.248,4,0.212,8,0.212,32,0.248,33,0.33,41,0.02,47,0.453,48,1.269,71,0.248,76,2.43,78,0.405,80,4.913,82,2.187,175,0.018,176,0.018,282,4.519,373,2.881,374,3.893,2627,4.828]],["title/components/UserProfilComponent.html",[0,0.01,172,0.647]],["body/components/UserProfilComponent.html",[0,0.013,1,0.477,2,0.753,3,0.117,4,0.1,5,0.533,6,0.533,7,0.533,8,0.1,12,0.533,13,1.495,14,1.495,16,0.796,17,0.846,18,0.796,20,0.477,21,0.477,22,0.504,23,0.477,24,0.477,25,0.504,26,0.504,28,0.796,32,0.174,33,0.199,34,1.613,35,2.587,36,0.426,38,0.473,40,0.565,41,0.021,42,0.743,43,0.588,44,0.588,45,1.506,47,0.357,48,0.671,51,0.474,52,0.594,53,0.187,70,1.009,71,0.117,72,0.117,74,0.882,76,1.793,78,0.347,93,0.533,94,0.796,95,0.753,96,0.533,97,1.056,98,0.533,99,0.504,100,0.504,101,1.056,102,0.533,103,0.504,104,0.608,105,0.9,106,0.952,107,0.477,108,1.129,109,0.504,110,0.822,111,1.056,112,0.477,113,0.533,114,0.533,115,0.504,116,1.227,117,0.851,118,0.477,119,0.533,120,0.477,121,0.504,122,0.504,123,1.121,124,0.477,125,0.533,126,0.477,127,1.29,128,0.533,129,0.477,130,0.533,131,0.477,132,0.533,133,0.533,134,0.533,135,0.477,136,0.565,137,0.533,138,0.477,139,0.504,140,0.477,141,0.711,142,0.533,143,0.477,144,0.711,145,0.533,146,0.796,147,0.477,148,0.477,149,0.533,150,0.477,151,0.533,152,0.533,153,0.477,154,0.504,155,0.533,156,0.477,157,0.504,158,0.533,159,0.477,160,0.504,161,0.533,162,0.504,163,0.533,164,0.504,165,0.533,166,0.504,167,0.9,168,0.477,169,0.533,170,0.477,171,0.504,172,0.944,173,0.533,174,0.533,175,0.011,176,0.011,203,2.271,204,0.458,205,0.458,206,0.859,231,3.013,238,2.587,241,2.468,242,1.908,321,1.009,331,2.322,339,3.878,376,1.009,378,1.455,379,1.506,381,2.419,385,2.37,387,0.525,393,2.162,402,0.696,404,2.2,405,1.197,406,1.506,407,1.449,415,2.418,416,2.391,417,2.522,422,1.831,424,2.845,425,2.137,427,1.197,429,2.271,434,1.898,441,1.786,442,1.531,445,1.898,450,2.137,456,1.786,466,3.997,473,0.734,478,2.778,488,3.428,522,1.685,532,0.955,533,1.197,544,0.955,571,2.259,572,3.132,573,2.626,574,2.518,575,2.587,576,2.022,578,2.778,579,2.137,580,2.137,581,1.272,582,2.895,583,2.833,584,2.022,589,1.786,590,1.556,592,2.948,593,2.833,594,2.833,596,1.272,598,3.011,605,2.271,606,2.271,607,1.449,609,2.27,613,1.449,615,1.898,618,2.826,619,3.328,624,2.37,625,2.518,634,2.87,635,2.162,639,2.683,641,1.786,703,3.328,706,2.508,719,2.419,723,1.009,735,2.508,737,2.508,738,2.508,739,3.069,740,2.732,744,2.683,745,3.389,746,3.013,788,5.045,789,2.508,794,1.449,795,1.556,796,1.681,797,1.556,806,2.587,809,3.08,810,1.681,811,2.162,812,2.732,813,1.831,814,1.831,818,3.625,825,2.587,832,2.732,833,1.681,1139,3.763,1160,2.27,1171,2.019,1244,2.019,1246,3.389,1248,3.605,1250,4.496,1256,2.27,1273,3.389,1281,3.389,1282,3.389,1283,2.322,1284,2.322,1285,3.389,1286,3.013,1287,1.831,1288,3.001,1289,3.013,1290,1.681,1291,1.831,1292,2.27,1293,2.27,1294,2.27,1295,2.27,1296,2.27,1297,2.27,1298,2.27,1299,2.019,1300,2.27,1301,2.27,1302,2.27,1303,2.27,1304,2.27,1305,2.27,1306,3.389,1307,1.831,1308,3.389,1309,1.681,1310,2.27,1311,2.27,1312,2.27,1313,2.27,1314,2.27,1315,2.019,1316,1.681,1317,2.27,1318,2.27,1319,2.27,1323,3.013,1327,2.322,1378,2.019,1411,1.831,1488,3.328,1504,2.019,1548,5.165,1996,3.605,2628,5.81,2629,2.653,2630,4.737,2631,4.737,2632,3.959,2633,2.653,2634,2.653,2635,2.653,2636,2.653,2637,2.653,2638,2.653,2639,2.653,2640,2.653,2641,3.959,2642,3.959,2643,2.653,2644,2.653,2645,2.653,2646,2.653,2647,2.653,2648,5.894,2649,3.959,2650,3.959,2651,3.959,2652,2.653]],["title/coverage.html",[2653,4.218]],["body/coverage.html",[0,0.02,1,0.669,8,0.14,9,3.189,20,0.669,21,0.669,22,0.708,23,0.669,24,0.669,25,0.708,26,0.708,34,1.144,41,0.021,47,0.237,57,2.571,62,2.835,65,2.835,68,3.189,72,0.222,74,0.709,99,0.708,103,0.708,104,0.431,105,1.254,107,0.669,109,0.708,110,0.905,112,0.669,115,0.708,117,1.185,118,0.669,120,0.669,121,0.708,122,0.708,124,0.669,126,0.669,127,0.959,129,0.669,131,0.669,135,0.669,136,0.543,138,0.669,139,0.708,140,0.669,141,0.906,143,0.669,147,0.669,150,0.669,153,0.669,154,0.959,156,0.669,159,0.669,162,0.708,166,0.708,168,0.669,170,0.669,171,0.708,172,0.669,175,0.014,176,0.014,177,1.157,179,3.189,282,2.571,284,2.571,373,3.129,375,3.189,377,3.189,385,1.681,389,2.035,395,2.835,397,3.189,399,3.189,404,1.342,442,2.191,443,4.893,444,3.881,451,2.185,454,2.36,529,2.835,532,1.342,644,3.189,645,3.945,689,2.36,694,3.189,695,2.835,696,3.189,837,3.189,838,3.189,900,3.189,931,4.871,1081,3.189,1082,3.189,1139,2.185,1140,3.189,1154,4.662,1155,4.417,1156,3.189,1172,2.835,1173,3.189,1174,3.189,1219,3.189,1220,3.189,1242,4.35,1243,2.835,1244,3.838,1330,2.835,1331,3.189,1439,2.835,1440,3.189,1441,3.189,1483,3.189,1498,3.189,1500,2.835,1532,3.189,1536,2.571,1548,2.835,1549,3.189,1551,4.055,1555,2.835,1558,2.835,1571,3.189,1601,3.189,1602,3.189,1606,2.36,1805,3.189,1832,3.189,1859,4.228,1860,3.189,1863,3.189,1864,2.835,1866,2.835,1871,2.36,1891,3.189,1928,3.189,1957,2.835,1958,3.189,1960,3.838,1961,3.189,1993,3.189,2030,3.189,2031,3.189,2032,3.189,2089,3.189,2090,3.189,2091,3.189,2187,3.189,2188,3.189,2232,3.189,2233,3.189,2250,3.189,2251,3.189,2252,3.189,2283,3.189,2294,3.189,2295,3.189,2322,3.189,2323,3.189,2340,3.189,2402,3.189,2558,3.189,2575,3.189,2576,3.189,2577,2.835,2583,4.893,2603,3.189,2626,3.189,2627,3.189,2628,3.189,2653,3.189,2654,3.726,2655,3.726,2656,5.043,2657,4.316,2658,3.189,2659,6.598,2660,3.189,2661,4.316,2662,3.189,2663,3.189,2664,5.043,2665,5.043,2666,3.726,2667,3.726,2668,4.316,2669,3.726,2670,5.043,2671,5.043,2672,3.726,2673,3.726,2674,3.726,2675,3.726,2676,3.726,2677,5.717,2678,3.726,2679,3.726,2680,6.126,2681,3.726,2682,5.717,2683,5.717,2684,3.726,2685,3.726,2686,3.726,2687,6.126,2688,3.726,2689,3.726,2690,3.726,2691,3.726,2692,3.726,2693,3.726,2694,3.726,2695,3.726,2696,3.726,2697,3.726,2698,3.726,2699,3.726,2700,5.043,2701,5.043,2702,3.726,2703,5.043,2704,3.726,2705,3.726,2706,3.726,2707,3.726,2708,3.726,2709,5.043,2710,3.726,2711,5.717,2712,5.717,2713,3.726,2714,3.726,2715,3.726,2716,3.726,2717,3.726,2718,3.726,2719,3.726,2720,3.726,2721,3.726,2722,3.726,2723,3.726,2724,3.726,2725,3.726,2726,3.726,2727,3.726,2728,3.726,2729,5.717,2730,3.726,2731,3.726,2732,3.726,2733,5.043,2734,3.726,2735,3.726,2736,3.726,2737,3.726,2738,3.189,2739,3.189,2740,3.726,2741,5.043,2742,3.726,2743,3.726,2744,3.726]],["title/dependencies.html",[2745,2.284,2746,3.71]],["body/dependencies.html",[41,0.021,53,0.391,54,3.029,175,0.018,176,0.018,281,3.029,402,1.456,779,3.253,1210,4.747,1211,4.747,1212,4.747,2260,5.549,2746,4.747,2747,5.546,2748,7.464,2749,5.546,2750,5.546,2751,5.546,2752,6.87,2753,5.546,2754,4.747,2755,5.546,2756,4.747,2757,5.546,2758,5.546,2759,5.546,2760,4.747,2761,5.546,2762,5.546,2763,5.546,2764,5.546,2765,5.546,2766,5.546,2767,5.546,2768,5.546,2769,5.546]],["title/index.html",[32,0.132,2770,3.001,2771,3.001]],["body/index.html",[0,0.018,4,0.2,10,2.396,41,0.017,49,3.364,78,0.302,100,1.009,136,0.572,175,0.017,176,0.017,201,4.041,225,3.114,884,4.041,917,4.545,1585,3.114,1764,6.193,2196,4.545,2206,4.545,2593,5.774,2745,4.041,2754,5.408,2756,4.545,2760,5.774,2772,6.319,2773,5.31,2774,6.746,2775,4.545,2776,5.31,2777,7.132,2778,7.311,2779,5.31,2780,5.31,2781,5.31,2782,5.31,2783,5.31,2784,5.31,2785,5.31,2786,5.31,2787,5.31,2788,6.746,2789,5.31,2790,6.982,2791,5.31,2792,5.31,2793,5.31,2794,5.31,2795,6.319,2796,6.319,2797,6.982,2798,5.31,2799,6.319,2800,6.319,2801,5.31,2802,5.31,2803,5.31,2804,5.31,2805,6.319,2806,5.31,2807,5.31,2808,5.31,2809,5.31,2810,5.31,2811,6.746,2812,5.31,2813,4.041]],["title/modules.html",[2814,4.218]],["body/modules.html",[41,0.018,175,0.018,176,0.018,2814,5.093]],["title/overview.html",[2813,3.75]],["body/overview.html",[2,1.121,41,0.018,175,0.018,176,0.018,178,2.012,374,4.068,569,4.068,570,4.486,1080,4.486,2668,5.045,2813,4.486,2815,5.894]],["title/properties.html",[33,0.218,2745,2.284]],["body/properties.html",[33,0.298,41,0.019,175,0.018,176,0.018,2775,5.075,2816,5.929]],["title/miscellaneous/variables.html",[2817,2.569,2818,3.71]],["body/miscellaneous/variables.html",[32,0.234,41,0.021,43,0.712,44,0.712,47,0.43,49,4.278,175,0.017,176,0.017,723,2.024,1451,4.555,2657,4.555,2658,5.779,2660,5.779,2661,4.555,2662,5.415,2663,5.415,2738,4.555,2739,5.415,2817,4.555,2818,4.555,2819,6.327,2820,5.321,2821,6.327,2822,6.327,2823,6.327,2824,5.321,2825,5.321,2826,5.321,2827,5.321,2828,5.321,2829,5.321,2830,5.321,2831,5.321,2832,5.321,2833,5.321,2834,5.321,2835,5.321,2836,5.321,2837,5.321,2838,5.321,2839,5.321,2840,5.321,2841,5.321,2842,5.321,2843,5.321,2844,5.321,2845,5.321,2846,5.321,2847,5.321,2848,5.321,2849,5.321,2850,5.321,2851,5.321,2852,5.321]]],"invertedIndex":[["",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Channel.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"classes/Message.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"injectables/OnlineService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"interfaces/User.html":{},"interfaces/UserInterFace.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":442,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2816,"title":{},"body":{"properties.html":{}}}],["0.08",{"_index":591,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["0.14.3",{"_index":2769,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":805,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["0.2s",{"_index":1789,"title":{},"body":{"components/LogInComponent.html":{}}}],["0.3s",{"_index":419,"title":{},"body":{"components/ChannelComponent.html":{}}}],["0.4",{"_index":796,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["0/1",{"_index":2659,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2723,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2712,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2717,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2726,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2732,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":2741,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2740,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2656,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2729,"title":{},"body":{"coverage.html":{}}}],["0/53",{"_index":2735,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2690,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2711,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2733,"title":{},"body":{"coverage.html":{}}}],["0/81",{"_index":2713,"title":{},"body":{"coverage.html":{}}}],["00000014",{"_index":1766,"title":{},"body":{"components/LogInComponent.html":{}}}],["00000033",{"_index":2012,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["0px",{"_index":435,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["1",{"_index":571,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"injectables/ChatAreaService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/OpenImgComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/SidebarService.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{}}}],["1).padstart(2",{"_index":1058,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["1.22",{"_index":1799,"title":{},"body":{"components/LogInComponent.html":{}}}],["1/3",{"_index":2716,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2665,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2698,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":798,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["100",{"_index":416,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["1000",{"_index":513,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/HeaderComponent.html":{}}}],["1000px",{"_index":440,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ThreadComponent.html":{}}}],["100px",{"_index":602,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["100vh",{"_index":795,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["100vw",{"_index":794,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["104",{"_index":1306,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["10px",{"_index":589,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenSidebarComponent.html":{},"components/UserProfilComponent.html":{}}}],["110px",{"_index":1438,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["115px",{"_index":1569,"title":{},"body":{"components/HomeComponent.html":{}}}],["11px",{"_index":1821,"title":{},"body":{"components/LogInComponent.html":{}}}],["12",{"_index":879,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["12/27",{"_index":2710,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":609,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["122px",{"_index":1829,"title":{},"body":{"components/LogInComponent.html":{}}}],["126",{"_index":1512,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["129",{"_index":1311,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["12px",{"_index":627,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{}}}],["13/16",{"_index":2728,"title":{},"body":{"coverage.html":{}}}],["1300px",{"_index":1523,"title":{},"body":{"components/HeaderComponent.html":{}}}],["130px",{"_index":801,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["1360px",{"_index":1818,"title":{},"body":{"components/LogInComponent.html":{}}}],["13px",{"_index":1830,"title":{},"body":{"components/LogInComponent.html":{}}}],["14",{"_index":2668,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["141px",{"_index":1421,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["14px",{"_index":1425,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{}}}],["15/44",{"_index":2675,"title":{},"body":{"coverage.html":{}}}],["1500",{"_index":1402,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["150px",{"_index":1328,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{}}}],["153px",{"_index":600,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["15px",{"_index":1327,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["16/28",{"_index":2679,"title":{},"body":{"coverage.html":{}}}],["16/30",{"_index":2699,"title":{},"body":{"coverage.html":{}}}],["164px",{"_index":1314,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["16px",{"_index":818,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/LogInComponent.html":{},"components/UserProfilComponent.html":{}}}],["17.1.0",{"_index":2751,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":2748,"title":{},"body":{"dependencies.html":{}}}],["17.3.8",{"_index":2756,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["170px",{"_index":828,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/LogInComponent.html":{}}}],["176",{"_index":1414,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["18",{"_index":2670,"title":{},"body":{"coverage.html":{}}}],["180px",{"_index":1323,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/UserProfilComponent.html":{}}}],["181px",{"_index":2222,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["18px",{"_index":1416,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{}}}],["19",{"_index":2666,"title":{},"body":{"coverage.html":{}}}],["19/32",{"_index":2720,"title":{},"body":{"coverage.html":{}}}],["1920px",{"_index":1749,"title":{},"body":{"components/LogInComponent.html":{}}}],["19px",{"_index":1785,"title":{},"body":{"components/LogInComponent.html":{}}}],["1:904297976039:web:5a55b686aa74fb7763d242",{"_index":2838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1px",{"_index":622,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{}}}],["2",{"_index":570,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/PrivacyPolicyComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":2767,"title":{},"body":{"dependencies.html":{}}}],["2.scss",{"_index":1604,"title":{},"body":{"components/LogInComponent.html":{}}}],["2/11",{"_index":2671,"title":{},"body":{"coverage.html":{}}}],["2/14",{"_index":2669,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":2704,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":2715,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1302,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["200px",{"_index":1289,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/UserProfilComponent.html":{}}}],["20px",{"_index":429,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["210px",{"_index":1782,"title":{},"body":{"components/LogInComponent.html":{}}}],["215px",{"_index":800,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["217",{"_index":1415,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["22222242",{"_index":1431,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["228px",{"_index":1322,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{}}}],["22px",{"_index":1783,"title":{},"body":{"components/LogInComponent.html":{}}}],["24/45",{"_index":2692,"title":{},"body":{"coverage.html":{}}}],["241",{"_index":1296,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["242",{"_index":1319,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["243",{"_index":1513,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["243px",{"_index":1816,"title":{},"body":{"components/LogInComponent.html":{}}}],["248px",{"_index":830,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["24px",{"_index":631,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["25",{"_index":2664,"title":{},"body":{"coverage.html":{}}}],["2500ms",{"_index":1753,"title":{},"body":{"components/LogInComponent.html":{}}}],["250px",{"_index":807,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/LogInComponent.html":{}}}],["255",{"_index":1312,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["25px",{"_index":577,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{}}}],["266px",{"_index":1321,"title":{},"body":{"components/EditProfilComponent.html":{}}}],["26px",{"_index":1433,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["27",{"_index":1596,"title":{},"body":{"components/ImpressumComponent.html":{}}}],["274px",{"_index":820,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["28",{"_index":2714,"title":{},"body":{"coverage.html":{}}}],["282px",{"_index":2221,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["28px",{"_index":2020,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["29",{"_index":2695,"title":{},"body":{"coverage.html":{}}}],["297px",{"_index":1437,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/OpenSidebarComponent.html":{}}}],["2px",{"_index":588,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/LogInComponent.html":{}}}],["3",{"_index":2125,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["3/8",{"_index":2737,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2700,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":1671,"title":{},"body":{"components/LogInComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["300px",{"_index":1827,"title":{},"body":{"components/LogInComponent.html":{}}}],["30px",{"_index":581,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["31/65",{"_index":2721,"title":{},"body":{"coverage.html":{}}}],["313ae6",{"_index":1798,"title":{},"body":{"components/LogInComponent.html":{}}}],["313px",{"_index":1435,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["32px",{"_index":1520,"title":{},"body":{"components/HeaderComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["33",{"_index":2703,"title":{},"body":{"coverage.html":{}}}],["33/69",{"_index":2697,"title":{},"body":{"coverage.html":{}}}],["33/70",{"_index":2722,"title":{},"body":{"coverage.html":{}}}],["33px",{"_index":2223,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["34",{"_index":2674,"title":{},"body":{"coverage.html":{}}}],["34/64",{"_index":2684,"title":{},"body":{"coverage.html":{}}}],["34/66",{"_index":2689,"title":{},"body":{"coverage.html":{}}}],["347px",{"_index":2025,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["35",{"_index":437,"title":{},"body":{"components/ChannelComponent.html":{}}}],["35/67",{"_index":2694,"title":{},"body":{"coverage.html":{}}}],["350px",{"_index":1826,"title":{},"body":{"components/LogInComponent.html":{}}}],["35px",{"_index":826,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{}}}],["37",{"_index":2736,"title":{},"body":{"coverage.html":{}}}],["375px",{"_index":835,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/LogInComponent.html":{}}}],["38",{"_index":2815,"title":{},"body":{"overview.html":{}}}],["38px",{"_index":1297,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["3c5b0",{"_index":2836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3c5b0.appspot.com",{"_index":2840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3c5b0.firebaseapp.com",{"_index":2844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":569,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"overview.html":{}}}],["4.18.2",{"_index":2764,"title":{},"body":{"dependencies.html":{}}}],["4.24.0",{"_index":2759,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":2762,"title":{},"body":{"dependencies.html":{}}}],["4/13",{"_index":2701,"title":{},"body":{"coverage.html":{}}}],["4/21",{"_index":2667,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":2702,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":2734,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":819,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilContactformComponent.html":{}}}],["4000",{"_index":1683,"title":{},"body":{"components/LogInComponent.html":{}}}],["400px",{"_index":1287,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/UserProfilComponent.html":{}}}],["402px",{"_index":1924,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["40px",{"_index":618,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["415px",{"_index":799,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["42px",{"_index":1516,"title":{},"body":{"components/HeaderComponent.html":{}}}],["43",{"_index":2685,"title":{},"body":{"coverage.html":{}}}],["430px",{"_index":2652,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["44",{"_index":2709,"title":{},"body":{"coverage.html":{}}}],["444df2",{"_index":1423,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{}}}],["45px",{"_index":578,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/UserProfilComponent.html":{}}}],["46",{"_index":2705,"title":{},"body":{"coverage.html":{}}}],["464bdf",{"_index":1792,"title":{},"body":{"components/LogInComponent.html":{}}}],["47",{"_index":2680,"title":{},"body":{"coverage.html":{}}}],["47px",{"_index":827,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["486px",{"_index":1769,"title":{},"body":{"components/LogInComponent.html":{}}}],["495px",{"_index":831,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["49px",{"_index":1315,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/UserProfilComponent.html":{}}}],["4px",{"_index":2011,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["5",{"_index":628,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/LogInComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["5/17",{"_index":2696,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1805,"title":{},"body":{"components/LogInComponent.html":{},"coverage.html":{}}}],["500",{"_index":2075,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["500ms",{"_index":1757,"title":{},"body":{"components/LogInComponent.html":{}}}],["500px",{"_index":1288,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/UserProfilComponent.html":{}}}],["50px",{"_index":1316,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/UserProfilComponent.html":{}}}],["51",{"_index":2688,"title":{},"body":{"coverage.html":{}}}],["52",{"_index":2693,"title":{},"body":{"coverage.html":{}}}],["53",{"_index":2683,"title":{},"body":{"coverage.html":{}}}],["535af1",{"_index":636,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["55px",{"_index":601,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["56",{"_index":2724,"title":{},"body":{"coverage.html":{}}}],["56px",{"_index":821,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["57",{"_index":2678,"title":{},"body":{"coverage.html":{}}}],["59",{"_index":2719,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":621,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/LogInComponent.html":{}}}],["6",{"_index":1411,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UserProfilComponent.html":{}}}],["6/13",{"_index":2706,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":626,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["606px",{"_index":1768,"title":{},"body":{"components/LogInComponent.html":{}}}],["60px",{"_index":833,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/UserProfilComponent.html":{}}}],["61",{"_index":2730,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1303,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["65",{"_index":421,"title":{},"body":{"components/ChannelComponent.html":{}}}],["650px",{"_index":1820,"title":{},"body":{"components/LogInComponent.html":{}}}],["68px",{"_index":1515,"title":{},"body":{"components/HeaderComponent.html":{}}}],["6px",{"_index":804,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["7",{"_index":916,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/PrivacyPolicyComponent.html":{}}}],["7.8.0",{"_index":2765,"title":{},"body":{"dependencies.html":{}}}],["7/16",{"_index":2686,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":2231,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["700",{"_index":639,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/UserProfilComponent.html":{}}}],["70px",{"_index":1307,"title":{},"body":{"components/EditProfilComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/UserProfilComponent.html":{}}}],["77",{"_index":1318,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["792px",{"_index":1412,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["797ef3",{"_index":1422,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{}}}],["7px",{"_index":1828,"title":{},"body":{"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{}}}],["8/13",{"_index":2731,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":816,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HomeComponent.html":{},"components/NewMessageSearchResultsComponent.html":{}}}],["81",{"_index":2727,"title":{},"body":{"coverage.html":{}}}],["8570",{"_index":1597,"title":{},"body":{"components/ImpressumComponent.html":{}}}],["85px",{"_index":836,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["86px",{"_index":1292,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["88px",{"_index":611,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["8px",{"_index":635,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["9",{"_index":1370,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["9.2.0",{"_index":2757,"title":{},"body":{"dependencies.html":{}}}],["9._",{"_index":1369,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["9/16",{"_index":2725,"title":{},"body":{"coverage.html":{}}}],["9/19",{"_index":2681,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1295,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["904297976039",{"_index":2846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90deg",{"_index":2019,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["92c83e",{"_index":1426,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["95px",{"_index":604,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["98.76",{"_index":1800,"title":{},"body":{"components/LogInComponent.html":{}}}],["990",{"_index":1763,"title":{},"body":{"components/LogInComponent.html":{}}}],["997",{"_index":1772,"title":{},"body":{"components/LogInComponent.html":{}}}],["998",{"_index":1795,"title":{},"body":{"components/LogInComponent.html":{}}}],["999",{"_index":1804,"title":{},"body":{"components/LogInComponent.html":{}}}],["9px",{"_index":1831,"title":{},"body":{"components/LogInComponent.html":{}}}],["_location",{"_index":1580,"title":{},"body":{"components/ImpressumComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["abbrechen",{"_index":1409,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["abrufen",{"_index":1687,"title":{},"body":{"components/LogInComponent.html":{},"injectables/SidebarService.html":{}}}],["absolute",{"_index":603,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["abstractcontrol",{"_index":2044,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["abwesend",{"_index":1282,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["access",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":1434,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{}}}],["action",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["actioncode",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"components/PasswordResetComponent.html":{}}}],["actioncode).then((email",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["activatedroute",{"_index":2069,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["active",{"_index":1325,"title":{},"body":{"components/EditProfilComponent.html":{}}}],["activechannelindex",{"_index":2403,"title":{},"body":{"injectables/SidebarService.html":{}}}],["activeemail",{"_index":752,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"injectables/SidebarService.html":{}}}],["activeimage",{"_index":753,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"injectables/SidebarService.html":{}}}],["activeuid",{"_index":754,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"injectables/SidebarService.html":{}}}],["activeuser",{"_index":751,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"injectables/SidebarService.html":{}}}],["activeuserindex",{"_index":2404,"title":{},"body":{"injectables/SidebarService.html":{}}}],["activeuserprofil",{"_index":750,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"injectables/SidebarService.html":{}}}],["actual_component",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["adb0d9",{"_index":1781,"title":{},"body":{"components/LogInComponent.html":{}}}],["add",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"index.html":{}}}],["addalluserstochannel",{"_index":2405,"title":{},"body":{"injectables/SidebarService.html":{}}}],["adddoc",{"_index":534,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/ReactionListComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["adding",{"_index":713,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"injectables/ThreadService.html":{}}}],["addition",{"_index":490,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["additional",{"_index":482,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["address",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["addselecteduserstochannel",{"_index":2406,"title":{},"body":{"injectables/SidebarService.html":{}}}],["adduserfromheadertochannelopen",{"_index":489,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/SidebarService.html":{}}}],["addusertochanelopen",{"_index":2407,"title":{},"body":{"injectables/SidebarService.html":{}}}],["addusertochannel",{"_index":702,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["addusertochannelcomponent",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["adress",{"_index":1308,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["adresse",{"_index":1284,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfilComponent.html":{}}}],["afterviewinit",{"_index":1201,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{}}}],["aizasyc9dpnmg7uyonz8kydslvm_zg6ilfp4nmm",{"_index":2842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aktiv",{"_index":1281,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["aktualisiert",{"_index":1398,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["alert",{"_index":1268,"title":{},"body":{"components/EditProfilComponent.html":{}}}],["alert('message",{"_index":1277,"title":{},"body":{"components/EditProfilComponent.html":{}}}],["algoliasearch",{"_index":2758,"title":{},"body":{"dependencies.html":{}}}],["align",{"_index":593,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["allchannel",{"_index":1867,"title":{},"body":{"components/NewMessageHeaderComponent.html":{}}}],["allchannels",{"_index":2408,"title":{},"body":{"injectables/SidebarService.html":{},"components/ThreadHeaderComponent.html":{}}}],["allchannelscreationsdate",{"_index":2409,"title":{},"body":{"injectables/SidebarService.html":{}}}],["allchannelscreatorsnames",{"_index":2410,"title":{},"body":{"injectables/SidebarService.html":{}}}],["allchannelscreatorsuids",{"_index":2411,"title":{},"body":{"injectables/SidebarService.html":{}}}],["allchannelsdescriptions",{"_index":2412,"title":{},"body":{"injectables/SidebarService.html":{}}}],["allchannelsemails",{"_index":2413,"title":{},"body":{"injectables/SidebarService.html":{}}}],["allchannelsids",{"_index":2414,"title":{},"body":{"injectables/SidebarService.html":{}}}],["allchannelsimages",{"_index":498,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"injectables/SidebarService.html":{}}}],["allchannelsorted",{"_index":1868,"title":{},"body":{"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{}}}],["allchannelsortedsubject",{"_index":1929,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["allchannelsuids",{"_index":2415,"title":{},"body":{"injectables/SidebarService.html":{}}}],["allchannelsusers",{"_index":2416,"title":{},"body":{"injectables/SidebarService.html":{}}}],["allcreators",{"_index":2417,"title":{},"body":{"injectables/SidebarService.html":{}}}],["alldates",{"_index":2561,"title":{},"body":{"components/ThreadComponent.html":{}}}],["allemails",{"_index":2418,"title":{},"body":{"injectables/SidebarService.html":{}}}],["allimages",{"_index":2419,"title":{},"body":{"injectables/SidebarService.html":{}}}],["allmessages",{"_index":2562,"title":{},"body":{"components/ThreadComponent.html":{}}}],["allmessagessorted",{"_index":2563,"title":{},"body":{"components/ThreadComponent.html":{}}}],["allowing",{"_index":1260,"title":{},"body":{"components/EditProfilComponent.html":{},"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["alluids",{"_index":2420,"title":{},"body":{"injectables/SidebarService.html":{}}}],["alluser",{"_index":701,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{}}}],["allusers",{"_index":2421,"title":{},"body":{"injectables/SidebarService.html":{}}}],["allusersorted",{"_index":1869,"title":{},"body":{"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{}}}],["allusersortedsubject",{"_index":1930,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["als",{"_index":1019,"title":{},"body":{"injectables/ChatAreaService.html":{},"injectables/DirectMessageSelectionService.html":{}}}],["alte",{"_index":2529,"title":{},"body":{"injectables/SidebarService.html":{}}}],["analyze",{"_index":926,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["angular",{"_index":2760,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":2747,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":402,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":2749,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"injectables/OnlineService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":2750,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/auth",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["angular/fire/firestore",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/FileUploadeService.html":{},"components/LogInComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["angular/forms",{"_index":779,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":2752,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":2755,"title":{},"body":{"dependencies.html":{}}}],["animated",{"_index":1802,"title":{},"body":{"components/LogInComponent.html":{}}}],["animation",{"_index":1750,"title":{},"body":{"components/LogInComponent.html":{},"injectables/ThreadService.html":{}}}],["anmelden",{"_index":1744,"title":{},"body":{"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{}}}],["anmeldeversuche",{"_index":1725,"title":{},"body":{"components/LogInComponent.html":{}}}],["anmeldung",{"_index":1734,"title":{},"body":{"components/LogInComponent.html":{}}}],["anwendung",{"_index":2133,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anzupassen",{"_index":2186,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["apikey",{"_index":2841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["app.component.html",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2662,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["append",{"_index":1033,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["appid",{"_index":2837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":2196,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{},"index.html":{}}}],["applicationconfig",{"_index":2822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appropriate",{"_index":1638,"title":{},"body":{"components/LogInComponent.html":{}}}],["april",{"_index":982,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["arbeit",{"_index":1739,"title":{},"body":{"components/LogInComponent.html":{}}}],["area'},{'name",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["area.component",{"_index":398,"title":{},"body":{"components/ChannelComponent.html":{},"components/DirectMessagesComponent.html":{},"components/ThreadComponent.html":{}}}],["area.component.ts",{"_index":2682,"title":{},"body":{"coverage.html":{}}}],["area.service",{"_index":542,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["area.service.ts",{"_index":838,"title":{},"body":{"injectables/ChatAreaService.html":{},"coverage.html":{}}}],["area.service.ts:118",{"_index":871,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["area.service.ts:132",{"_index":930,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["area.service.ts:182",{"_index":861,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["area.service.ts:19",{"_index":906,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["area.service.ts:202",{"_index":852,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["area.service.ts:218",{"_index":886,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["area.service.ts:228",{"_index":889,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["area.service.ts:239",{"_index":882,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["area.service.ts:252",{"_index":922,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["area.service.ts:266",{"_index":892,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["area.service.ts:54",{"_index":896,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["area.service.ts:72",{"_index":920,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["area.service.ts:87",{"_index":876,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["area.service.ts:9",{"_index":850,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["area/channel",{"_index":397,"title":{},"body":{"components/ChannelComponent.html":{},"coverage.html":{}}}],["area/direct",{"_index":1173,"title":{},"body":{"components/DirectMessagesComponent.html":{},"coverage.html":{}}}],["area/thread",{"_index":2576,"title":{},"body":{"components/ThreadComponent.html":{},"coverage.html":{}}}],["around",{"_index":1293,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["array",{"_index":725,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/ThreadHeaderComponent.html":{}}}],["array.isarray(uids",{"_index":2523,"title":{},"body":{"injectables/SidebarService.html":{}}}],["arrow",{"_index":632,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/HeaderComponent.html":{}}}],["artifacts",{"_index":2791,"title":{},"body":{"index.html":{}}}],["asd",{"_index":2422,"title":{},"body":{"injectables/SidebarService.html":{}}}],["asdasd",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["aspect",{"_index":1972,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["assets/img/landing",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"components/ImpressumComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RevealPasswordService.html":{}}}],["assigns",{"_index":1168,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["async",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatAreaService.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{}}}],["auch",{"_index":1148,"title":{},"body":{"injectables/DirectMessageSelectionService.html":{}}}],["auf",{"_index":2163,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufgetreten",{"_index":1729,"title":{},"body":{"components/LogInComponent.html":{}}}],["august",{"_index":986,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["aus",{"_index":1393,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["auskunft",{"_index":2157,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auskünften",{"_index":2173,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausschließlich",{"_index":2129,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auth",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth.service",{"_index":937,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["auth/invalid",{"_index":1711,"title":{},"body":{"components/LogInComponent.html":{}}}],["auth/too",{"_index":1719,"title":{},"body":{"components/LogInComponent.html":{}}}],["auth/user",{"_index":1704,"title":{},"body":{"components/LogInComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["authdomain",{"_index":2843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication",{"_index":761,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/LogInComponent.html":{}}}],["authservice",{"_index":34,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/PasswordResetComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["authservice.currentusersignal",{"_index":1278,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{}}}],["authservice.currentusersignal()?.email",{"_index":1285,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["authservice.currentusersignal()?.name",{"_index":789,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["authservice.currentusersignal()?.uid",{"_index":788,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/UserProfilComponent.html":{}}}],["auto",{"_index":808,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{}}}],["automatically",{"_index":2783,"title":{},"body":{"index.html":{}}}],["außerdem",{"_index":2162,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["await",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatAreaService.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{}}}],["azonosítója",{"_index":2534,"title":{},"body":{"injectables/SidebarService.html":{}}}],["back",{"_index":1037,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["back.png",{"_index":1587,"title":{},"body":{"components/ImpressumComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["background",{"_index":582,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["backgroundanimation",{"_index":1801,"title":{},"body":{"components/LogInComponent.html":{}}}],["backtosidebar",{"_index":1485,"title":{},"body":{"components/HeaderComponent.html":{}}}],["based",{"_index":495,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/OpenImgComponent.html":{},"injectables/SearchService.html":{}}}],["baseline",{"_index":1808,"title":{},"body":{"components/LogInComponent.html":{}}}],["bearbeiten",{"_index":1279,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{}}}],["behalten",{"_index":2180,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["behaviorsubject",{"_index":680,"title":{},"body":{"injectables/ChannelSelectionService.html":{},"injectables/DirectMessageSelectionService.html":{},"injectables/NewMessageSelectionService.html":{},"injectables/ThreadService.html":{}}}],["behaviorsubject(null",{"_index":1144,"title":{},"body":{"injectables/DirectMessageSelectionService.html":{},"injectables/ThreadService.html":{}}}],["bei",{"_index":1731,"title":{},"body":{"components/LogInComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["beim",{"_index":1686,"title":{},"body":{"components/LogInComponent.html":{},"injectables/SidebarService.html":{}}}],["being",{"_index":468,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["benutzer",{"_index":1708,"title":{},"body":{"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{}}}],["benutzerdaten",{"_index":1688,"title":{},"body":{"components/LogInComponent.html":{},"injectables/SidebarService.html":{}}}],["benutzerkontos",{"_index":2136,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ber",{"_index":2158,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["berein",{"_index":2088,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["bereitstellung",{"_index":2132,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["berichtigung",{"_index":2164,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["berprüfen",{"_index":1714,"title":{},"body":{"components/LogInComponent.html":{}}}],["between",{"_index":575,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/OpenSidebarComponent.html":{},"components/UserProfilComponent.html":{}}}],["bezüglich",{"_index":2113,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bitte",{"_index":993,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["black",{"_index":1778,"title":{},"body":{"components/LogInComponent.html":{}}}],["block",{"_index":433,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/HomeComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["boolean",{"_index":887,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"injectables/EditChannelService.html":{},"classes/Message.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RevealPasswordService.html":{},"injectables/SearchService.html":{},"injectables/ThreadService.html":{}}}],["bootstrap",{"_index":2739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":2850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":579,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["bottom",{"_index":817,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{}}}],["box",{"_index":802,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{}}}],["break",{"_index":1710,"title":{},"body":{"components/LogInComponent.html":{}}}],["browser",{"_index":2260,"title":{},"body":{"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["btn",{"_index":1428,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{}}}],["bubble",{"_index":1525,"title":{},"body":{"components/HeaderComponent.html":{}}}],["bubbling",{"_index":1980,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["build",{"_index":2790,"title":{},"body":{"index.html":{}}}],["button",{"_index":811,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["buttons",{"_index":1420,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["c8d1fc",{"_index":1926,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["calc(100",{"_index":1430,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/NewMessageSearchResultsComponent.html":{}}}],["calc(100vh",{"_index":1570,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["calc(100vw",{"_index":832,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/UserProfilComponent.html":{}}}],["calc(50vh",{"_index":1320,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{}}}],["calc(50vw",{"_index":829,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{}}}],["call",{"_index":2595,"title":{},"body":{"components/ThreadHeaderComponent.html":{}}}],["calls",{"_index":480,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["cancel",{"_index":1338,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["cancels",{"_index":1343,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["capabilities",{"_index":2809,"title":{},"body":{"index.html":{}}}],["case",{"_index":1703,"title":{},"body":{"components/LogInComponent.html":{},"injectables/SearchService.html":{}}}],["catch",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatAreaService.html":{},"components/EditProfilContactformComponent.html":{}}}],["catch((err",{"_index":2076,"title":{},"body":{"components/PasswordResetComponent.html":{},"injectables/SaveNewUserService.html":{}}}],["catch((error",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileUploadeService.html":{}}}],["catch(error",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"components/ResetPasswordComponent.html":{}}}],["center",{"_index":592,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["change",{"_index":2785,"title":{},"body":{"index.html":{}}}],["changed",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["changedetectionstrategy",{"_index":1202,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["changedetectorref",{"_index":1203,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["changeimg",{"_index":2298,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["changepassword",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"components/PasswordResetComponent.html":{}}}],["changepassword(actioncode",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["changes",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{}}}],["changetype",{"_index":2299,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["channel",{"_index":104,"title":{"interfaces/Channel.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Channel.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["channel's",{"_index":757,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["channel'},{'name",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["channel.component",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/HomeComponent.html":{}}}],["channel.component.html",{"_index":382,"title":{},"body":{"components/ChannelComponent.html":{}}}],["channel.component.scss",{"_index":408,"title":{},"body":{"components/ChannelComponent.html":{}}}],["channel.component.scss,./channel",{"_index":380,"title":{},"body":{"components/ChannelComponent.html":{}}}],["channel.component.ts",{"_index":2677,"title":{},"body":{"coverage.html":{}}}],["channel.id",{"_index":558,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["channel.name.tolowercase().includes(normalizedterm",{"_index":2380,"title":{},"body":{"injectables/SearchService.html":{}}}],["channel.service",{"_index":531,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/HomeComponent.html":{}}}],["channel.service.ts",{"_index":1220,"title":{},"body":{"injectables/EditChannelService.html":{},"coverage.html":{}}}],["channel.service.ts:13",{"_index":1227,"title":{},"body":{"injectables/EditChannelService.html":{}}}],["channel.service.ts:18",{"_index":1229,"title":{},"body":{"injectables/EditChannelService.html":{}}}],["channel.service.ts:24",{"_index":1226,"title":{},"body":{"injectables/EditChannelService.html":{}}}],["channel.service.ts:7",{"_index":1230,"title":{},"body":{"injectables/EditChannelService.html":{}}}],["channel.service.ts:8",{"_index":1225,"title":{},"body":{"injectables/EditChannelService.html":{}}}],["channel/add",{"_index":1549,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["channel/channel/channel.component",{"_index":1545,"title":{},"body":{"components/HomeComponent.html":{}}}],["channel/close_button.png",{"_index":813,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/UserProfilComponent.html":{}}}],["channel/close_button_hover.png",{"_index":814,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/UserProfilComponent.html":{}}}],["channel/create",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["channel/edit",{"_index":529,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["channelchatareacomponent",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["channelcomponent",{"_index":23,"title":{"components/ChannelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["channelcreatoruid",{"_index":901,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/NewMessageHeaderComponent.html":{}}}],["channeldata",{"_index":2511,"title":{},"body":{"injectables/SidebarService.html":{}}}],["channeldata['uids",{"_index":2522,"title":{},"body":{"injectables/SidebarService.html":{}}}],["channeldoc",{"_index":2383,"title":{},"body":{"injectables/SearchService.html":{}}}],["channeldoc.id",{"_index":2385,"title":{},"body":{"injectables/SearchService.html":{}}}],["channelheadercomponent",{"_index":107,"title":{"components/ChannelHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["channelid",{"_index":2350,"title":{},"body":{"injectables/SearchService.html":{}}}],["channelinfo",{"_index":449,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{}}}],["channelmessageinputcomponent",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["channelopenvariable",{"_index":646,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["channels",{"_index":509,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/HeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadHeaderComponent.html":{}}}],["channels/${channelid}/messages",{"_index":2387,"title":{},"body":{"injectables/SearchService.html":{}}}],["channelscollection",{"_index":2498,"title":{},"body":{"injectables/SidebarService.html":{}}}],["channelselectionservice",{"_index":404,"title":{"injectables/ChannelSelectionService.html":{}},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/HomeComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/ReactionListComponent.html":{},"injectables/SidebarService.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["channelsref",{"_index":2371,"title":{},"body":{"injectables/SearchService.html":{}}}],["channelssnapshot",{"_index":2382,"title":{},"body":{"injectables/SearchService.html":{}}}],["channelssnapshot.docs",{"_index":2384,"title":{},"body":{"injectables/SearchService.html":{}}}],["channeluser",{"_index":599,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["channelusercontainer",{"_index":595,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["channeluserlistcomponent",{"_index":112,"title":{"components/ChannelUserlistComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["chat",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["chatareaservice",{"_index":451,"title":{"injectables/ChatAreaService.html":{}},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/ThreadHeaderComponent.html":{},"coverage.html":{}}}],["check",{"_index":884,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/PasswordResetComponent.html":{},"index.html":{}}}],["checkmark",{"_index":953,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["checks",{"_index":497,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"injectables/ChatAreaService.html":{},"components/HeaderComponent.html":{},"injectables/ThreadService.html":{}}}],["choice",{"_index":2804,"title":{},"body":{"index.html":{}}}],["class",{"_index":72,"title":{"classes/DirectMessage.html":{},"classes/Message.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"classes/Message.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"injectables/OnlineService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["classes",{"_index":1080,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{},"overview.html":{}}}],["cli",{"_index":2774,"title":{},"body":{"index.html":{}}}],["click)=\"channelselectionservice.setselectedimg",{"_index":1992,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["clicking",{"_index":1348,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["close",{"_index":810,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/OpenSidebarComponent.html":{},"components/UserProfilComponent.html":{}}}],["closechannel",{"_index":651,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["closed",{"_index":717,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["closedialog",{"_index":703,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["closepopup",{"_index":1339,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["closes",{"_index":719,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{}}}],["closethread",{"_index":2584,"title":{},"body":{"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{}}}],["closing",{"_index":738,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["code",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"components/LogInComponent.html":{},"index.html":{}}}],["collection",{"_index":510,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["collection(this.firestore",{"_index":1674,"title":{},"body":{"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{}}}],["color",{"_index":583,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["color:#535af1",{"_index":640,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["column",{"_index":806,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["command",{"_index":2805,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":378,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/PasswordResetComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["communicationtype",{"_index":1083,"title":{},"body":{"classes/DirectMessage.html":{}}}],["complete",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["completion",{"_index":935,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"overview.html":{}}}],["conditions",{"_index":505,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["config",{"_index":2658,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmation",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmed",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmpassword",{"_index":2048,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["confirmpassword.value",{"_index":2080,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["confirmpasswordreset",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmpasswordreset(this.firebaseauth",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["console",{"_index":1625,"title":{},"body":{"components/LogInComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["console.error(\"error",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.error('error",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatAreaService.html":{},"injectables/FileUploadeService.html":{},"components/ResetPasswordComponent.html":{}}}],["console.error('fehler",{"_index":1685,"title":{},"body":{"components/LogInComponent.html":{},"injectables/SidebarService.html":{}}}],["console.error('guest",{"_index":1695,"title":{},"body":{"components/LogInComponent.html":{}}}],["console.error('invalid",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.error(err",{"_index":2337,"title":{},"body":{"injectables/SaveNewUserService.html":{}}}],["console.error(error",{"_index":1400,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["console.log(\"user",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('current",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('document",{"_index":1041,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["console.log('file",{"_index":1480,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["console.log('form",{"_index":2277,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["console.log('no",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChatAreaService.html":{}}}],["console.log('password",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('user",{"_index":2338,"title":{},"body":{"injectables/SaveNewUserService.html":{}}}],["console.log(this.authservice.currentusersignal",{"_index":1395,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["const",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/LogInComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/OpenImgComponent.html":{},"components/PasswordResetComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadHeaderComponent.html":{}}}],["constructor",{"_index":387,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"injectables/FileUploadeService.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"classes/Message.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/OnlineService.html":{},"components/OpenImgComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["constructor(_location",{"_index":1577,"title":{},"body":{"components/ImpressumComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["constructor(channelselectionservice",{"_index":710,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/HomeComponent.html":{},"components/OpenImgComponent.html":{},"components/ReactionListComponent.html":{}}}],["constructor(directmessageselectionservice",{"_index":1160,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/UserProfilComponent.html":{}}}],["constructor(firestore",{"_index":462,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{}}}],["constructor(newmessageselectionservice",{"_index":1897,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["constructor(obj",{"_index":1084,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["constructor(private",{"_index":409,"title":{},"body":{"components/ChannelComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"components/ThreadComponent.html":{}}}],["constructor(public",{"_index":1985,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["constructor(threadservice",{"_index":388,"title":{},"body":{"components/ChannelComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["contact",{"_index":1257,"title":{},"body":{"components/EditProfilComponent.html":{},"components/ImpressumComponent.html":{}}}],["contactform",{"_index":1332,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["contactform'},{'name",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["contactform.component",{"_index":1547,"title":{},"body":{"components/HomeComponent.html":{}}}],["contactform.component.html",{"_index":1335,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["contactform.component.scss",{"_index":1377,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["contactform.component.scss,./edit",{"_index":1334,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["contactform.component.ts",{"_index":1331,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"coverage.html":{}}}],["contactform.component.ts:15",{"_index":1357,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["contactform.component.ts:16",{"_index":1373,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["contactform.component.ts:17",{"_index":1360,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["contactform.component.ts:18",{"_index":1358,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["contactform.component.ts:19",{"_index":1374,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["contactform.component.ts:21",{"_index":1372,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["contactform.component.ts:34",{"_index":1345,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["contactform.component.ts:42",{"_index":1347,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["contactform.component.ts:49",{"_index":1342,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["contactform.component.ts:58",{"_index":1350,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["contactform.component.ts:78",{"_index":1346,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["contactform.component.ts:86",{"_index":1356,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["contactform/edit",{"_index":1330,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["contain",{"_index":2227,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{},"injectables/SearchService.html":{}}}],["container",{"_index":634,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["containing",{"_index":893,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/PasswordResetComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["content",{"_index":573,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["contentcontainer",{"_index":423,"title":{},"body":{"components/ChannelComponent.html":{},"components/NewMessageSearchResultsComponent.html":{}}}],["contentthreadclosed",{"_index":414,"title":{},"body":{"components/ChannelComponent.html":{}}}],["contentthreadopen",{"_index":420,"title":{},"body":{"components/ChannelComponent.html":{}}}],["control",{"_index":2050,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["control.get('confirmpassword",{"_index":2078,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["control.get('newpassword",{"_index":2077,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["convert",{"_index":866,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["converts",{"_index":2218,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["corresponding",{"_index":755,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["count",{"_index":883,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["counts",{"_index":923,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["cover",{"_index":1291,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["coverage",{"_index":2653,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["createchannelcomponent",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["createchanneldialogactive",{"_index":2423,"title":{},"body":{"injectables/SidebarService.html":{}}}],["creates",{"_index":1186,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["createuserwithemailandpassword",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserwithemailandpassword(this.firebaseauth",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["creationsdate",{"_index":902,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/NewMessageHeaderComponent.html":{}}}],["credential",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"components/LogInComponent.html":{}}}],["credential.accesstoken",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["credentials",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["csatorna",{"_index":2535,"title":{},"body":{"injectables/SidebarService.html":{}}}],["css",{"_index":2612,"title":{},"body":{"injectables/ThreadService.html":{}}}],["ctrl/ngx",{"_index":1210,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{},"dependencies.html":{}}}],["current",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["currentchannel",{"_index":383,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["currentchannel.images",{"_index":502,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["currentchannel.name",{"_index":2602,"title":{},"body":{"components/ThreadHeaderComponent.html":{}}}],["currentchannelid",{"_index":452,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["currentchannelnumber",{"_index":500,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"injectables/SidebarService.html":{}}}],["currentdata",{"_index":1022,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["currentdata[variablename",{"_index":1026,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["currently",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/ThreadService.html":{}}}],["currentthread",{"_index":384,"title":{},"body":{"components/ChannelComponent.html":{},"injectables/ThreadService.html":{}}}],["currentuser",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuser.displayname",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuser.email",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuser.photourl",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuser.uid",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuserid",{"_index":1894,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["currentusersignal",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["currentvalue",{"_index":1025,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["currentvalue.split",{"_index":1028,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["cursor",{"_index":605,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["custom",{"_index":2046,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["dabubble",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/LogInComponent.html":{},"components/PrivacyPolicyComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["daher",{"_index":1063,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["darüber",{"_index":2107,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["das",{"_index":1390,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["data",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["database",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["date",{"_index":856,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["date().gettime",{"_index":1664,"title":{},"body":{"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["date(timestamp",{"_index":1045,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["date.now",{"_index":1463,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["datecounter",{"_index":2564,"title":{},"body":{"components/ThreadComponent.html":{}}}],["datei",{"_index":1461,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["daten",{"_index":2102,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenschutz",{"_index":1746,"title":{},"body":{"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["datenschutzerklärung",{"_index":2097,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenverarbeitung",{"_index":2118,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenübertragbarkeit",{"_index":2169,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["day",{"_index":909,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["day}.${month}.${year",{"_index":1065,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["dd.mm.yyyy",{"_index":859,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["decoration",{"_index":1791,"title":{},"body":{"components/LogInComponent.html":{}}}],["default",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"classes/Message.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"injectables/OnlineService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{}}}],["dein",{"_index":1403,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["delay",{"_index":1752,"title":{},"body":{"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["deleted",{"_index":1481,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["deletedoc",{"_index":535,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/ReactionListComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["deletefield",{"_index":536,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/ReactionListComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["deletefile",{"_index":1442,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["deletefile(fileurl",{"_index":1445,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["deleteobject",{"_index":1449,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["deleteobject(fileref",{"_index":1479,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["deleting",{"_index":1482,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["den",{"_index":1239,"title":{},"body":{"injectables/EditChannelService.html":{},"components/HomeComponent.html":{}}}],["denn",{"_index":2145,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dependencies",{"_index":2746,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["der",{"_index":1562,"title":{},"body":{"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/SidebarService.html":{}}}],["des",{"_index":1016,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/PrivacyPolicyComponent.html":{}}}],["description",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageHeaderComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/OpenImgComponent.html":{},"components/PasswordResetComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/SearchService.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{}}}],["design",{"_index":1773,"title":{},"body":{"components/LogInComponent.html":{}}}],["details",{"_index":894,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["determines",{"_index":1969,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["dev",{"_index":2780,"title":{},"body":{"index.html":{}}}],["development",{"_index":2776,"title":{},"body":{"index.html":{}}}],["devspace",{"_index":1508,"title":{},"body":{"components/HeaderComponent.html":{}}}],["dezember",{"_index":990,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["dialog",{"_index":488,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["dialogs",{"_index":716,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["dictionary",{"_index":1021,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["die",{"_index":1460,"title":{},"body":{"injectables/FileUploadeService.html":{},"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dienstes",{"_index":2185,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dies",{"_index":2146,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["diese",{"_index":1717,"title":{},"body":{"components/LogInComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dieser",{"_index":1709,"title":{},"body":{"components/LogInComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["dir",{"_index":1737,"title":{},"body":{"components/LogInComponent.html":{}}}],["direct",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["direction",{"_index":425,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["directive",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["directives",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2789,"title":{},"body":{"index.html":{}}}],["directmessage",{"_index":689,"title":{"classes/DirectMessage.html":{}},"body":{"injectables/ChannelSelectionService.html":{},"classes/DirectMessage.html":{},"components/DirectMessagesHeaderComponent.html":{},"coverage.html":{}}}],["directmessageschatareacomponent",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["directmessagescomponent",{"_index":118,"title":{"components/DirectMessagesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["directmessageselectionservice",{"_index":1139,"title":{"injectables/DirectMessageSelectionService.html":{}},"body":{"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["directmessageselectionservice.getselectedchannel",{"_index":1165,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["directmessagesheadercomponent",{"_index":120,"title":{"components/DirectMessagesHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["directmessagesmessageinputcomponent",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["directory",{"_index":2794,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":1427,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["display",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["displayname",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["displays",{"_index":1354,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["dist",{"_index":2793,"title":{},"body":{"index.html":{}}}],["divhover",{"_index":453,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["doc",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"injectables/SaveNewUserService.html":{},"components/ThreadHeaderComponent.html":{}}}],["doc(collection(this.firestore",{"_index":2335,"title":{},"body":{"injectables/SaveNewUserService.html":{}}}],["doc(firestoreinstance",{"_index":1011,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["doc(this.firestore",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["doc.data",{"_index":1680,"title":{},"body":{"components/LogInComponent.html":{},"injectables/SidebarService.html":{}}}],["doc.data()['message",{"_index":2400,"title":{},"body":{"injectables/SearchService.html":{}}}],["doc.data()['name",{"_index":2377,"title":{},"body":{"injectables/SearchService.html":{}}}],["doc.data()['uids",{"_index":2378,"title":{},"body":{"injectables/SearchService.html":{}}}],["doc.id",{"_index":2376,"title":{},"body":{"injectables/SearchService.html":{}}}],["document",{"_index":932,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["document.getelementbyid('slidein",{"_index":2621,"title":{},"body":{"injectables/ThreadService.html":{}}}],["document.getelementbyid('slidein')?.classlist.add('slide",{"_index":2620,"title":{},"body":{"injectables/ThreadService.html":{}}}],["documentation",{"_index":2654,"title":{},"body":{"coverage.html":{}}}],["documents",{"_index":514,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{}}}],["doesn't",{"_index":1034,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["dokumentum",{"_index":2533,"title":{},"body":{"injectables/SidebarService.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["don't",{"_index":2054,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["dritte",{"_index":2142,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["drop",{"_index":586,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["du",{"_index":1218,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{},"components/LogInComponent.html":{},"components/ReactionListComponent.html":{}}}],["duration",{"_index":1756,"title":{},"body":{"components/LogInComponent.html":{}}}],["during",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"components/EditProfilComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["dynamic",{"_index":2753,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":744,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfilComponent.html":{}}}],["e.stoppropagation",{"_index":1275,"title":{},"body":{"components/EditProfilComponent.html":{}}}],["e.stoppropagation(e",{"_index":1378,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["e2e",{"_index":2802,"title":{},"body":{"index.html":{}}}],["each",{"_index":768,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["ease",{"_index":1755,"title":{},"body":{"components/LogInComponent.html":{}}}],["eceefe",{"_index":612,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["edit",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["editchannel",{"_index":1221,"title":{},"body":{"injectables/EditChannelService.html":{}}}],["editchannelcomponent",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["editchannelservice",{"_index":454,"title":{"injectables/EditChannelService.html":{}},"body":{"components/ChannelHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["editing",{"_index":1254,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["editprofilcomponent",{"_index":124,"title":{"components/EditProfilComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["editprofilcontactformcomponent",{"_index":126,"title":{"components/EditProfilContactformComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["editprofilcontactformopen",{"_index":1259,"title":{},"body":{"components/EditProfilComponent.html":{},"injectables/SidebarService.html":{}}}],["editprofilopen",{"_index":1252,"title":{},"body":{"components/EditProfilComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/SidebarService.html":{}}}],["edituser",{"_index":1249,"title":{},"body":{"components/EditProfilComponent.html":{}}}],["effectively",{"_index":1253,"title":{},"body":{"components/EditProfilComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["ein",{"_index":1000,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["eindeutigen",{"_index":1458,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["eine",{"_index":996,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/ResetPasswordComponent.html":{}}}],["einen",{"_index":1457,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["einfaches",{"_index":1020,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["eingegebene",{"_index":2275,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["einschränkung",{"_index":2166,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einwilligungen",{"_index":2177,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["element",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{}}}],["element.data",{"_index":556,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["element.id",{"_index":557,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["element.name",{"_index":1923,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["element?.classlist.add('slide",{"_index":2623,"title":{},"body":{"injectables/ThreadService.html":{}}}],["element?.classlist.remove('slide",{"_index":2622,"title":{},"body":{"injectables/ThreadService.html":{}}}],["elementref",{"_index":1204,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["elements",{"_index":1982,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["email",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SaveNewUserService.html":{},"interfaces/User.html":{},"interfaces/UserInterFace.html":{},"components/UserProfilComponent.html":{}}}],["emaillist",{"_index":2424,"title":{},"body":{"injectables/SidebarService.html":{}}}],["emailsent",{"_index":2255,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["emits",{"_index":1166,"title":{},"body":{"components/DirectMessagesComponent.html":{},"injectables/NewMessageSelectionService.html":{}}}],["emitted",{"_index":1167,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["emoji",{"_index":1211,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{},"dependencies.html":{}}}],["empfehlen",{"_index":1736,"title":{},"body":{"components/LogInComponent.html":{}}}],["end",{"_index":1764,"title":{},"body":{"components/LogInComponent.html":{},"index.html":{}}}],["ensure",{"_index":714,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["erfolgreich",{"_index":1397,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["erforderlich",{"_index":1742,"title":{},"body":{"components/LogInComponent.html":{}}}],["erfüllung",{"_index":2148,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erhalten",{"_index":2161,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erheben",{"_index":2109,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erhebung",{"_index":2172,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erhobene",{"_index":2122,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erhobenen",{"_index":2127,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erneut",{"_index":1715,"title":{},"body":{"components/LogInComponent.html":{}}}],["err",{"_index":1043,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/LogInComponent.html":{}}}],["err.message",{"_index":1672,"title":{},"body":{"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{}}}],["error",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatAreaService.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SidebarService.html":{}}}],["error('failed",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('invalid",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('no",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["error.code",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"components/ResetPasswordComponent.html":{}}}],["error.message",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["errorcode",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"components/LogInComponent.html":{}}}],["errormessage",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errors",{"_index":1628,"title":{},"body":{"components/LogInComponent.html":{}}}],["erstelle",{"_index":1456,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["erstellen",{"_index":1733,"title":{},"body":{"components/LogInComponent.html":{}}}],["erteilter",{"_index":2176,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["es",{"_index":1705,"title":{},"body":{"components/LogInComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["event",{"_index":739,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["event.currenttarget",{"_index":1921,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["event.currenttarget.classlist.add('selectedcontent",{"_index":1920,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["event.stoppropagation",{"_index":1988,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["example",{"_index":2592,"title":{},"body":{"components/ThreadHeaderComponent.html":{}}}],["execute",{"_index":2799,"title":{},"body":{"index.html":{}}}],["exist",{"_index":503,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"injectables/ChatAreaService.html":{}}}],["existiert",{"_index":1706,"title":{},"body":{"components/LogInComponent.html":{}}}],["existing",{"_index":715,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["exists",{"_index":499,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"injectables/ChatAreaService.html":{}}}],["expired",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Channel.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"classes/Message.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"injectables/OnlineService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"interfaces/User.html":{},"interfaces/UserInterFace.html":{},"components/UserProfilComponent.html":{}}}],["express",{"_index":2763,"title":{},"body":{"dependencies.html":{}}}],["failed",{"_index":1696,"title":{},"body":{"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{}}}],["failure",{"_index":1622,"title":{},"body":{"components/LogInComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["falsches",{"_index":1712,"title":{},"body":{"components/LogInComponent.html":{}}}],["false",{"_index":473,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{}}}],["family",{"_index":1776,"title":{},"body":{"components/LogInComponent.html":{}}}],["fb",{"_index":1336,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["februar",{"_index":980,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["fehler",{"_index":1728,"title":{},"body":{"components/LogInComponent.html":{}}}],["fehlgeschlagene",{"_index":1724,"title":{},"body":{"components/LogInComponent.html":{}}}],["feld",{"_index":1386,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["fetchchannels",{"_index":2433,"title":{},"body":{"injectables/SidebarService.html":{}}}],["fetches",{"_index":1190,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{},"components/LogInComponent.html":{}}}],["fetchusers",{"_index":2434,"title":{},"body":{"injectables/SidebarService.html":{}}}],["fetchusersonline",{"_index":1609,"title":{},"body":{"components/LogInComponent.html":{}}}],["ffen",{"_index":2009,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["ffffff",{"_index":1767,"title":{},"body":{"components/LogInComponent.html":{}}}],["field",{"_index":1417,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["field'},{'name",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["field.component",{"_index":1499,"title":{},"body":{"components/HeaderComponent.html":{}}}],["field.component.ts",{"_index":2708,"title":{},"body":{"coverage.html":{}}}],["field/search",{"_index":1498,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["fields",{"_index":2049,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Channel.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"classes/Message.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"injectables/OnlineService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"interfaces/User.html":{},"interfaces/UserInterFace.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["filename",{"_index":913,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["fileref",{"_index":1477,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["files",{"_index":2786,"title":{},"body":{"index.html":{}}}],["fileuploadeservice",{"_index":1439,"title":{"injectables/FileUploadeService.html":{}},"body":{"injectables/FileUploadeService.html":{},"coverage.html":{}}}],["fileurl",{"_index":912,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"injectables/FileUploadeService.html":{},"classes/Message.html":{}}}],["fill",{"_index":1758,"title":{},"body":{"components/LogInComponent.html":{}}}],["filter",{"_index":585,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"injectables/SearchService.html":{}}}],["filter((value",{"_index":1029,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["filter(channel",{"_index":2379,"title":{},"body":{"injectables/SearchService.html":{}}}],["filtered",{"_index":2359,"title":{},"body":{"injectables/SearchService.html":{}}}],["filteredchannels",{"_index":2373,"title":{},"body":{"injectables/SearchService.html":{}}}],["filteredmessages",{"_index":2381,"title":{},"body":{"injectables/SearchService.html":{}}}],["filteredmessages.push",{"_index":2396,"title":{},"body":{"injectables/SearchService.html":{}}}],["filteredusers",{"_index":2401,"title":{},"body":{"injectables/SearchService.html":{}}}],["filters",{"_index":2356,"title":{},"body":{"injectables/SearchService.html":{}}}],["find",{"_index":726,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["firebase/firestore",{"_index":936,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["firebase/storage",{"_index":1454,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["firebaseauth",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebaseconfig",{"_index":2663,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["firestore",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/FileUploadeService.html":{},"components/LogInComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["firestoreinstance",{"_index":1008,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["first",{"_index":2807,"title":{},"body":{"index.html":{}}}],["fit",{"_index":1290,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/UserProfilComponent.html":{}}}],["fixed",{"_index":797,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HomeComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["flex",{"_index":424,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["focus",{"_index":1419,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["folgende",{"_index":2124,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["font",{"_index":624,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["form",{"_index":1258,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["format",{"_index":857,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["formatdate",{"_index":839,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["formatdate(timestamp",{"_index":851,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["formats",{"_index":853,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["formatted",{"_index":858,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["formbuilder",{"_index":1375,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formfield",{"_index":1771,"title":{},"body":{"components/LogInComponent.html":{}}}],["formgroup",{"_index":2058,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["formsmodule",{"_index":698,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["formular",{"_index":1391,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["forwards",{"_index":1760,"title":{},"body":{"components/LogInComponent.html":{}}}],["found",{"_index":728,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/LogInComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["fragen",{"_index":2171,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["friendly",{"_index":1630,"title":{},"body":{"components/LogInComponent.html":{}}}],["from(promise",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["fully",{"_index":732,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["function",{"_index":746,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/LogInComponent.html":{},"components/UserProfilComponent.html":{}}}],["funktion",{"_index":2530,"title":{},"body":{"injectables/SidebarService.html":{}}}],["funktionalität",{"_index":2139,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["further",{"_index":2810,"title":{},"body":{"index.html":{}}}],["füge",{"_index":1564,"title":{},"body":{"components/HomeComponent.html":{}}}],["führender",{"_index":1056,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["füllen",{"_index":1389,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["für",{"_index":1150,"title":{},"body":{"injectables/DirectMessageSelectionService.html":{},"injectables/FileUploadeService.html":{},"components/PrivacyPolicyComponent.html":{}}}],["g",{"_index":2848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gap",{"_index":598,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["gap:50px",{"_index":1509,"title":{},"body":{"components/HeaderComponent.html":{}}}],["gast",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["gast@gastmail.com",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["geben",{"_index":994,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/ResetPasswordComponent.html":{}}}],["generate",{"_index":2788,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2773,"title":{},"body":{"index.html":{}}}],["gesendet",{"_index":2282,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["gesetzlich",{"_index":2153,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gespeicherten",{"_index":2159,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["getallchannelsorted",{"_index":1931,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["getallusersorted",{"_index":1932,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["getauth",{"_index":2829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getdatabase",{"_index":2833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getdate",{"_index":840,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["getdate(timestamp",{"_index":860,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["getdoc",{"_index":537,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/ReactionListComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["getdoc(messageref",{"_index":1013,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["getdocs",{"_index":538,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/ReactionListComponent.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadHeaderComponent.html":{}}}],["getdocs(channelscollection",{"_index":2532,"title":{},"body":{"injectables/SidebarService.html":{}}}],["getdocs(channelsref",{"_index":2372,"title":{},"body":{"injectables/SearchService.html":{}}}],["getdocs(messagesref",{"_index":2389,"title":{},"body":{"injectables/SearchService.html":{}}}],["getdocs(userscollection",{"_index":2557,"title":{},"body":{"injectables/SidebarService.html":{}}}],["getdownloadurl",{"_index":1450,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["getdownloadurl(uploadtask.snapshot.ref).then((downloadurl",{"_index":1475,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["getfirestore",{"_index":2831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getformattedtime",{"_index":841,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["getformattedtime(hour",{"_index":869,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["getimagedimensionbasedonaspect",{"_index":1964,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["getimagedimensionbasedonaspect(src",{"_index":1967,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["getmessagesforchannel",{"_index":2342,"title":{},"body":{"injectables/SearchService.html":{}}}],["getmessagesforchannel(channelid",{"_index":2348,"title":{},"body":{"injectables/SearchService.html":{}}}],["getmonth",{"_index":1060,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["getmonthname",{"_index":842,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["getmonthname(monthnumber",{"_index":875,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["getopenchannel",{"_index":1222,"title":{},"body":{"injectables/EditChannelService.html":{}}}],["getprofile",{"_index":1181,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["getreactioncount",{"_index":843,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["getreactioncount(message",{"_index":880,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["gets",{"_index":862,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["getselectedchannel",{"_index":652,"title":{},"body":{"injectables/ChannelSelectionService.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/NewMessageSelectionService.html":{}}}],["getselectedimg",{"_index":653,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["getselectedreaction",{"_index":654,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["getselecteduid",{"_index":1933,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["getstorage",{"_index":1451,"title":{},"body":{"injectables/FileUploadeService.html":{},"miscellaneous/variables.html":{}}}],["getter",{"_index":684,"title":{},"body":{"injectables/ChannelSelectionService.html":{},"injectables/DirectMessageSelectionService.html":{}}}],["getting",{"_index":2770,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":704,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/ReactionListComponent.html":{}}}],["getuser(content).name",{"_index":2249,"title":{},"body":{"components/ReactionListComponent.html":{}}}],["getuser(uid",{"_index":721,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/ReactionListComponent.html":{}}}],["getuser(useruid).name",{"_index":790,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["gewährleistung",{"_index":2137,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geänderte",{"_index":2183,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gi@uhegi.eoig",{"_index":2642,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["gibt",{"_index":1231,"title":{},"body":{"injectables/EditChannelService.html":{}}}],["given",{"_index":872,"title":{},"body":{"injectables/ChatAreaService.html":{},"injectables/SearchService.html":{}}}],["givendate",{"_index":1044,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["givendate.getdate",{"_index":1046,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["givendate.getfullyear",{"_index":1050,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["givendate.getmonth",{"_index":1048,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["global",{"_index":1794,"title":{},"body":{"components/LogInComponent.html":{}}}],["globalchanneluids",{"_index":2425,"title":{},"body":{"injectables/SidebarService.html":{}}}],["go",{"_index":2812,"title":{},"body":{"index.html":{}}}],["goback",{"_index":1576,"title":{},"body":{"components/ImpressumComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["google",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"components/LogInComponent.html":{}}}],["googleauthprovider",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["googleauthprovider.credentialfromresult(result",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["googlesignin",{"_index":1610,"title":{},"body":{"components/LogInComponent.html":{}}}],["gradient(1.46deg",{"_index":1797,"title":{},"body":{"components/LogInComponent.html":{}}}],["gray",{"_index":1429,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["greater",{"_index":1971,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["grey",{"_index":1779,"title":{},"body":{"components/LogInComponent.html":{}}}],["group",{"_index":2051,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["guest",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"components/LogInComponent.html":{}}}],["guestlogin",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"components/LogInComponent.html":{}}}],["gábor",{"_index":1593,"title":{},"body":{"components/ImpressumComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["gäste",{"_index":1745,"title":{},"body":{"components/LogInComponent.html":{}}}],["h1",{"_index":1819,"title":{},"body":{"components/LogInComponent.html":{}}}],["haben",{"_index":2114,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["handle",{"_index":771,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["handleerror",{"_index":1611,"title":{},"body":{"components/LogInComponent.html":{}}}],["handleerror(errorcode",{"_index":1626,"title":{},"body":{"components/LogInComponent.html":{}}}],["handles",{"_index":1351,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["handshake",{"_index":955,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["hasreaction",{"_index":844,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["hasreaction(message",{"_index":885,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["hasuserreacted",{"_index":845,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["hasuserreacted(message",{"_index":888,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["header",{"_index":445,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["header'},{'name",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["header.component",{"_index":396,"title":{},"body":{"components/ChannelComponent.html":{},"components/DirectMessagesComponent.html":{},"components/NewMessageComponent.html":{},"components/ThreadComponent.html":{}}}],["header.component.html",{"_index":448,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/HeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["header.component.scss",{"_index":543,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/HeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["header.component.scss,./channel",{"_index":446,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["header.component.scss,./header",{"_index":1484,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.ts",{"_index":444,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ThreadHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:104",{"_index":1183,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["header.component.ts:122",{"_index":1185,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["header.component.ts:127",{"_index":493,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["header.component.ts:154",{"_index":464,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["header.component.ts:166",{"_index":471,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["header.component.ts:19",{"_index":1879,"title":{},"body":{"components/NewMessageHeaderComponent.html":{}}}],["header.component.ts:20",{"_index":1880,"title":{},"body":{"components/NewMessageHeaderComponent.html":{}}}],["header.component.ts:21",{"_index":1881,"title":{},"body":{"components/NewMessageHeaderComponent.html":{}}}],["header.component.ts:22",{"_index":1872,"title":{},"body":{"components/NewMessageHeaderComponent.html":{}}}],["header.component.ts:29",{"_index":1873,"title":{},"body":{"components/NewMessageHeaderComponent.html":{}}}],["header.component.ts:30",{"_index":2585,"title":{},"body":{"components/ThreadHeaderComponent.html":{}}}],["header.component.ts:34",{"_index":1877,"title":{},"body":{"components/NewMessageHeaderComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["header.component.ts:35",{"_index":526,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["header.component.ts:36",{"_index":525,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["header.component.ts:37",{"_index":523,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["header.component.ts:38",{"_index":528,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["header.component.ts:39",{"_index":463,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["header.component.ts:40",{"_index":2599,"title":{},"body":{"components/ThreadHeaderComponent.html":{}}}],["header.component.ts:42",{"_index":2589,"title":{},"body":{"components/ThreadHeaderComponent.html":{}}}],["header.component.ts:43",{"_index":527,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["header.component.ts:44",{"_index":1878,"title":{},"body":{"components/NewMessageHeaderComponent.html":{}}}],["header.component.ts:45",{"_index":524,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["header.component.ts:46",{"_index":1194,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["header.component.ts:47",{"_index":1195,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["header.component.ts:48",{"_index":1193,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["header.component.ts:49",{"_index":1198,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["header.component.ts:50",{"_index":1197,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["header.component.ts:51",{"_index":1199,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["header.component.ts:52",{"_index":1200,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["header.component.ts:53",{"_index":1182,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["header.component.ts:55",{"_index":1874,"title":{},"body":{"components/NewMessageHeaderComponent.html":{}}}],["header.component.ts:56",{"_index":1196,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["header.component.ts:57",{"_index":2586,"title":{},"body":{"components/ThreadHeaderComponent.html":{}}}],["header.component.ts:58",{"_index":475,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["header.component.ts:59",{"_index":1184,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["header.component.ts:67",{"_index":1187,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{}}}],["header.component.ts:73",{"_index":486,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["header.component.ts:76",{"_index":1189,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["header.component.ts:83",{"_index":491,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["header.component.ts:91",{"_index":1188,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["header.component.ts:99",{"_index":507,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["header/channel",{"_index":395,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"coverage.html":{}}}],["header/direct",{"_index":1172,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"coverage.html":{}}}],["header/header.component",{"_index":1543,"title":{},"body":{"components/HomeComponent.html":{}}}],["header/new",{"_index":1866,"title":{},"body":{"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"coverage.html":{}}}],["header/thread",{"_index":2577,"title":{},"body":{"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"coverage.html":{}}}],["headercomponent",{"_index":20,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["hegedüs",{"_index":1590,"title":{},"body":{"components/ImpressumComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["heidrich",{"_index":1592,"title":{},"body":{"components/ImpressumComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["height",{"_index":415,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["help",{"_index":2811,"title":{},"body":{"index.html":{}}}],["here",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["heute",{"_index":1052,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["hidden",{"_index":432,"title":{},"body":{"components/ChannelComponent.html":{},"components/LogInComponent.html":{}}}],["hide",{"_index":720,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["hideorshowpopup",{"_index":1247,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["hideorshowsidebar",{"_index":1996,"title":{},"body":{"components/OpenSidebarComponent.html":{},"injectables/SearchService.html":{},"components/UserProfilComponent.html":{}}}],["hidesearch",{"_index":2343,"title":{},"body":{"injectables/SearchService.html":{}}}],["hier",{"_index":1565,"title":{},"body":{"components/HomeComponent.html":{}}}],["hinzu",{"_index":1566,"title":{},"body":{"components/HomeComponent.html":{}}}],["history",{"_index":2261,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["holzleiter",{"_index":1594,"title":{},"body":{"components/ImpressumComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["home",{"_index":1533,"title":{},"body":{"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["home'},{'name",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["home.component.html",{"_index":1535,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1560,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss,./home",{"_index":1534,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":129,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["homepage",{"_index":2041,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["hour",{"_index":873,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["hour.tostring().padstart(2",{"_index":1003,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["hours",{"_index":1002,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["hours}:${minutes",{"_index":1006,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["hover",{"_index":456,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["hover.png",{"_index":824,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{}}}],["hovered",{"_index":469,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["hoveroff",{"_index":457,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["html",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["http://localhost:4200",{"_index":2782,"title":{},"body":{"index.html":{}}}],["human",{"_index":863,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["icon",{"_index":615,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["id",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Channel.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"components/DirectMessagesHeaderComponent.html":{},"classes/Message.html":{},"components/NewMessageHeaderComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadHeaderComponent.html":{}}}],["identifier",{"_index":900,"title":{},"body":{"injectables/ChatAreaService.html":{},"coverage.html":{}}}],["if(!useronline",{"_index":1280,"title":{},"body":{"components/EditProfilComponent.html":{}}}],["if(authservice.currentusersignal()?.uid",{"_index":791,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{}}}],["if(channelinfo.globalchanneluids[channelinfo.currentchannelnumber][i",{"_index":787,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["if(hideorshowsidebar.sidebaropen",{"_index":2007,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["if(this.currentchannel.images.length",{"_index":568,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["if(this.hideorshowsidebar.activeuid",{"_index":2648,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["if(this.responsiveservice.issidebaropen",{"_index":1507,"title":{},"body":{"components/HeaderComponent.html":{}}}],["if(this.userinfo.asd",{"_index":1665,"title":{},"body":{"components/LogInComponent.html":{}}}],["if(this.userinfo.online",{"_index":1668,"title":{},"body":{"components/LogInComponent.html":{}}}],["if(userdata['online",{"_index":1681,"title":{},"body":{"components/LogInComponent.html":{}}}],["if(window.innerwidth",{"_index":1506,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ihnen",{"_index":2279,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["ihr",{"_index":2280,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["ihre",{"_index":2141,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ihrer",{"_index":2100,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ihres",{"_index":2135,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["image",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"injectables/SaveNewUserService.html":{},"interfaces/User.html":{},"components/UserProfilComponent.html":{}}}],["imagelist",{"_index":2426,"title":{},"body":{"injectables/SidebarService.html":{}}}],["images",{"_index":496,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"injectables/ChatAreaService.html":{},"components/NewMessageHeaderComponent.html":{}}}],["imageurl",{"_index":1178,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["img",{"_index":815,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/HeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{}}}],["img'},{'name",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["img.component",{"_index":1559,"title":{},"body":{"components/HomeComponent.html":{}}}],["img.component.html",{"_index":1962,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["img.component.scss",{"_index":1963,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["img.component.ts",{"_index":1961,"title":{},"body":{"components/OpenImgComponent.html":{},"coverage.html":{}}}],["img.component.ts:13",{"_index":1966,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["img.component.ts:14",{"_index":1984,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["img.component.ts:16",{"_index":1976,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["img.component.ts:28",{"_index":1978,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["img.component.ts:38",{"_index":1968,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["img.height",{"_index":1991,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["img.src",{"_index":1989,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["img.width",{"_index":1990,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["img/open",{"_index":1558,"title":{},"body":{"components/HomeComponent.html":{},"components/OpenImgComponent.html":{},"coverage.html":{}}}],["imgsrcarrow",{"_index":1575,"title":{},"body":{"components/ImpressumComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["imgurl",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/RevealPasswordService.html":{},"interfaces/UserInterFace.html":{}}}],["imgurlhide",{"_index":2296,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["imgurlwiew",{"_index":2297,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/ThreadComponent.html":{},"index.html":{}}}],["import",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"injectables/OnlineService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{}}}],["important",{"_index":422,"title":{},"body":{"components/ChannelComponent.html":{},"components/EditProfilComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/UserProfilComponent.html":{}}}],["importiere",{"_index":1553,"title":{},"body":{"components/HomeComponent.html":{}}}],["imports",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["impressum",{"_index":1572,"title":{},"body":{"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["impressum'},{'name",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["impressum.component.html",{"_index":1573,"title":{},"body":{"components/ImpressumComponent.html":{}}}],["impressum.component.scss",{"_index":1574,"title":{},"body":{"components/ImpressumComponent.html":{}}}],["impressumcomponent",{"_index":131,"title":{"components/ImpressumComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["in'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["in.component",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/LogInComponent.html":{}}}],["in.component.html",{"_index":1605,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.scss",{"_index":1747,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.scss','./log",{"_index":1655,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.scss,./log",{"_index":1603,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.ts",{"_index":1602,"title":{},"body":{"components/LogInComponent.html":{},"coverage.html":{}}}],["in.component.ts:104",{"_index":1632,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.ts:112",{"_index":1634,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.ts:120",{"_index":1642,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.ts:128",{"_index":1639,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.ts:136",{"_index":1640,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.ts:149",{"_index":1624,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.ts:182",{"_index":1635,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.ts:215",{"_index":1627,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.ts:25",{"_index":1643,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.ts:26",{"_index":1651,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.ts:27",{"_index":1645,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.ts:28",{"_index":1644,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.ts:29",{"_index":1652,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.ts:30",{"_index":1649,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.ts:32",{"_index":1647,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.ts:35",{"_index":1617,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.ts:39",{"_index":1633,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.ts:50",{"_index":1619,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.ts:79",{"_index":1618,"title":{},"body":{"components/LogInComponent.html":{}}}],["in.component.ts:96",{"_index":1641,"title":{},"body":{"components/LogInComponent.html":{}}}],["in/log",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/LogInComponent.html":{},"coverage.html":{}}}],["includes(userid",{"_index":1070,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["indent",{"_index":1774,"title":{},"body":{"components/LogInComponent.html":{}}}],["index",{"_index":32,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Channel.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"classes/Message.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"interfaces/User.html":{},"interfaces/UserInterFace.html":{},"components/UserProfilComponent.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":467,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["indicating",{"_index":867,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Channel.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"classes/Message.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"injectables/OnlineService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"interfaces/User.html":{},"interfaces/UserInterFace.html":{},"components/UserProfilComponent.html":{}}}],["inform",{"_index":1269,"title":{},"body":{"components/EditProfilComponent.html":{}}}],["information",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"components/DirectMessagesComponent.html":{},"components/EditProfilComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["informieren",{"_index":2106,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["initialer",{"_index":1145,"title":{},"body":{"injectables/DirectMessageSelectionService.html":{}}}],["initializeapp(firebaseconfig",{"_index":2827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initialized",{"_index":733,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["initializes",{"_index":476,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{}}}],["initiates",{"_index":1620,"title":{},"body":{"components/LogInComponent.html":{}}}],["inject",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["inject(activatedroute",{"_index":2064,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["inject(auth",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject(authservice",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfilComponent.html":{}}}],["inject(firestore",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject(formbuilder",{"_index":1359,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["inject(responsiveservice",{"_index":393,"title":{},"body":{"components/ChannelComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["inject(revealpasswordservice",{"_index":1648,"title":{},"body":{"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{}}}],["inject(router",{"_index":1650,"title":{},"body":{"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["inject(savenewuserservice",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject(searchservice",{"_index":1541,"title":{},"body":{"components/HomeComponent.html":{}}}],["inject(sidebarservice",{"_index":522,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/SearchService.html":{},"components/UserProfilComponent.html":{}}}],["inject(threadservice",{"_index":2484,"title":{},"body":{"injectables/SidebarService.html":{}}}],["injectable",{"_index":177,"title":{"injectables/AuthService.html":{},"injectables/ChannelSelectionService.html":{},"injectables/ChatAreaService.html":{},"injectables/DirectMessageSelectionService.html":{},"injectables/EditChannelService.html":{},"injectables/FileUploadeService.html":{},"injectables/NewMessageSelectionService.html":{},"injectables/OnlineService.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"injectables/ThreadService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ChannelSelectionService.html":{},"injectables/ChatAreaService.html":{},"injectables/DirectMessageSelectionService.html":{},"injectables/EditChannelService.html":{},"injectables/FileUploadeService.html":{},"injectables/NewMessageSelectionService.html":{},"injectables/OnlineService.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"injectables/ThreadService.html":{},"coverage.html":{}}}],["injectables",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChannelSelectionService.html":{},"injectables/ChatAreaService.html":{},"injectables/DirectMessageSelectionService.html":{},"injectables/EditChannelService.html":{},"injectables/FileUploadeService.html":{},"injectables/NewMessageSelectionService.html":{},"injectables/OnlineService.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"injectables/ThreadService.html":{},"overview.html":{}}}],["input",{"_index":925,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/ReactionListComponent.html":{},"components/ThreadComponent.html":{}}}],["input'},{'name",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["input.component",{"_index":400,"title":{},"body":{"components/ChannelComponent.html":{},"components/DirectMessagesComponent.html":{},"components/NewMessageComponent.html":{},"components/ThreadComponent.html":{}}}],["input.component.ts",{"_index":2687,"title":{},"body":{"coverage.html":{}}}],["input.trim().split(/\\s+/).length",{"_index":1072,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["input/channel",{"_index":399,"title":{},"body":{"components/ChannelComponent.html":{},"coverage.html":{}}}],["input/direct",{"_index":1174,"title":{},"body":{"components/DirectMessagesComponent.html":{},"coverage.html":{}}}],["input/new",{"_index":1863,"title":{},"body":{"components/NewMessageComponent.html":{},"coverage.html":{}}}],["input/thread",{"_index":2575,"title":{},"body":{"components/ThreadComponent.html":{},"coverage.html":{}}}],["inputs",{"_index":2566,"title":{},"body":{"components/ThreadComponent.html":{}}}],["inputvalue",{"_index":1876,"title":{},"body":{"components/NewMessageHeaderComponent.html":{}}}],["inputvalue.tolowercase",{"_index":1889,"title":{},"body":{"components/NewMessageHeaderComponent.html":{}}}],["insensitive",{"_index":2357,"title":{},"body":{"injectables/SearchService.html":{}}}],["inside",{"_index":1349,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["instance",{"_index":2596,"title":{},"body":{"components/ThreadHeaderComponent.html":{}}}],["instance.subchannels",{"_index":2598,"title":{},"body":{"components/ThreadHeaderComponent.html":{}}}],["instantsearch",{"_index":2761,"title":{},"body":{"dependencies.html":{}}}],["interact",{"_index":1494,"title":{},"body":{"components/HeaderComponent.html":{}}}],["interaction",{"_index":1265,"title":{},"body":{"components/EditProfilComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["interactions",{"_index":1264,"title":{},"body":{"components/EditProfilComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["interface",{"_index":373,"title":{"interfaces/Channel.html":{},"interfaces/User.html":{},"interfaces/UserInterFace.html":{}},"body":{"interfaces/Channel.html":{},"components/ChannelHeaderComponent.html":{},"interfaces/User.html":{},"interfaces/UserInterFace.html":{},"coverage.html":{}}}],["interfaces",{"_index":374,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/User.html":{},"interfaces/UserInterFace.html":{},"overview.html":{}}}],["invalid",{"_index":977,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/ResetPasswordComponent.html":{}}}],["invoking",{"_index":2587,"title":{},"body":{"components/ThreadHeaderComponent.html":{}}}],["ischannelopen",{"_index":655,"title":{},"body":{"injectables/ChannelSelectionService.html":{},"injectables/ResponsiveService.html":{}}}],["isdirectmessageopen",{"_index":2284,"title":{},"body":{"injectables/ResponsiveService.html":{}}}],["iseditchannel",{"_index":1223,"title":{},"body":{"injectables/EditChannelService.html":{}}}],["isheaderopen",{"_index":2285,"title":{},"body":{"injectables/ResponsiveService.html":{}}}],["isittoday",{"_index":846,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["isittoday(message",{"_index":891,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["issearching",{"_index":2341,"title":{},"body":{"injectables/SearchService.html":{}}}],["issidebaropen",{"_index":2286,"title":{},"body":{"injectables/ResponsiveService.html":{}}}],["ist",{"_index":1061,"title":{},"body":{"injectables/ChatAreaService.html":{},"injectables/EditChannelService.html":{},"components/LogInComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["isthreadopen",{"_index":2287,"title":{},"body":{"injectables/ResponsiveService.html":{},"injectables/ThreadService.html":{}}}],["items",{"_index":594,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["iterates",{"_index":517,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{}}}],["jahr",{"_index":1064,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["januar",{"_index":979,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["je",{"_index":1234,"title":{},"body":{"injectables/EditChannelService.html":{}}}],["jederzeit",{"_index":2156,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["join",{"_index":1036,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["joost",{"_index":1591,"title":{},"body":{"components/ImpressumComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["json",{"_index":2219,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["juli",{"_index":985,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["juni",{"_index":984,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["justify",{"_index":572,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["kanaldaten",{"_index":2528,"title":{},"body":{"injectables/SidebarService.html":{}}}],["kanale",{"_index":1922,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["kann",{"_index":1147,"title":{},"body":{"injectables/DirectMessageSelectionService.html":{}}}],["karma",{"_index":2801,"title":{},"body":{"index.html":{}}}],["kein",{"_index":1707,"title":{},"body":{"components/LogInComponent.html":{}}}],["key",{"_index":1024,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/PasswordResetComponent.html":{}}}],["keyframes",{"_index":1809,"title":{},"body":{"components/LogInComponent.html":{}}}],["kontakt",{"_index":2170,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["konto",{"_index":1732,"title":{},"body":{"components/LogInComponent.html":{}}}],["korrekt",{"_index":1392,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["können",{"_index":2281,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["landing_page/log",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["landing_page/sign",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["lang",{"_index":2085,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["last",{"_index":1583,"title":{},"body":{"components/ImpressumComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["lastthreadmessage",{"_index":915,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/Message.html":{}}}],["left",{"_index":434,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["legal",{"_index":1761,"title":{},"body":{"components/LogInComponent.html":{}}}],["legend",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["leider",{"_index":1741,"title":{},"body":{"components/LogInComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["length",{"_index":501,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"injectables/ChatAreaService.html":{}}}],["less",{"_index":1490,"title":{},"body":{"components/HeaderComponent.html":{}}}],["limit",{"_index":512,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["limit(1000",{"_index":552,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["limited",{"_index":1192,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["line",{"_index":1780,"title":{},"body":{"components/LogInComponent.html":{}}}],["linear",{"_index":1796,"title":{},"body":{"components/LogInComponent.html":{}}}],["link",{"_index":1790,"title":{},"body":{"components/LogInComponent.html":{}}}],["list",{"_index":492,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{},"injectables/SearchService.html":{},"components/ThreadHeaderComponent.html":{}}}],["list'},{'name",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["list.component",{"_index":1556,"title":{},"body":{"components/HomeComponent.html":{}}}],["list.component.html",{"_index":2234,"title":{},"body":{"components/ReactionListComponent.html":{}}}],["list.component.scss",{"_index":2235,"title":{},"body":{"components/ReactionListComponent.html":{}}}],["list.component.ts",{"_index":2233,"title":{},"body":{"components/ReactionListComponent.html":{},"coverage.html":{}}}],["list.component.ts:29",{"_index":2248,"title":{},"body":{"components/ReactionListComponent.html":{}}}],["list.component.ts:30",{"_index":2245,"title":{},"body":{"components/ReactionListComponent.html":{}}}],["list.component.ts:31",{"_index":2247,"title":{},"body":{"components/ReactionListComponent.html":{}}}],["list.component.ts:33",{"_index":2237,"title":{},"body":{"components/ReactionListComponent.html":{}}}],["list.component.ts:36",{"_index":2246,"title":{},"body":{"components/ReactionListComponent.html":{}}}],["list.component.ts:39",{"_index":2239,"title":{},"body":{"components/ReactionListComponent.html":{}}}],["list.component.ts:47",{"_index":2241,"title":{},"body":{"components/ReactionListComponent.html":{}}}],["list.component.ts:51",{"_index":2244,"title":{},"body":{"components/ReactionListComponent.html":{}}}],["list.component.ts:61",{"_index":2240,"title":{},"body":{"components/ReactionListComponent.html":{}}}],["list.component.ts:70",{"_index":2238,"title":{},"body":{"components/ReactionListComponent.html":{}}}],["list.component.ts:79",{"_index":2243,"title":{},"body":{"components/ReactionListComponent.html":{}}}],["list.foreach((element",{"_index":554,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["list/reaction",{"_index":1555,"title":{},"body":{"components/HomeComponent.html":{},"components/ReactionListComponent.html":{},"coverage.html":{}}}],["listens",{"_index":515,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["literal",{"_index":2052,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["local",{"_index":1191,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{},"components/LogInComponent.html":{}}}],["location",{"_index":1578,"title":{},"body":{"components/ImpressumComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["lock",{"_index":1784,"title":{},"body":{"components/LogInComponent.html":{}}}],["log",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["logging",{"_index":1636,"title":{},"body":{"components/LogInComponent.html":{}}}],["login",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"components/LogInComponent.html":{}}}],["login(email",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["logincomponent",{"_index":24,"title":{"components/LogInComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["logo",{"_index":1522,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogInComponent.html":{}}}],["logoanimation",{"_index":1803,"title":{},"body":{"components/LogInComponent.html":{}}}],["logoslide",{"_index":1807,"title":{},"body":{"components/LogInComponent.html":{}}}],["logoslide375px",{"_index":1825,"title":{},"body":{"components/LogInComponent.html":{}}}],["logoslide430px",{"_index":1823,"title":{},"body":{"components/LogInComponent.html":{}}}],["logoslideoriginal",{"_index":1751,"title":{},"body":{"components/LogInComponent.html":{}}}],["logoslidephone",{"_index":1817,"title":{},"body":{"components/LogInComponent.html":{}}}],["logoslidephone375px",{"_index":1824,"title":{},"body":{"components/LogInComponent.html":{}}}],["logoslidephone430px",{"_index":1822,"title":{},"body":{"components/LogInComponent.html":{}}}],["logout",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["logouttojson",{"_index":1612,"title":{},"body":{"components/LogInComponent.html":{}}}],["logs",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["longer",{"_index":474,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["lowercaseinputvalue",{"_index":1888,"title":{},"body":{"components/NewMessageHeaderComponent.html":{}}}],["löschung",{"_index":2165,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mai",{"_index":983,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["mail",{"_index":1283,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfilComponent.html":{}}}],["mail&#64;mark.hegedus.com",{"_index":1599,"title":{},"body":{"components/ImpressumComponent.html":{}}}],["mail@mark.hegedus.com",{"_index":1600,"title":{},"body":{"components/ImpressumComponent.html":{}}}],["main/channel/channel/channel.component",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["main/create",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["main/header/header.component",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["main/open",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["main/sidebar/sidebar.component",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["many",{"_index":1720,"title":{},"body":{"components/LogInComponent.html":{}}}],["map(doc",{"_index":2375,"title":{},"body":{"injectables/SearchService.html":{}}}],["mapping",{"_index":1629,"title":{},"body":{"components/LogInComponent.html":{}}}],["margin",{"_index":427,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/UserProfilComponent.html":{}}}],["mark",{"_index":1589,"title":{},"body":{"components/ImpressumComponent.html":{}}}],["mart",{"_index":1212,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{},"dependencies.html":{}}}],["match",{"_index":727,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SearchService.html":{}}}],["matches",{"_index":520,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["matching",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Channel.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"classes/Message.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"injectables/OnlineService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"interfaces/User.html":{},"interfaces/UserInterFace.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":439,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{}}}],["measurementid",{"_index":2847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":438,"title":{},"body":{"components/ChannelComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{}}}],["media(max",{"_index":641,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["memberof",{"_index":2600,"title":{},"body":{"components/ThreadHeaderComponent.html":{}}}],["men",{"_index":2008,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["menu",{"_index":2001,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["menu.png",{"_index":2024,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["menu/account_circle.png",{"_index":2228,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["menu/account_circle_focus.png",{"_index":2225,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["menu/logout.png",{"_index":2229,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["menu/logout_focus.png",{"_index":2226,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["menu/show",{"_index":2016,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["menu2.png",{"_index":2017,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["menu3.png",{"_index":2029,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["menu4.png",{"_index":2026,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":2851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":110,"title":{"classes/Message.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"classes/Message.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SearchService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["message'},{'name",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["message.class",{"_index":1214,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["message.class.ts",{"_index":1082,"title":{},"body":{"classes/DirectMessage.html":{},"coverage.html":{}}}],["message.class.ts:10",{"_index":1093,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:11",{"_index":1097,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:12",{"_index":1102,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:13",{"_index":1096,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:14",{"_index":1108,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:15",{"_index":1091,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:16",{"_index":1090,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:17",{"_index":1104,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:18",{"_index":1087,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:19",{"_index":1092,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:2",{"_index":1094,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:20",{"_index":1106,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:21",{"_index":1105,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:22",{"_index":1101,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:23",{"_index":1099,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:24",{"_index":1100,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:25",{"_index":1103,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:26",{"_index":1085,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:3",{"_index":1107,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:4",{"_index":1088,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:5",{"_index":1095,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:6",{"_index":1109,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:7",{"_index":1110,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:8",{"_index":1098,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.class.ts:9",{"_index":1089,"title":{},"body":{"classes/DirectMessage.html":{}}}],["message.component",{"_index":1552,"title":{},"body":{"components/HomeComponent.html":{}}}],["message.component.html",{"_index":1861,"title":{},"body":{"components/NewMessageComponent.html":{}}}],["message.component.scss",{"_index":1862,"title":{},"body":{"components/NewMessageComponent.html":{}}}],["message.component.ts",{"_index":1860,"title":{},"body":{"components/NewMessageComponent.html":{},"coverage.html":{}}}],["message.day",{"_index":1078,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["message.month",{"_index":1076,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["message.year",{"_index":1074,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["message/new",{"_index":1551,"title":{},"body":{"components/HomeComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"coverage.html":{}}}],["message[reactionname",{"_index":1066,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["message[reactionname].length",{"_index":1067,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["message[reactionname]?.split",{"_index":1069,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["messagedata",{"_index":2392,"title":{},"body":{"injectables/SearchService.html":{}}}],["messagedata['message",{"_index":2394,"title":{},"body":{"injectables/SearchService.html":{}}}],["messagedata['message'].tolowercase().includes(normalizedterm",{"_index":2395,"title":{},"body":{"injectables/SearchService.html":{}}}],["messagedata['uid",{"_index":2398,"title":{},"body":{"injectables/SearchService.html":{}}}],["messagedoc",{"_index":2390,"title":{},"body":{"injectables/SearchService.html":{}}}],["messagedoc.data",{"_index":2393,"title":{},"body":{"injectables/SearchService.html":{}}}],["messagedoc.id",{"_index":2397,"title":{},"body":{"injectables/SearchService.html":{}}}],["messageid",{"_index":933,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["messageref",{"_index":1010,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["messages",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SearchService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["messages'},{'name",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["messages.component",{"_index":1550,"title":{},"body":{"components/HomeComponent.html":{}}}],["messages.component.html",{"_index":1157,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.scss",{"_index":1158,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.ts",{"_index":1156,"title":{},"body":{"components/DirectMessagesComponent.html":{},"coverage.html":{}}}],["messages.component.ts:22",{"_index":1170,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.ts:23",{"_index":1161,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.ts:26",{"_index":1169,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.ts:29",{"_index":1162,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.ts:41",{"_index":1163,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages/direct",{"_index":1155,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["messagesnapshot",{"_index":1012,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["messagesnapshot.data",{"_index":1023,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["messagesnapshot.exists",{"_index":1014,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["messagesref",{"_index":2386,"title":{},"body":{"injectables/SearchService.html":{}}}],["messagessnapshot",{"_index":2388,"title":{},"body":{"injectables/SearchService.html":{}}}],["messagessnapshot.docs",{"_index":2391,"title":{},"body":{"injectables/SearchService.html":{}}}],["messageuser",{"_index":1179,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["messaging",{"_index":2636,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["messagingsenderid",{"_index":2845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["met",{"_index":506,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["method",{"_index":1164,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/EditProfilComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["methods",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{}}}],["milliseconds",{"_index":911,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["mindestens",{"_index":1385,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/PasswordResetComponent.html":{}}}],["minute",{"_index":870,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["minute.tostring().padstart(2",{"_index":1005,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["minutes",{"_index":1004,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["miscellaneous",{"_index":2817,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":1055,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/LogInComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["mitglieder",{"_index":786,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["mobile",{"_index":1927,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["mode",{"_index":1759,"title":{},"body":{"components/LogInComponent.html":{}}}],["models/channel",{"_index":2366,"title":{},"body":{"injectables/SearchService.html":{}}}],["models/direct",{"_index":1213,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["models/message.class",{"_index":2578,"title":{},"body":{"components/ThreadComponent.html":{}}}],["models/user.interface",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["modules",{"_index":2814,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monat",{"_index":1059,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["monatszahl",{"_index":992,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["month",{"_index":877,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["monthnumber",{"_index":878,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["months",{"_index":978,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["months[monthnumber",{"_index":1001,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["more",{"_index":917,"title":{},"body":{"injectables/ChatAreaService.html":{},"index.html":{}}}],["muss",{"_index":2083,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["márk",{"_index":2121,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["märz",{"_index":981,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["möglich",{"_index":1408,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["nachdem",{"_index":1235,"title":{},"body":{"injectables/EditChannelService.html":{}}}],["nachricht",{"_index":1286,"title":{},"body":{"components/EditProfilComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["name",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Channel.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"classes/Message.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"interfaces/User.html":{},"interfaces/UserInterFace.html":{},"components/UserProfilComponent.html":{},"index.html":{}}}],["namen",{"_index":1459,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["names",{"_index":2362,"title":{},"body":{"injectables/SearchService.html":{}}}],["navigate",{"_index":2781,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":1621,"title":{},"body":{"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ndern",{"_index":1384,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["nderungen",{"_index":1405,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["necessary",{"_index":2203,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["need",{"_index":2806,"title":{},"body":{"index.html":{}}}],["nerdface",{"_index":963,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["neu",{"_index":1730,"title":{},"body":{"components/LogInComponent.html":{}}}],["neue",{"_index":1890,"title":{},"body":{"components/NewMessageHeaderComponent.html":{}}}],["new",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SaveNewUserService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"index.html":{}}}],["newmessage",{"_index":690,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["newmessagecomponent",{"_index":135,"title":{"components/NewMessageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["newmessageheadercomponent",{"_index":138,"title":{"components/NewMessageHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["newmessageinputcomponent",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["newmessagesearchresultscomponent",{"_index":140,"title":{"components/NewMessageSearchResultsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["newmessageselectionservice",{"_index":1871,"title":{"injectables/NewMessageSelectionService.html":{}},"body":{"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"coverage.html":{}}}],["newpassword",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"components/PasswordResetComponent.html":{}}}],["newpassword).then",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"components/PasswordResetComponent.html":{}}}],["newpassword.value",{"_index":2079,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["newtime",{"_index":1667,"title":{},"body":{"components/LogInComponent.html":{}}}],["newvalue",{"_index":928,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["next",{"_index":1657,"title":{},"body":{"components/LogInComponent.html":{}}}],["ng",{"_index":2778,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":705,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["ngoninit",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/ReactionListComponent.html":{},"components/ThreadComponent.html":{}}}],["nicht",{"_index":1407,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["none",{"_index":441,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["normalizedterm",{"_index":2369,"title":{},"body":{"injectables/SearchService.html":{}}}],["notclosedialog",{"_index":706,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["notclosedialog(e",{"_index":735,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["note",{"_index":897,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["noted",{"_index":965,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["notwendig",{"_index":2152,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["november",{"_index":989,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["now",{"_index":1073,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["now.getdate",{"_index":1079,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["now.getfullyear",{"_index":1075,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["now.getmonth",{"_index":1077,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["nowrap",{"_index":1436,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["null",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ChatAreaService.html":{},"injectables/DirectMessageSelectionService.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SidebarService.html":{},"injectables/ThreadService.html":{}}}],["nullbasiert",{"_index":1062,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["number",{"_index":494,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{}}}],["nunito",{"_index":1777,"title":{},"body":{"components/LogInComponent.html":{}}}],["nutzen",{"_index":1738,"title":{},"body":{"components/LogInComponent.html":{}}}],["nutzung",{"_index":2120,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ob",{"_index":1236,"title":{},"body":{"injectables/EditChannelService.html":{}}}],["obj",{"_index":898,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"components/DirectMessagesHeaderComponent.html":{},"classes/Message.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{}}}],["obj.channelcreatoruid",{"_index":968,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/NewMessageHeaderComponent.html":{}}}],["obj.checkmark",{"_index":954,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.communicationtype",{"_index":1138,"title":{},"body":{"classes/DirectMessage.html":{}}}],["obj.creationsdate",{"_index":969,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/NewMessageHeaderComponent.html":{}}}],["obj.date",{"_index":1115,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.day",{"_index":943,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.description",{"_index":970,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/NewMessageHeaderComponent.html":{}}}],["obj.email",{"_index":974,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{}}}],["obj.filename",{"_index":950,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.fileurl",{"_index":949,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.handshake",{"_index":956,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.hour",{"_index":944,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.id",{"_index":1112,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.image",{"_index":975,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{}}}],["obj.images",{"_index":971,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/NewMessageHeaderComponent.html":{}}}],["obj.lastthreadmessage",{"_index":952,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/Message.html":{}}}],["obj.message",{"_index":939,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.milliseconds",{"_index":947,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.minute",{"_index":945,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.month",{"_index":942,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.name",{"_index":972,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{}}}],["obj.nerdface",{"_index":964,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.noted",{"_index":966,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.rocket",{"_index":962,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.seconds",{"_index":946,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.shushingface",{"_index":967,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.threadcount",{"_index":951,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.thumbsdown",{"_index":960,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.thumbsup",{"_index":958,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.uid",{"_index":938,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{}}}],["obj.uids",{"_index":973,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/NewMessageHeaderComponent.html":{}}}],["obj.user",{"_index":948,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.weekday",{"_index":940,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["obj.year",{"_index":941,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["object",{"_index":723,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{},"miscellaneous/variables.html":{}}}],["objekts",{"_index":1018,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["observable",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChannelSelectionService.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"injectables/NewMessageSelectionService.html":{}}}],["obtained",{"_index":764,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["occurs",{"_index":740,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["oder",{"_index":1232,"title":{},"body":{"injectables/EditChannelService.html":{},"components/LogInComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["offine",{"_index":1304,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["offline",{"_index":1299,"title":{},"body":{"components/EditProfilComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["oktober",{"_index":988,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["ondestroy",{"_index":1909,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["one",{"_index":610,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["oninit",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/ThreadComponent.html":{}}}],["online",{"_index":825,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/SidebarService.html":{},"components/UserProfilComponent.html":{}}}],["onlineservice",{"_index":1957,"title":{"injectables/OnlineService.html":{}},"body":{"injectables/OnlineService.html":{},"coverage.html":{}}}],["onlinesince",{"_index":1613,"title":{},"body":{"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["onlineuseruidlist",{"_index":2427,"title":{},"body":{"injectables/SidebarService.html":{}}}],["onsnapshot",{"_index":516,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["onsnapshot(channelscollection",{"_index":2499,"title":{},"body":{"injectables/SidebarService.html":{}}}],["onsnapshot(q",{"_index":553,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["onsnapshot(userscollection",{"_index":1675,"title":{},"body":{"components/LogInComponent.html":{},"injectables/SidebarService.html":{}}}],["onsubmit",{"_index":1340,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["opacity",{"_index":614,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/LogInComponent.html":{}}}],["open",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{}}}],["openaddusertochannel",{"_index":458,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["openchannel",{"_index":656,"title":{},"body":{"injectables/ChannelSelectionService.html":{},"injectables/EditChannelService.html":{},"injectables/SidebarService.html":{}}}],["openchannel(i",{"_index":2439,"title":{},"body":{"injectables/SidebarService.html":{}}}],["opendialog",{"_index":1486,"title":{},"body":{"components/HeaderComponent.html":{}}}],["opendirectmessage",{"_index":657,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["opened",{"_index":759,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/OpenSidebarComponent.html":{}}}],["openimgcomponent",{"_index":143,"title":{"components/OpenImgComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["opennewmessage",{"_index":658,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["openprofil",{"_index":2191,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["opens",{"_index":487,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/ThreadService.html":{}}}],["opensidebarcomponent",{"_index":21,"title":{"components/OpenSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["opensidebarmenu",{"_index":1997,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["openthread",{"_index":2605,"title":{},"body":{"injectables/ThreadService.html":{}}}],["openthread(thread",{"_index":2610,"title":{},"body":{"injectables/ThreadService.html":{}}}],["openuserlist",{"_index":459,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/SidebarService.html":{}}}],["openuserprofil",{"_index":707,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["openuserprofil(i",{"_index":747,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["optional",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"classes/Message.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/OpenImgComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{}}}],["options",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["otherwise",{"_index":504,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/OpenImgComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ThreadService.html":{}}}],["out",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelComponent.html":{},"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/ThreadService.html":{},"index.html":{}}}],["outline",{"_index":1432,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{}}}],["over",{"_index":470,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["overflow",{"_index":430,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{}}}],["overview",{"_index":2813,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":1765,"title":{},"body":{"components/LogInComponent.html":{}}}],["package",{"_index":2745,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":576,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["page",{"_index":1585,"title":{},"body":{"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{}}}],["page/animation",{"_index":1811,"title":{},"body":{"components/LogInComponent.html":{}}}],["page/arrow",{"_index":1586,"title":{},"body":{"components/ImpressumComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["page/hide.png",{"_index":2305,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["page/profile.png",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["page/view.png",{"_index":2308,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["param",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/OpenImgComponent.html":{},"components/PasswordResetComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/SearchService.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{}}}],["parameters",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"classes/Message.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/OpenImgComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{}}}],["parent",{"_index":1981,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["password",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RevealPasswordService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["password'},{'name",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["password).then((result",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["password.component.html",{"_index":2253,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":2254,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":2252,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:16",{"_index":2264,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":2267,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":2270,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":2269,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:20",{"_index":2265,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":2266,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:22",{"_index":2268,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:24",{"_index":2256,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:34",{"_index":2262,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:63",{"_index":2257,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.service",{"_index":1654,"title":{},"body":{"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{}}}],["password.service.ts",{"_index":2295,"title":{},"body":{"injectables/RevealPasswordService.html":{},"coverage.html":{}}}],["password.service.ts:10",{"_index":2312,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["password.service.ts:11",{"_index":2310,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["password.service.ts:12",{"_index":2311,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["password.service.ts:13",{"_index":2301,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["password.service.ts:18",{"_index":2304,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["password.service.ts:24",{"_index":2302,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["password.service.ts:32",{"_index":2303,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["password.service.ts:7",{"_index":2306,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["password.service.ts:8",{"_index":2307,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["password.service.ts:9",{"_index":2309,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["password/reset",{"_index":2251,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordreset",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordreset(email",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordresetcomponent",{"_index":147,"title":{"components/PasswordResetComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["passwords",{"_index":2053,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["passwordsmatchvalidator",{"_index":2037,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["passwordsmatchvalidator(control",{"_index":2043,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["passwordsmismatch",{"_index":2081,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["passwort",{"_index":1713,"title":{},"body":{"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwörter",{"_index":2086,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["path",{"_index":934,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["pathsegments",{"_index":1009,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["perform",{"_index":481,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["personen",{"_index":2116,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["personenbezogenen",{"_index":2160,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["persönlichen",{"_index":2101,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["phone",{"_index":1762,"title":{},"body":{"components/LogInComponent.html":{}}}],["photourl",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["pickercomponent",{"_index":1209,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["pixels",{"_index":1491,"title":{},"body":{"components/HeaderComponent.html":{}}}],["platform",{"_index":2803,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":606,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["policy",{"_index":2092,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy'},{'name",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["policy.component.html",{"_index":2093,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.component.scss",{"_index":2094,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.component.ts",{"_index":2091,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["policy.component.ts:12",{"_index":2095,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.component.ts:20",{"_index":2096,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy/privacy",{"_index":2090,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["pop",{"_index":1255,"title":{},"body":{"components/EditProfilComponent.html":{},"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["popup",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["popup'},{'name",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["popup.component",{"_index":1501,"title":{},"body":{"components/HeaderComponent.html":{}}}],["popup.component.html",{"_index":2190,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["popup.component.scss",{"_index":2210,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["popup.component.scss,./profil",{"_index":2189,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["popup.component.ts",{"_index":2188,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{},"coverage.html":{}}}],["popup.component.ts:104",{"_index":2205,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["popup.component.ts:120",{"_index":2204,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["popup.component.ts:24",{"_index":2207,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["popup.component.ts:25",{"_index":2208,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["popup.component.ts:26",{"_index":2209,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["popup.component.ts:27",{"_index":2193,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["popup.component.ts:37",{"_index":2194,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["popup.component.ts:50",{"_index":2199,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["popup.component.ts:60",{"_index":2200,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["popup.component.ts:72",{"_index":2201,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["popup.component.ts:89",{"_index":2195,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["popup/profil",{"_index":1500,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"coverage.html":{}}}],["popupopen",{"_index":1493,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/SidebarService.html":{}}}],["position",{"_index":596,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["predefined",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["predefinedemail",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["predefinedpassword",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["prevent",{"_index":743,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["preventing",{"_index":1979,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["prevents",{"_index":737,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["previous",{"_index":2258,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["privacy",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["privacypolicycomponent",{"_index":150,"title":{"components/PrivacyPolicyComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["private",{"_index":544,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/LogInComponent.html":{},"components/NewMessageHeaderComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/ReactionListComponent.html":{},"injectables/SidebarService.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{}}}],["process",{"_index":1344,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{}}}],["processes",{"_index":2591,"title":{},"body":{"components/ThreadHeaderComponent.html":{}}}],["processing",{"_index":769,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["profil",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["profil'},{'name",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["profil.component",{"_index":1546,"title":{},"body":{"components/HomeComponent.html":{}}}],["profil.component.html",{"_index":1246,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["profil.component.scss",{"_index":1273,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["profil.component.scss,./edit",{"_index":1245,"title":{},"body":{"components/EditProfilComponent.html":{}}}],["profil.component.scss,./user",{"_index":2629,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts",{"_index":1244,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["profil.component.ts:14",{"_index":1271,"title":{},"body":{"components/EditProfilComponent.html":{}}}],["profil.component.ts:15",{"_index":1270,"title":{},"body":{"components/EditProfilComponent.html":{}}}],["profil.component.ts:16",{"_index":1272,"title":{},"body":{"components/EditProfilComponent.html":{}}}],["profil.component.ts:17",{"_index":2639,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:18",{"_index":2637,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:19",{"_index":2640,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:20",{"_index":2644,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:21",{"_index":2643,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:22",{"_index":2632,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:24",{"_index":1251,"title":{},"body":{"components/EditProfilComponent.html":{}}}],["profil.component.ts:25",{"_index":2638,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:32",{"_index":2633,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:37",{"_index":1261,"title":{},"body":{"components/EditProfilComponent.html":{}}}],["profil.component.ts:41",{"_index":2634,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:48",{"_index":1256,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["profil.component.ts:58",{"_index":1266,"title":{},"body":{"components/EditProfilComponent.html":{}}}],["profil.component.ts:59",{"_index":2635,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil/edit",{"_index":1243,"title":{},"body":{"components/EditProfilComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["profil/user",{"_index":1548,"title":{},"body":{"components/HomeComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["profile",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["profiloptionspopupcomponent",{"_index":153,"title":{"components/ProfilOptionsPopupComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["project",{"_index":2772,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":2835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatAreaService.html":{},"injectables/FileUploadeService.html":{},"injectables/SearchService.html":{}}}],["promise((resolve",{"_index":1469,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["propagation",{"_index":742,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/OpenImgComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["properties",{"_index":33,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Channel.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"classes/Message.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"interfaces/User.html":{},"interfaces/UserInterFace.html":{},"components/UserProfilComponent.html":{},"properties.html":{}}}],["property",{"_index":763,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/EditProfilComponent.html":{},"components/HeaderComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["provideauth",{"_index":2828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration",{"_index":2825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":865,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/OpenImgComponent.html":{}}}],["providedatabase",{"_index":2832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChannelSelectionService.html":{},"injectables/ChatAreaService.html":{},"injectables/DirectMessageSelectionService.html":{},"injectables/EditChannelService.html":{},"injectables/FileUploadeService.html":{},"injectables/NewMessageSelectionService.html":{},"injectables/OnlineService.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"injectables/ThreadService.html":{}}}],["providefirebaseapp",{"_index":2826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providefirestore",{"_index":2830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["providerouter(routes",{"_index":2824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":2852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestorage",{"_index":2834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":450,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/HomeComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/ReactionListComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["pushing",{"_index":767,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["q",{"_index":550,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["queries",{"_index":511,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{}}}],["query",{"_index":539,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["query(collection(this.firestore",{"_index":551,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["querylist",{"_index":1205,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["querysnapshot",{"_index":1676,"title":{},"body":{"components/LogInComponent.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{}}}],["querysnapshot.docs",{"_index":2374,"title":{},"body":{"injectables/SearchService.html":{}}}],["querysnapshot.docs.map(doc",{"_index":2399,"title":{},"body":{"injectables/SearchService.html":{}}}],["querysnapshot.foreach((doc",{"_index":1678,"title":{},"body":{"components/LogInComponent.html":{},"injectables/SidebarService.html":{}}}],["radius",{"_index":580,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["ratio",{"_index":1973,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["rawform",{"_index":1697,"title":{},"body":{"components/LogInComponent.html":{}}}],["rawform.password).subscribe",{"_index":1700,"title":{},"body":{"components/LogInComponent.html":{}}}],["reacted",{"_index":890,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["reaction",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["reactionlistcomponent",{"_index":156,"title":{"components/ReactionListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["reactionname",{"_index":881,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["reactions",{"_index":678,"title":{},"body":{"injectables/ChannelSelectionService.html":{},"injectables/ChatAreaService.html":{}}}],["reactions.split",{"_index":1071,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["reactiveformsmodule",{"_index":1333,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["readable",{"_index":864,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["reaktion",{"_index":1563,"title":{},"body":{"components/HomeComponent.html":{}}}],["received",{"_index":1623,"title":{},"body":{"components/LogInComponent.html":{}}}],["receiving",{"_index":2590,"title":{},"body":{"components/ThreadHeaderComponent.html":{}}}],["recht",{"_index":2155,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechte",{"_index":2112,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtslagen",{"_index":2184,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rectangle",{"_index":2230,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["red",{"_index":1424,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{}}}],["redirects",{"_index":1582,"title":{},"body":{"components/ImpressumComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["ref",{"_index":1452,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["ref(storage",{"_index":1465,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["reference",{"_index":2206,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{},"index.html":{}}}],["register",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(email",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["registers",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["registration",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["registriert",{"_index":2276,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["registrierung",{"_index":2123,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["reject",{"_index":1470,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["reject(error",{"_index":1474,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["related",{"_index":485,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{}}}],["relative",{"_index":597,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{}}}],["reload",{"_index":2784,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1031,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["removing",{"_index":2607,"title":{},"body":{"injectables/ThreadService.html":{}}}],["repeat",{"_index":619,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["representation",{"_index":855,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["requests",{"_index":1721,"title":{},"body":{"components/LogInComponent.html":{}}}],["reset",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["reset'},{'name",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["reset.component.html",{"_index":2033,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.scss",{"_index":2034,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts",{"_index":2032,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["reset.component.ts:16",{"_index":2055,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:17",{"_index":2057,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:18",{"_index":2065,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:19",{"_index":2066,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:20",{"_index":2063,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:21",{"_index":2062,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:22",{"_index":2067,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:23",{"_index":2056,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:24",{"_index":2068,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:26",{"_index":2061,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:29",{"_index":2038,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:39",{"_index":2039,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:61",{"_index":2045,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset/password",{"_index":2031,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["reseterrormessage",{"_index":1341,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["resetpasswordcomponent",{"_index":159,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["resets",{"_index":472,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["resetting",{"_index":2040,"title":{},"body":{"components/PasswordResetComponent.html":{},"injectables/ThreadService.html":{}}}],["resetviewstate",{"_index":2192,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["resolve(downloadurl",{"_index":1476,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["resolves",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SearchService.html":{}}}],["response.user.uid",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["responsiv.component.scss",{"_index":447,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/HeaderComponent.html":{},"components/OpenSidebarComponent.html":{}}}],["responsive",{"_index":616,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/ResponsiveService.html":{},"components/ThreadHeaderComponent.html":{}}}],["responsive.component.scss",{"_index":381,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HomeComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["responsiveservice",{"_index":385,"title":{"injectables/ResponsiveService.html":{}},"body":{"components/ChannelComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/ResponsiveService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["result",{"_index":1355,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["result.user.displayname",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["result.user.email",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["result.user.photourl",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["result.user.uid",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Channel.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"classes/Message.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"injectables/OnlineService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"interfaces/User.html":{},"interfaces/UserInterFace.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["results'},{'name",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["results.component",{"_index":1865,"title":{},"body":{"components/NewMessageComponent.html":{}}}],["results.component.html",{"_index":1893,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["results.component.scss",{"_index":1892,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["results.component.ts",{"_index":1891,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{},"coverage.html":{}}}],["results.component.ts:16",{"_index":1903,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["results.component.ts:17",{"_index":1902,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["results.component.ts:18",{"_index":1908,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["results.component.ts:19",{"_index":1906,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["results.component.ts:20",{"_index":1898,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["results.component.ts:22",{"_index":1907,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["results.component.ts:23",{"_index":1904,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["results.component.ts:24",{"_index":1905,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["results.component.ts:27",{"_index":1899,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["results.component.ts:37",{"_index":1901,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["results/new",{"_index":1864,"title":{},"body":{"components/NewMessageComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"coverage.html":{}}}],["retrieved",{"_index":729,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["retrieves",{"_index":479,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/SearchService.html":{}}}],["return",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChannelSelectionService.html":{},"injectables/ChatAreaService.html":{},"injectables/DirectMessageSelectionService.html":{},"injectables/EditChannelService.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/LogInComponent.html":{},"components/NewMessageHeaderComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/OpenImgComponent.html":{},"components/PasswordResetComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{}}}],["returned",{"_index":1631,"title":{},"body":{"components/LogInComponent.html":{}}}],["returns",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{}}}],["reveal",{"_index":1786,"title":{},"body":{"components/LogInComponent.html":{},"injectables/RevealPasswordService.html":{}}}],["revealpasswordservice",{"_index":1606,"title":{"injectables/RevealPasswordService.html":{}},"body":{"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/RevealPasswordService.html":{},"coverage.html":{}}}],["rgba(0",{"_index":590,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["rgba(104",{"_index":1305,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["rgba(121",{"_index":1511,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["rgba(146",{"_index":1301,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["rgba(173",{"_index":1413,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["rgba(19",{"_index":1310,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["rgba(68",{"_index":1317,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["rgba(83",{"_index":1294,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["rgba(83,90,241,1",{"_index":2013,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["right",{"_index":428,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/ThreadService.html":{}}}],["rocket",{"_index":961,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["root",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ChannelSelectionService.html":{},"injectables/ChatAreaService.html":{},"injectables/DirectMessageSelectionService.html":{},"injectables/EditChannelService.html":{},"injectables/FileUploadeService.html":{},"injectables/NewMessageSelectionService.html":{},"injectables/OnlineService.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"injectables/ThreadService.html":{}}}],["root'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["rotate",{"_index":2018,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["rotated",{"_index":2014,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["route",{"_index":2035,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["router",{"_index":1607,"title":{},"body":{"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["routerlink",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/LogInComponent.html":{}}}],["routermodule",{"_index":1208,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["routeroutlet",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/DirectMessagesHeaderComponent.html":{}}}],["row",{"_index":426,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{}}}],["run",{"_index":2777,"title":{},"body":{"index.html":{}}}],["running",{"_index":2795,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChannelSelectionService.html":{},"injectables/DirectMessageSelectionService.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"injectables/ThreadService.html":{},"dependencies.html":{}}}],["save",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"components/EditProfilContactformComponent.html":{}}}],["saved",{"_index":2339,"title":{},"body":{"injectables/SaveNewUserService.html":{}}}],["savenewuserservice",{"_index":284,"title":{"injectables/SaveNewUserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/SaveNewUserService.html":{},"coverage.html":{}}}],["saves",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["saveuser",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SaveNewUserService.html":{}}}],["saveuser(uid",{"_index":2327,"title":{},"body":{"injectables/SaveNewUserService.html":{}}}],["scaffolding",{"_index":2787,"title":{},"body":{"index.html":{}}}],["scale(0.6",{"_index":1526,"title":{},"body":{"components/HeaderComponent.html":{}}}],["scale(0.7",{"_index":1528,"title":{},"body":{"components/HeaderComponent.html":{}}}],["scale(0.8",{"_index":643,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/HeaderComponent.html":{}}}],["schließen",{"_index":2010,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["schutz",{"_index":2099,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["schützenstrasse",{"_index":1595,"title":{},"body":{"components/ImpressumComponent.html":{}}}],["search",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SearchService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["searchallchannelmessages",{"_index":2344,"title":{},"body":{"injectables/SearchService.html":{}}}],["searchallchannelmessages(searchterm",{"_index":2352,"title":{},"body":{"injectables/SearchService.html":{}}}],["searchchannels",{"_index":2345,"title":{},"body":{"injectables/SearchService.html":{}}}],["searchchannels(searchterm",{"_index":2360,"title":{},"body":{"injectables/SearchService.html":{}}}],["searches",{"_index":2354,"title":{},"body":{"injectables/SearchService.html":{}}}],["searchfieldcomponent",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["searchservice",{"_index":1536,"title":{"injectables/SearchService.html":{}},"body":{"components/HomeComponent.html":{},"injectables/SearchService.html":{},"coverage.html":{}}}],["searchterm",{"_index":2358,"title":{},"body":{"injectables/SearchService.html":{}}}],["searchterm.tolowercase",{"_index":2370,"title":{},"body":{"injectables/SearchService.html":{}}}],["searchusers",{"_index":2346,"title":{},"body":{"injectables/SearchService.html":{}}}],["searchusers(searchterm",{"_index":2363,"title":{},"body":{"injectables/SearchService.html":{}}}],["seconds",{"_index":910,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["section",{"_index":1748,"title":{},"body":{"components/LogInComponent.html":{}}}],["sehr",{"_index":2104,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sei",{"_index":2144,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sein",{"_index":1149,"title":{},"body":{"injectables/DirectMessageSelectionService.html":{},"components/PasswordResetComponent.html":{}}}],["selected",{"_index":478,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/UserProfilComponent.html":{}}}],["selectedchannel",{"_index":647,"title":{},"body":{"injectables/ChannelSelectionService.html":{},"injectables/DirectMessageSelectionService.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{}}}],["selectedchannelindex",{"_index":648,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["selectedcontent",{"_index":1925,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["selectedelement",{"_index":1895,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["selectedemails",{"_index":2428,"title":{},"body":{"injectables/SidebarService.html":{}}}],["selectedimages",{"_index":2429,"title":{},"body":{"injectables/SidebarService.html":{}}}],["selectedimg",{"_index":649,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["selectedreaction",{"_index":650,"title":{},"body":{"injectables/ChannelSelectionService.html":{},"components/HomeComponent.html":{},"components/ReactionListComponent.html":{}}}],["selecteduids",{"_index":2430,"title":{},"body":{"injectables/SidebarService.html":{}}}],["selecteduser",{"_index":1141,"title":{},"body":{"injectables/DirectMessageSelectionService.html":{}}}],["selectedusers",{"_index":2431,"title":{},"body":{"injectables/SidebarService.html":{}}}],["selection.service",{"_index":406,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/HomeComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/ReactionListComponent.html":{},"injectables/SidebarService.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["selection.service.ts",{"_index":645,"title":{},"body":{"injectables/ChannelSelectionService.html":{},"injectables/DirectMessageSelectionService.html":{},"injectables/NewMessageSelectionService.html":{},"coverage.html":{}}}],["selection.service.ts:10",{"_index":682,"title":{},"body":{"injectables/ChannelSelectionService.html":{},"injectables/NewMessageSelectionService.html":{}}}],["selection.service.ts:11",{"_index":679,"title":{},"body":{"injectables/ChannelSelectionService.html":{},"injectables/NewMessageSelectionService.html":{}}}],["selection.service.ts:12",{"_index":662,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["selection.service.ts:13",{"_index":1142,"title":{},"body":{"injectables/DirectMessageSelectionService.html":{}}}],["selection.service.ts:16",{"_index":664,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["selection.service.ts:18",{"_index":1143,"title":{},"body":{"injectables/DirectMessageSelectionService.html":{}}}],["selection.service.ts:19",{"_index":1945,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["selection.service.ts:20",{"_index":666,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["selection.service.ts:24",{"_index":665,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["selection.service.ts:28",{"_index":667,"title":{},"body":{"injectables/ChannelSelectionService.html":{},"injectables/NewMessageSelectionService.html":{}}}],["selection.service.ts:32",{"_index":668,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["selection.service.ts:36",{"_index":669,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["selection.service.ts:38",{"_index":1942,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["selection.service.ts:40",{"_index":670,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["selection.service.ts:44",{"_index":663,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["selection.service.ts:47",{"_index":1937,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["selection.service.ts:48",{"_index":672,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["selection.service.ts:52",{"_index":674,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["selection.service.ts:56",{"_index":677,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["selection.service.ts:57",{"_index":1947,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["selection.service.ts:66",{"_index":1939,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["selection.service.ts:76",{"_index":1949,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["selection.service.ts:8",{"_index":681,"title":{},"body":{"injectables/ChannelSelectionService.html":{},"injectables/DirectMessageSelectionService.html":{},"injectables/NewMessageSelectionService.html":{}}}],["selection.service.ts:85",{"_index":1940,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["selection.service.ts:9",{"_index":683,"title":{},"body":{"injectables/ChannelSelectionService.html":{},"injectables/NewMessageSelectionService.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["send",{"_index":1313,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["senden",{"_index":2278,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["sending",{"_index":2274,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["sendmessage",{"_index":1250,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["sendpasswordresetemail",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendpasswordresetemail(this.firebaseauth",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["sends",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["sent",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"components/EditProfilComponent.html":{}}}],["separator",{"_index":1787,"title":{},"body":{"components/LogInComponent.html":{}}}],["september",{"_index":987,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["serve",{"_index":2779,"title":{},"body":{"index.html":{}}}],["server",{"_index":2754,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["serverconfig",{"_index":2660,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":762,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/HomeComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["service's",{"_index":2588,"title":{},"body":{"components/ThreadHeaderComponent.html":{}}}],["services/auth.service",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/PasswordResetComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfilComponent.html":{}}}],["services/channel",{"_index":405,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/HomeComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/ReactionListComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["services/chat",{"_index":541,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["services/direct",{"_index":1171,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["services/edit",{"_index":530,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/HomeComponent.html":{}}}],["services/new",{"_index":1882,"title":{},"body":{"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{}}}],["services/responsive.service",{"_index":407,"title":{},"body":{"components/ChannelComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["services/reveal",{"_index":1653,"title":{},"body":{"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{}}}],["services/search.service",{"_index":1557,"title":{},"body":{"components/HomeComponent.html":{}}}],["services/sidebar.service",{"_index":533,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["services/thread.service",{"_index":403,"title":{},"body":{"components/ChannelComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["set",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/NewMessageSelectionService.html":{}}}],["setallchannelsorted",{"_index":1934,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["setallchannelsorted(data",{"_index":1941,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["setallusersorted",{"_index":1935,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["setallusersorted(data",{"_index":1944,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["setchannel",{"_index":1896,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["setchannel(uid",{"_index":1900,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["setdoc",{"_index":540,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"injectables/SaveNewUserService.html":{},"components/ThreadHeaderComponent.html":{}}}],["setdoc(userref",{"_index":1690,"title":{},"body":{"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["seteditchannel",{"_index":1224,"title":{},"body":{"injectables/EditChannelService.html":{}}}],["seteditchannel(edit",{"_index":1228,"title":{},"body":{"injectables/EditChannelService.html":{}}}],["setinterval",{"_index":1666,"title":{},"body":{"components/LogInComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["setnotechannel",{"_index":519,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"injectables/ChatAreaService.html":{},"components/NewMessageHeaderComponent.html":{}}}],["setnotechannel(obj",{"_index":895,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/NewMessageHeaderComponent.html":{}}}],["setnoteobject",{"_index":847,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["setnoteobject(obj",{"_index":905,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["setnoteobjectuser",{"_index":770,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{}}}],["setnoteobjectuser(obj",{"_index":919,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{}}}],["setopenuser",{"_index":708,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/ReactionListComponent.html":{}}}],["sets",{"_index":465,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/PasswordResetComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["setselectedchannel",{"_index":659,"title":{},"body":{"injectables/ChannelSelectionService.html":{},"injectables/DirectMessageSelectionService.html":{},"injectables/NewMessageSelectionService.html":{}}}],["setselectedchannel(channel",{"_index":671,"title":{},"body":{"injectables/ChannelSelectionService.html":{},"injectables/DirectMessageSelectionService.html":{}}}],["setselectedchannel(data",{"_index":1946,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["setselectedimg",{"_index":660,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["setselectedimg(src",{"_index":673,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["setselectedreaction",{"_index":661,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["setselectedreaction(reactions",{"_index":676,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["setselecteduid",{"_index":1936,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["setselecteduid(data",{"_index":1948,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["setter",{"_index":1152,"title":{},"body":{"injectables/DirectMessageSelectionService.html":{}}}],["settimeout",{"_index":1401,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ThreadService.html":{}}}],["setting",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelHeaderComponent.html":{}}}],["settopchannel",{"_index":2435,"title":{},"body":{"injectables/SidebarService.html":{}}}],["setup",{"_index":483,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["setuser",{"_index":1159,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{}}}],["setusernumberbasedonimages",{"_index":460,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["setzt",{"_index":1238,"title":{},"body":{"injectables/EditChannelService.html":{}}}],["shadow",{"_index":803,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{}}}],["shadow(0px",{"_index":587,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["short",{"_index":2042,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["shushingface",{"_index":918,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["sich",{"_index":2179,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sicherheit",{"_index":2138,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sidebar",{"_index":1488,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["sidebar'},{'name",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["sidebar.component",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["sidebar.component.html",{"_index":1995,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":2005,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["sidebar.component.scss,./open",{"_index":1994,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["sidebar.component.ts",{"_index":1993,"title":{},"body":{"components/OpenSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:13",{"_index":2004,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["sidebar.component.ts:23",{"_index":1998,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["sidebar.service",{"_index":2367,"title":{},"body":{"injectables/SearchService.html":{}}}],["sidebar/open",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/OpenSidebarComponent.html":{},"coverage.html":{}}}],["sidebar/sidebar.component",{"_index":1544,"title":{},"body":{"components/HomeComponent.html":{}}}],["sidebarcomponent",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["sidebaropen",{"_index":2002,"title":{},"body":{"components/OpenSidebarComponent.html":{},"injectables/SidebarService.html":{}}}],["sidebarservice",{"_index":532,"title":{"injectables/SidebarService.html":{}},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["sie",{"_index":995,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["sign",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["signal",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["signal(undefined",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["signed",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithemailandpassword",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithemailandpassword(this.firebaseauth",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithgoogle",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithpopup",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithpopup(this.firebaseauth",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout(this.firebaseauth",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["signs",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupcomponent",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["simply",{"_index":2594,"title":{},"body":{"components/ThreadHeaderComponent.html":{}}}],["sincetojson",{"_index":1614,"title":{},"body":{"components/LogInComponent.html":{}}}],["sind",{"_index":1406,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["size",{"_index":1329,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["sizing",{"_index":1418,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["slide",{"_index":436,"title":{},"body":{"components/ChannelComponent.html":{}}}],["slidein",{"_index":2582,"title":{},"body":{"components/ThreadComponent.html":{}}}],["snapshot",{"_index":1473,"title":{},"body":{"injectables/FileUploadeService.html":{},"components/ThreadHeaderComponent.html":{}}}],["solid",{"_index":623,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{}}}],["sorted",{"_index":1938,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["sortresults",{"_index":1870,"title":{},"body":{"components/NewMessageHeaderComponent.html":{}}}],["sortresults(inputvalue",{"_index":1875,"title":{},"body":{"components/NewMessageHeaderComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Channel.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"classes/Message.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"injectables/OnlineService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"interfaces/User.html":{},"interfaces/UserInterFace.html":{},"components/UserProfilComponent.html":{},"index.html":{}}}],["source}/${fileurl",{"_index":1478,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["source}/${uniquefilename",{"_index":1466,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["sowie",{"_index":2168,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["space",{"_index":574,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["span",{"_index":1309,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["specific",{"_index":1263,"title":{},"body":{"components/EditProfilComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/SearchService.html":{}}}],["specified",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/OpenImgComponent.html":{},"injectables/SearchService.html":{}}}],["speichern",{"_index":1410,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/HomeComponent.html":{}}}],["sperrung",{"_index":2174,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["splitstringbyspace",{"_index":2236,"title":{},"body":{"components/ReactionListComponent.html":{}}}],["splitstringbyspace(input",{"_index":2242,"title":{},"body":{"components/ReactionListComponent.html":{}}}],["splitwords",{"_index":848,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["splitwords(input",{"_index":921,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["später",{"_index":1726,"title":{},"body":{"components/LogInComponent.html":{}}}],["src",{"_index":675,"title":{},"body":{"injectables/ChannelSelectionService.html":{},"injectables/ChatAreaService.html":{},"components/OpenImgComponent.html":{}}}],["src/.../app.config.server.ts",{"_index":2821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":2819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":2820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:21",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":2657,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":2661,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/landing_page/impressum/impressum.component.ts",{"_index":1571,"title":{},"body":{"components/ImpressumComponent.html":{},"coverage.html":{}}}],["src/app/landing_page/impressum/impressum.component.ts:12",{"_index":1579,"title":{},"body":{"components/ImpressumComponent.html":{}}}],["src/app/landing_page/impressum/impressum.component.ts:20",{"_index":1581,"title":{},"body":{"components/ImpressumComponent.html":{}}}],["src/app/landing_page/log",{"_index":1601,"title":{},"body":{"components/LogInComponent.html":{},"coverage.html":{}}}],["src/app/landing_page/password",{"_index":2030,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["src/app/landing_page/privacy",{"_index":2089,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["src/app/landing_page/reset",{"_index":2250,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/landing_page/sign",{"_index":2672,"title":{},"body":{"coverage.html":{}}}],["src/app/main/add",{"_index":2676,"title":{},"body":{"coverage.html":{}}}],["src/app/main/channel",{"_index":694,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"coverage.html":{}}}],["src/app/main/channel/channel",{"_index":443,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"coverage.html":{}}}],["src/app/main/channel/channel/channel.component.ts",{"_index":377,"title":{},"body":{"components/ChannelComponent.html":{},"coverage.html":{}}}],["src/app/main/channel/channel/channel.component.ts:25",{"_index":392,"title":{},"body":{"components/ChannelComponent.html":{}}}],["src/app/main/channel/channel/channel.component.ts:26",{"_index":391,"title":{},"body":{"components/ChannelComponent.html":{}}}],["src/app/main/channel/channel/channel.component.ts:27",{"_index":394,"title":{},"body":{"components/ChannelComponent.html":{}}}],["src/app/main/channel/channel/channel.component.ts:28",{"_index":390,"title":{},"body":{"components/ChannelComponent.html":{}}}],["src/app/main/create",{"_index":2691,"title":{},"body":{"coverage.html":{}}}],["src/app/main/direct",{"_index":1154,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"coverage.html":{}}}],["src/app/main/edit",{"_index":1242,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"coverage.html":{}}}],["src/app/main/header/header.component.ts",{"_index":1483,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/main/header/header.component.ts:16",{"_index":1495,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/main/header/header.component.ts:17",{"_index":1496,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/main/header/header.component.ts:18",{"_index":1497,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/main/header/header.component.ts:26",{"_index":1492,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/main/header/header.component.ts:37",{"_index":1487,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/main/header/profil",{"_index":2187,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{},"coverage.html":{}}}],["src/app/main/header/search",{"_index":2707,"title":{},"body":{"coverage.html":{}}}],["src/app/main/home/home.component.ts",{"_index":1532,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/main/home/home.component.ts:48",{"_index":1542,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/main/home/home.component.ts:49",{"_index":1537,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/main/home/home.component.ts:51",{"_index":1539,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/main/home/home.component.ts:52",{"_index":1540,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/main/home/home.component.ts:55",{"_index":1538,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/main/new",{"_index":1859,"title":{},"body":{"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"coverage.html":{}}}],["src/app/main/open",{"_index":1960,"title":{},"body":{"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"coverage.html":{}}}],["src/app/main/reaction",{"_index":2232,"title":{},"body":{"components/ReactionListComponent.html":{},"coverage.html":{}}}],["src/app/main/sidebar/sidebar.component.ts",{"_index":2718,"title":{},"body":{"coverage.html":{}}}],["src/app/main/thread/thread",{"_index":2583,"title":{},"body":{"components/ThreadHeaderComponent.html":{},"coverage.html":{}}}],["src/app/main/thread/thread/thread.component.ts",{"_index":2558,"title":{},"body":{"components/ThreadComponent.html":{},"coverage.html":{}}}],["src/app/main/thread/thread/thread.component.ts:28",{"_index":2568,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/main/thread/thread/thread.component.ts:29",{"_index":2574,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/main/thread/thread/thread.component.ts:30",{"_index":2572,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/main/thread/thread/thread.component.ts:31",{"_index":2571,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/main/thread/thread/thread.component.ts:32",{"_index":2570,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/main/thread/thread/thread.component.ts:33",{"_index":2573,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/main/thread/thread/thread.component.ts:34",{"_index":2567,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/main/thread/thread/thread.component.ts:37",{"_index":2569,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/main/user",{"_index":2628,"title":{},"body":{"components/UserProfilComponent.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:109",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:127",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:137",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:148",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:168",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:197",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:25",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:26",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:27",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:28",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:29",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:30",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:37",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:72",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:95",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/channel",{"_index":644,"title":{},"body":{"injectables/ChannelSelectionService.html":{},"coverage.html":{}}}],["src/app/services/chat",{"_index":837,"title":{},"body":{"injectables/ChatAreaService.html":{},"coverage.html":{}}}],["src/app/services/direct",{"_index":1140,"title":{},"body":{"injectables/DirectMessageSelectionService.html":{},"coverage.html":{}}}],["src/app/services/edit",{"_index":1219,"title":{},"body":{"injectables/EditChannelService.html":{},"coverage.html":{}}}],["src/app/services/file",{"_index":1440,"title":{},"body":{"injectables/FileUploadeService.html":{},"coverage.html":{}}}],["src/app/services/new",{"_index":1928,"title":{},"body":{"injectables/NewMessageSelectionService.html":{},"coverage.html":{}}}],["src/app/services/online.service.ts",{"_index":1958,"title":{},"body":{"injectables/OnlineService.html":{},"coverage.html":{}}}],["src/app/services/online.service.ts:6",{"_index":1959,"title":{},"body":{"injectables/OnlineService.html":{}}}],["src/app/services/responsive.service.ts",{"_index":2283,"title":{},"body":{"injectables/ResponsiveService.html":{},"coverage.html":{}}}],["src/app/services/responsive.service.ts:10",{"_index":2289,"title":{},"body":{"injectables/ResponsiveService.html":{}}}],["src/app/services/responsive.service.ts:11",{"_index":2290,"title":{},"body":{"injectables/ResponsiveService.html":{}}}],["src/app/services/responsive.service.ts:12",{"_index":2293,"title":{},"body":{"injectables/ResponsiveService.html":{}}}],["src/app/services/responsive.service.ts:13",{"_index":2288,"title":{},"body":{"injectables/ResponsiveService.html":{}}}],["src/app/services/responsive.service.ts:8",{"_index":2292,"title":{},"body":{"injectables/ResponsiveService.html":{}}}],["src/app/services/responsive.service.ts:9",{"_index":2291,"title":{},"body":{"injectables/ResponsiveService.html":{}}}],["src/app/services/reveal",{"_index":2294,"title":{},"body":{"injectables/RevealPasswordService.html":{},"coverage.html":{}}}],["src/app/services/save",{"_index":2322,"title":{},"body":{"injectables/SaveNewUserService.html":{},"coverage.html":{}}}],["src/app/services/search.service.ts",{"_index":2340,"title":{},"body":{"injectables/SearchService.html":{},"coverage.html":{}}}],["src/app/services/search.service.ts:10",{"_index":2365,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:11",{"_index":2347,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:14",{"_index":2351,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:24",{"_index":2361,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:44",{"_index":2353,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:73",{"_index":2349,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:88",{"_index":2364,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/sidebar.service.ts",{"_index":2402,"title":{},"body":{"injectables/SidebarService.html":{},"coverage.html":{}}}],["src/app/services/sidebar.service.ts:10",{"_index":2483,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:11",{"_index":2469,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:12",{"_index":2453,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:13",{"_index":2462,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:14",{"_index":2459,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:15",{"_index":2458,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:158",{"_index":2441,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:16",{"_index":2460,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:165",{"_index":2438,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:17",{"_index":2461,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:18",{"_index":2474,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:19",{"_index":2457,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:20",{"_index":2455,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:21",{"_index":2456,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:22",{"_index":2454,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:23",{"_index":2467,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:24",{"_index":2464,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:25",{"_index":2465,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:26",{"_index":2466,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:27",{"_index":2463,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:28",{"_index":2487,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:29",{"_index":2475,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:30",{"_index":2486,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:31",{"_index":2473,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:32",{"_index":2478,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:33",{"_index":2472,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:34",{"_index":2471,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:35",{"_index":2488,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:36",{"_index":2452,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:37",{"_index":2451,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:38",{"_index":2477,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:39",{"_index":2449,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:40",{"_index":2450,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:41",{"_index":2482,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:42",{"_index":2480,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:43",{"_index":2481,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:44",{"_index":2479,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:45",{"_index":2446,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:46",{"_index":2444,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:47",{"_index":2443,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:48",{"_index":2445,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:49",{"_index":2470,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:50",{"_index":2447,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:51",{"_index":2448,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:52",{"_index":2442,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:53",{"_index":2485,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:54",{"_index":2468,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:55",{"_index":2476,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:56",{"_index":2436,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:63",{"_index":2440,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:74",{"_index":2437,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/thread.service.ts",{"_index":2603,"title":{},"body":{"injectables/ThreadService.html":{},"coverage.html":{}}}],["src/app/services/thread.service.ts:11",{"_index":2614,"title":{},"body":{"injectables/ThreadService.html":{}}}],["src/app/services/thread.service.ts:12",{"_index":2617,"title":{},"body":{"injectables/ThreadService.html":{}}}],["src/app/services/thread.service.ts:18",{"_index":2611,"title":{},"body":{"injectables/ThreadService.html":{}}}],["src/app/services/thread.service.ts:28",{"_index":2606,"title":{},"body":{"injectables/ThreadService.html":{}}}],["src/app/services/thread.service.ts:39",{"_index":2609,"title":{},"body":{"injectables/ThreadService.html":{}}}],["src/app/services/thread.service.ts:8",{"_index":2618,"title":{},"body":{"injectables/ThreadService.html":{}}}],["src/app/services/thread.service.ts:9",{"_index":2615,"title":{},"body":{"injectables/ThreadService.html":{}}}],["src/main.server.ts",{"_index":2738,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/models/channel.ts",{"_index":375,"title":{},"body":{"interfaces/Channel.html":{},"coverage.html":{}}}],["src/models/direct",{"_index":1081,"title":{},"body":{"classes/DirectMessage.html":{},"coverage.html":{}}}],["src/models/message.class.ts",{"_index":1832,"title":{},"body":{"classes/Message.html":{},"coverage.html":{}}}],["src/models/message.class.ts:10",{"_index":1840,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:11",{"_index":1845,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:12",{"_index":1850,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:13",{"_index":1844,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:14",{"_index":1855,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:15",{"_index":1838,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:16",{"_index":1837,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:17",{"_index":1851,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:18",{"_index":1842,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:19",{"_index":1834,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:2",{"_index":1841,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:20",{"_index":1839,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:21",{"_index":1853,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:22",{"_index":1852,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:23",{"_index":1849,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:24",{"_index":1847,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:25",{"_index":1848,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:26",{"_index":1833,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:3",{"_index":1854,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:4",{"_index":1835,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:5",{"_index":1843,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:6",{"_index":1856,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:7",{"_index":1857,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:8",{"_index":1846,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:9",{"_index":1836,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.ts",{"_index":2742,"title":{},"body":{"coverage.html":{}}}],["src/models/user.interface.ts",{"_index":2627,"title":{},"body":{"interfaces/UserInterFace.html":{},"coverage.html":{}}}],["src/models/user.ts",{"_index":2626,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["standalone",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["start",{"_index":809,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["started",{"_index":2771,"title":{"index.html":{}},"body":{}}],["state",{"_index":466,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["state_changed",{"_index":1472,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["statements",{"_index":2655,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":2198,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["step2.png",{"_index":1812,"title":{},"body":{"components/LogInComponent.html":{}}}],["step3.png",{"_index":1813,"title":{},"body":{"components/LogInComponent.html":{}}}],["stimmen",{"_index":2087,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["stop",{"_index":1983,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["stopevent",{"_index":1965,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["stopevent(event",{"_index":1977,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["stops",{"_index":741,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/OpenImgComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["storage",{"_index":1455,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["storagebucket",{"_index":2839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storageref",{"_index":1464,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["stored",{"_index":2792,"title":{},"body":{"index.html":{}}}],["string",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Channel.html":{},"injectables/ChannelSelectionService.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"classes/Message.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"interfaces/User.html":{},"interfaces/UserInterFace.html":{},"components/UserProfilComponent.html":{}}}],["string(givendate.getdate()).padstart(2",{"_index":1054,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["string(givendate.getmonth",{"_index":1057,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["structured",{"_index":904,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/DirectMessagesHeaderComponent.html":{}}}],["style",{"_index":1775,"title":{},"body":{"components/LogInComponent.html":{}}}],["styles",{"_index":376,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["styleurl",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/ImpressumComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/OpenImgComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["styleurls",{"_index":379,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["subchannels",{"_index":461,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["subject",{"_index":2608,"title":{},"body":{"injectables/ThreadService.html":{}}}],["submission",{"_index":1352,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((value",{"_index":1177,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{}}}],["subscribers",{"_index":1943,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["subscribes",{"_index":508,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["subscribing",{"_index":477,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["subscription",{"_index":1910,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["subscriptions",{"_index":484,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{}}}],["subuser",{"_index":709,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{}}}],["succes",{"_index":2036,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["success",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["successful",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["successfully",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatAreaService.html":{},"components/EditProfilComponent.html":{},"injectables/FileUploadeService.html":{}}}],["successmessage",{"_index":1337,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/PasswordResetComponent.html":{}}}],["such",{"_index":1042,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["switch",{"_index":1702,"title":{},"body":{"components/LogInComponent.html":{}}}],["switching",{"_index":2003,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["table",{"_index":2744,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2743,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":629,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"injectables/ChatAreaService.html":{}}}],["tall",{"_index":1975,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["templateurl",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["term",{"_index":2355,"title":{},"body":{"injectables/SearchService.html":{}}}],["test",{"_index":2798,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2808,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2797,"title":{},"body":{"index.html":{}}}],["text",{"_index":1770,"title":{},"body":{"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/RevealPasswordService.html":{},"injectables/SearchService.html":{}}}],["then((result",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["then(response",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._location.back",{"_index":1588,"title":{},"body":{"components/ImpressumComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.activechannelindex",{"_index":2492,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.activeuserindex",{"_index":2497,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannel",{"_index":1883,"title":{},"body":{"components/NewMessageHeaderComponent.html":{}}}],["this.allchannel.push(this.setnotechannel(element.data",{"_index":1884,"title":{},"body":{"components/NewMessageHeaderComponent.html":{}}}],["this.allchannels",{"_index":2500,"title":{},"body":{"injectables/SidebarService.html":{},"components/ThreadHeaderComponent.html":{}}}],["this.allchannels.length",{"_index":2493,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannels.push(channel",{"_index":2601,"title":{},"body":{"components/ThreadHeaderComponent.html":{}}}],["this.allchannels.push(channeldata['name",{"_index":2512,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelscreationsdate",{"_index":2510,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelscreationsdate.push(channeldata['creationsdate",{"_index":2521,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelscreators",{"_index":2531,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelscreators.push(channeldata['channelcreator",{"_index":2536,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelscreatorsnames",{"_index":2507,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelscreatorsnames.push(channeldata['channelcreatorname",{"_index":2518,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelscreatorsuids",{"_index":2508,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelscreatorsuids.push(channeldata['channelcreatoruid",{"_index":2519,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelsdescriptions",{"_index":2506,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelsdescriptions.push(channeldata['description",{"_index":2517,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelsemails",{"_index":2502,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelsemails.push(channeldata['emails",{"_index":2514,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelsids",{"_index":2503,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelsids.length",{"_index":2538,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelsids.push(doc.id",{"_index":2515,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelsids[i",{"_index":2495,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelsimages",{"_index":2504,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelsimages.push(channeldata['images",{"_index":2516,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelsorted",{"_index":1886,"title":{},"body":{"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{}}}],["this.allchannelsortedsubject.asobservable",{"_index":1953,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["this.allchannelsortedsubject.next(data",{"_index":1952,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["this.allchannelsuids",{"_index":2505,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelsuids.push(uid",{"_index":2525,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelsuids.push(uids",{"_index":2526,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelsusers",{"_index":2501,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allchannelsusers.push(channeldata['users",{"_index":2513,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allcreators.push(userdata['channelcreator",{"_index":2552,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allemails",{"_index":2542,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allemails.push(userdata['email",{"_index":2549,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allimages",{"_index":2541,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allimages.push(userdata['image",{"_index":2550,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.alluids",{"_index":2543,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.alluids.push(userdata['uid",{"_index":2551,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.alluser",{"_index":782,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{}}}],["this.alluser.push",{"_index":783,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["this.alluser.push(this.setnoteobjectuser(element.data",{"_index":1215,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{}}}],["this.allusers",{"_index":2540,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allusers.push(userdata['name",{"_index":2548,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.allusersorted",{"_index":1887,"title":{},"body":{"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{}}}],["this.allusersortedsubject.asobservable",{"_index":1951,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["this.allusersortedsubject.next(data",{"_index":1950,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["this.authservice.changepassword(actioncode",{"_index":2072,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.authservice.currentusersignal",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.currentusersignal()?.email",{"_index":1365,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["this.authservice.currentusersignal()?.name",{"_index":1362,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["this.authservice.currentusersignal()?.uid",{"_index":1068,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{}}}],["this.authservice.currentusersignal.set",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.currentusersignal.set(null",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.guestlogin().subscribe",{"_index":1694,"title":{},"body":{"components/LogInComponent.html":{}}}],["this.authservice.login(rawform.email",{"_index":1699,"title":{},"body":{"components/LogInComponent.html":{}}}],["this.authservice.logout().subscribe",{"_index":2214,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["this.authservice.passwordreset(email",{"_index":2272,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authservice.signinwithgoogle().subscribe",{"_index":1656,"title":{},"body":{"components/LogInComponent.html":{}}}],["this.authservice.updateuserdata(email",{"_index":1394,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["this.authservice.user$.subscribe(user",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["this.changeimg",{"_index":2314,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["this.changetype",{"_index":2315,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["this.channelinfo.adduserfromheadertochannelopen",{"_index":548,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["this.channelinfo.allchannelsimages",{"_index":561,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["this.channelinfo.currentchannelnumber",{"_index":562,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["this.channelinfo.onlineuseruidlist.includes(useruid",{"_index":793,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{}}}],["this.channelinfo.openuserlist",{"_index":549,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["this.channelopenvariable",{"_index":688,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["this.channelselectionservice.getselectedchannel().subscribe((channel",{"_index":545,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["this.channelselectionservice.getselectedimg().subscribe((src",{"_index":1986,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["this.channelselectionservice.getselectedreaction().subscribe((reaction",{"_index":1567,"title":{},"body":{"components/HomeComponent.html":{},"components/ReactionListComponent.html":{}}}],["this.channelselectionservice.openchannel",{"_index":2491,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.channelselectionservice.selectedchannelindex",{"_index":1917,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["this.channelselectionservice.setselectedchannel",{"_index":2494,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.channelselectionservice.setselectedchannel(this.allchannelsids[topchannelindex",{"_index":2539,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.chatareaservice.setnotechannel",{"_index":555,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["this.chatareaservice.setnoteobjectuser(element.data",{"_index":784,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["this.checkmark",{"_index":1129,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.closedialog",{"_index":1379,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["this.closepopup",{"_index":1399,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["this.communicationtype",{"_index":1137,"title":{},"body":{"classes/DirectMessage.html":{}}}],["this.currentchannel",{"_index":559,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["this.currentchannel.images.length",{"_index":565,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["this.currentchannel.name",{"_index":567,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["this.currentchannelid",{"_index":546,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["this.currentchannelnumber",{"_index":2496,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.currentthread",{"_index":411,"title":{},"body":{"components/ChannelComponent.html":{}}}],["this.currentuserid",{"_index":1911,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["this.currentusersignal.set",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersignal.set({name,email,imgurl,uid",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.date",{"_index":1114,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.day",{"_index":1120,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.directmessageselectionservice",{"_index":1176,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{}}}],["this.divhover",{"_index":566,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["this.editchannel",{"_index":1237,"title":{},"body":{"injectables/EditChannelService.html":{}}}],["this.emaillist",{"_index":2547,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.emaillist.push(userdata['email",{"_index":2556,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.emailsent",{"_index":2273,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.errormessage",{"_index":1383,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.fb.group",{"_index":2059,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.fb.nonnullable.group",{"_index":1361,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.fetchusersonline",{"_index":1662,"title":{},"body":{"components/LogInComponent.html":{}}}],["this.filename",{"_index":1127,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.fileurl",{"_index":1126,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.firebaseauth.currentuser",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.form.get('email')?.dirty",{"_index":1382,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["this.form.get('email')?.value",{"_index":2271,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.form.get('name')?.dirty",{"_index":1381,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["this.form.get('newpassword')?.value",{"_index":2070,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.form.getrawvalue",{"_index":1380,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{}}}],["this.form.invalid",{"_index":1388,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["this.form.valid",{"_index":1698,"title":{},"body":{"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.formatdate(timestamp",{"_index":1053,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["this.getprofile",{"_index":1217,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["this.globalchanneluids",{"_index":2509,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.globalchanneluids.push(channeldata['uids",{"_index":2520,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.handleerror(err.code",{"_index":1701,"title":{},"body":{"components/LogInComponent.html":{}}}],["this.handshake",{"_index":1130,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.hideorshowpopup.currentchannelnumber",{"_index":2211,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["this.hideorshowpopup.editprofilcontactformopen",{"_index":1276,"title":{},"body":{"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{}}}],["this.hideorshowpopup.editprofilopen",{"_index":1274,"title":{},"body":{"components/EditProfilComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["this.hideorshowpopup.online",{"_index":2212,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["this.hideorshowpopup.popupopen",{"_index":1502,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["this.hideorshowsidebar.activeemail",{"_index":2651,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.hideorshowsidebar.activeuser",{"_index":2649,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.hideorshowsidebar.onlineuseruidlist.includes(this.hideorshowsidebar.activeuid",{"_index":2650,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.hideorshowsidebar.sidebaropen",{"_index":2006,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["this.hideorshowsidebar.userprofilopen",{"_index":2645,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.hour",{"_index":1121,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.id",{"_index":1111,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.imagelist",{"_index":2545,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.imagelist.push(userdata['image",{"_index":2554,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.imgurl",{"_index":2316,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["this.imgurlhide",{"_index":2318,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["this.imgurlwiew",{"_index":2317,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["this.issearching",{"_index":2368,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.lastthreadmessage",{"_index":1858,"title":{},"body":{"classes/Message.html":{}}}],["this.logouttojson",{"_index":1691,"title":{},"body":{"components/LogInComponent.html":{}}}],["this.message",{"_index":1116,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.messageuser",{"_index":1216,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["this.milliseconds",{"_index":1124,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.minute",{"_index":1122,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.month",{"_index":1119,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.nerdface",{"_index":1134,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.newmessageselectionservice.getallchannelsorted().subscribe((data",{"_index":1913,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["this.newmessageselectionservice.getallusersorted().subscribe((data",{"_index":1912,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["this.newmessageselectionservice.setselectedchannel(channel",{"_index":1915,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["this.newmessageselectionservice.setselecteduid(uid",{"_index":1914,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["this.noted",{"_index":1135,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.onlinesince",{"_index":1670,"title":{},"body":{"components/LogInComponent.html":{}}}],["this.openchannel",{"_index":1241,"title":{},"body":{"injectables/EditChannelService.html":{}}}],["this.password",{"_index":2321,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["this.passwordsmatchvalidator",{"_index":2060,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.provider",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.reseterrormessage",{"_index":1387,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["this.resetviewstate",{"_index":2216,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["this.responsiveservice.ischannelopen",{"_index":1503,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["this.responsiveservice.isdirectmessageopen",{"_index":1504,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["this.responsiveservice.issidebaropen",{"_index":2213,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["this.responsiveservice.isthreadopen",{"_index":1505,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["this.reveal",{"_index":2313,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["this.rocket",{"_index":1133,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.route.snapshot.queryparams['oobcode",{"_index":2071,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.router.navigate",{"_index":2215,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["this.router.navigatebyurl",{"_index":2074,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigatebyurl('/home",{"_index":1658,"title":{},"body":{"components/LogInComponent.html":{}}}],["this.saveuser.saveuser(uid",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.seconds",{"_index":1123,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.selectedchannel",{"_index":1916,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["this.selectedchannel.asobservable",{"_index":685,"title":{},"body":{"injectables/ChannelSelectionService.html":{},"injectables/NewMessageSelectionService.html":{}}}],["this.selectedchannel.next(channel",{"_index":691,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["this.selectedchannel.next(data",{"_index":1954,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["this.selectedelement",{"_index":1918,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["this.selectedelement.classlist.remove('selectedcontent",{"_index":1919,"title":{},"body":{"components/NewMessageSearchResultsComponent.html":{}}}],["this.selectedimg.asobservable",{"_index":687,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["this.selectedimg.next(src",{"_index":692,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["this.selectedreaction",{"_index":1568,"title":{},"body":{"components/HomeComponent.html":{},"components/ReactionListComponent.html":{}}}],["this.selectedreaction.asobservable",{"_index":686,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["this.selectedreaction.next(reactions",{"_index":693,"title":{},"body":{"injectables/ChannelSelectionService.html":{}}}],["this.selecteduser.asobservable",{"_index":1151,"title":{},"body":{"injectables/DirectMessageSelectionService.html":{}}}],["this.selecteduser.next(channel",{"_index":1153,"title":{},"body":{"injectables/DirectMessageSelectionService.html":{}}}],["this.setopenuser",{"_index":785,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/ReactionListComponent.html":{}}}],["this.settopchannel",{"_index":2527,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.setuser",{"_index":1175,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{}}}],["this.setusernumberbasedonimages",{"_index":560,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["this.shushingface",{"_index":1136,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.sincetojson",{"_index":1692,"title":{},"body":{"components/LogInComponent.html":{}}}],["this.sortresults",{"_index":1885,"title":{},"body":{"components/NewMessageHeaderComponent.html":{}}}],["this.src",{"_index":1987,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["this.subchannels",{"_index":547,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["this.subuser",{"_index":781,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{}}}],["this.succes",{"_index":2073,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.successmessage",{"_index":1396,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["this.text",{"_index":2320,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["this.thread.id",{"_index":2581,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.threadanimation",{"_index":413,"title":{},"body":{"components/ChannelComponent.html":{}}}],["this.threadanimation.asobservable",{"_index":2616,"title":{},"body":{"injectables/ThreadService.html":{}}}],["this.threadcount",{"_index":1128,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.threadid",{"_index":2580,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.threadservice.closethread",{"_index":2490,"title":{},"body":{"injectables/SidebarService.html":{},"components/ThreadHeaderComponent.html":{}}}],["this.threadservice.currentthread$.subscribe((thread",{"_index":410,"title":{},"body":{"components/ChannelComponent.html":{}}}],["this.threadservice.threadanimation$.subscribe((thread",{"_index":412,"title":{},"body":{"components/ChannelComponent.html":{}}}],["this.threadsubject.asobservable",{"_index":2613,"title":{},"body":{"injectables/ThreadService.html":{}}}],["this.threadsubject.getvalue",{"_index":2625,"title":{},"body":{"injectables/ThreadService.html":{}}}],["this.threadsubject.next(null",{"_index":2624,"title":{},"body":{"injectables/ThreadService.html":{}}}],["this.threadsubject.next(thread",{"_index":2619,"title":{},"body":{"injectables/ThreadService.html":{}}}],["this.thumbsdown",{"_index":1132,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.thumbsup",{"_index":1131,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.tojson",{"_index":1693,"title":{},"body":{"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["this.tojson(uid",{"_index":2336,"title":{},"body":{"injectables/SaveNewUserService.html":{}}}],["this.type",{"_index":2319,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["this.uid",{"_index":1113,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.uid.asobservable",{"_index":1956,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["this.uid.next(data",{"_index":1955,"title":{},"body":{"injectables/NewMessageSelectionService.html":{}}}],["this.uidlist",{"_index":2546,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.uidlist.push(userdata['uid",{"_index":2555,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.updateselecteduser",{"_index":2646,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.updateuserindatabase(currentuser.uid",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user",{"_index":1125,"title":{},"body":{"classes/DirectMessage.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"classes/Message.html":{},"components/ReactionListComponent.html":{}}}],["this.userinfo.activechannelindex",{"_index":1660,"title":{},"body":{"components/LogInComponent.html":{}}}],["this.userinfo.asd",{"_index":1669,"title":{},"body":{"components/LogInComponent.html":{}}}],["this.userinfo.fetchusers",{"_index":1659,"title":{},"body":{"components/LogInComponent.html":{}}}],["this.userinfo.online",{"_index":1663,"title":{},"body":{"components/LogInComponent.html":{}}}],["this.userinfo.onlineuseruidlist",{"_index":1677,"title":{},"body":{"components/LogInComponent.html":{}}}],["this.userinfo.onlineuseruidlist.push(userdata['uid",{"_index":1684,"title":{},"body":{"components/LogInComponent.html":{}}}],["this.userlist",{"_index":2544,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.userlist.push(userdata['name",{"_index":2553,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.usernumber",{"_index":564,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["this.useroffline",{"_index":2217,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["this.useronline",{"_index":1661,"title":{},"body":{"components/LogInComponent.html":{}}}],["this.weekday",{"_index":1117,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["this.year",{"_index":1118,"title":{},"body":{"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["thread",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{}}}],["thread'},{'name",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["thread.component.html",{"_index":2560,"title":{},"body":{"components/ThreadComponent.html":{}}}],["thread.component.scss",{"_index":2579,"title":{},"body":{"components/ThreadComponent.html":{}}}],["thread.component.scss,./thread",{"_index":2559,"title":{},"body":{"components/ThreadComponent.html":{}}}],["thread.service",{"_index":2489,"title":{},"body":{"injectables/SidebarService.html":{}}}],["thread/thread/thread.component",{"_index":401,"title":{},"body":{"components/ChannelComponent.html":{}}}],["threadanimation",{"_index":386,"title":{},"body":{"components/ChannelComponent.html":{},"injectables/ThreadService.html":{}}}],["threadchatareacomponent",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["threadcomponent",{"_index":168,"title":{"components/ThreadComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["threadcount",{"_index":914,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["threadheadercomponent",{"_index":170,"title":{"components/ThreadHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["threadid",{"_index":2565,"title":{},"body":{"components/ThreadComponent.html":{}}}],["threadmessageinputcomponent",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["threads",{"_index":1489,"title":{},"body":{"components/HeaderComponent.html":{}}}],["threadservice",{"_index":389,"title":{"injectables/ThreadService.html":{}},"body":{"components/ChannelComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/SidebarService.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"coverage.html":{}}}],["threadsubject",{"_index":2604,"title":{},"body":{"injectables/ThreadService.html":{}}}],["through",{"_index":518,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{}}}],["throw",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatAreaService.html":{}}}],["throws",{"_index":976,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["thumbsdown",{"_index":959,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["thumbsup",{"_index":957,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["time",{"_index":874,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["timestamp",{"_index":854,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["timing",{"_index":1754,"title":{},"body":{"components/LogInComponent.html":{}}}],["title",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/UserProfilComponent.html":{}}}],["today",{"_index":868,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["today.getdate",{"_index":1047,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["today.getfullyear",{"_index":1051,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["today.getmonth",{"_index":1049,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["togglepassword",{"_index":2300,"title":{},"body":{"injectables/RevealPasswordService.html":{}}}],["toggles",{"_index":1999,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["tojson",{"_index":1615,"title":{},"body":{"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/SaveNewUserService.html":{}}}],["tojson(uid",{"_index":2329,"title":{},"body":{"injectables/SaveNewUserService.html":{}}}],["token",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["top",{"_index":613,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["topchannelindex",{"_index":2537,"title":{},"body":{"injectables/SidebarService.html":{}}}],["transform",{"_index":642,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{}}}],["transition",{"_index":418,"title":{},"body":{"components/ChannelComponent.html":{},"components/LogInComponent.html":{}}}],["translate",{"_index":1806,"title":{},"body":{"components/LogInComponent.html":{}}}],["translate(0",{"_index":1815,"title":{},"body":{"components/LogInComponent.html":{}}}],["translatex",{"_index":834,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{}}}],["translatex(0",{"_index":1814,"title":{},"body":{"components/LogInComponent.html":{}}}],["translatex(120px",{"_index":1531,"title":{},"body":{"components/HeaderComponent.html":{}}}],["translatex(130px",{"_index":1524,"title":{},"body":{"components/HeaderComponent.html":{}}}],["translatex(20px",{"_index":2021,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["translatex(25px",{"_index":1527,"title":{},"body":{"components/HeaderComponent.html":{}}}],["translatex(30px",{"_index":2022,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["translatex(57px",{"_index":1518,"title":{},"body":{"components/HeaderComponent.html":{}}}],["translatex(73px",{"_index":1530,"title":{},"body":{"components/HeaderComponent.html":{}}}],["translatey",{"_index":1514,"title":{},"body":{"components/HeaderComponent.html":{}}}],["translatey(0.5px",{"_index":2027,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["translatey(220px",{"_index":2023,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["translatey(260px",{"_index":2028,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["translatey(47px",{"_index":1529,"title":{},"body":{"components/HeaderComponent.html":{}}}],["translatey(50px",{"_index":1517,"title":{},"body":{"components/HeaderComponent.html":{}}}],["transparent",{"_index":1788,"title":{},"body":{"components/LogInComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["trigger",{"_index":2263,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["triggered",{"_index":745,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/UserProfilComponent.html":{}}}],["triggers",{"_index":1267,"title":{},"body":{"components/EditProfilComponent.html":{}}}],["true",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{}}}],["try",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatAreaService.html":{},"components/EditProfilContactformComponent.html":{}}}],["tslib",{"_index":2766,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":608,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["type",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Channel.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"injectables/FileUploadeService.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"classes/Message.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/OpenImgComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"interfaces/User.html":{},"interfaces/UserInterFace.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typisieren",{"_index":1015,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["udgfuid",{"_index":2641,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["uhr",{"_index":1007,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["uid",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/LogInComponent.html":{},"classes/Message.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"interfaces/User.html":{},"interfaces/UserInterFace.html":{}}}],["uidlist",{"_index":2432,"title":{},"body":{"injectables/SidebarService.html":{}}}],["uids",{"_index":903,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/NewMessageHeaderComponent.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{}}}],["uids.foreach(uid",{"_index":2524,"title":{},"body":{"injectables/SidebarService.html":{}}}],["um",{"_index":2182,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unbekannter",{"_index":1727,"title":{},"body":{"components/LogInComponent.html":{}}}],["und",{"_index":999,"title":{},"body":{"injectables/ChatAreaService.html":{},"injectables/EditChannelService.html":{},"components/LogInComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionListComponent.html":{}}}],["undefined",{"_index":563,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/SidebarService.html":{}}}],["ungültig",{"_index":1718,"title":{},"body":{"components/LogInComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ungültige",{"_index":991,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["unintentionally",{"_index":1262,"title":{},"body":{"components/EditProfilComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["unique",{"_index":899,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["uniquefilename",{"_index":1462,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["unit",{"_index":2796,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["unknown@example.com",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["uns",{"_index":2103,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unserer",{"_index":2149,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["up",{"_index":734,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/EditProfilComponent.html":{},"components/HeaderComponent.html":{},"components/OpenImgComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["up'},{'name",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["up.component",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["up.component.ts",{"_index":2673,"title":{},"body":{"coverage.html":{}}}],["up/sign",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["update",{"_index":521,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"injectables/ChatAreaService.html":{},"components/EditProfilContactformComponent.html":{}}}],["updated",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatAreaService.html":{}}}],["updatedoc",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["updatedoc(messageref",{"_index":1040,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["updatedoc(userdocref",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatedvalue",{"_index":1038,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["updateemail",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateemail(currentuser",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatemessagevariable",{"_index":849,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["updatemessagevariable(messageid",{"_index":927,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["updateprofile",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateprofile(currentuser",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateprofile(response.user",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["updates",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["updateselecteduser",{"_index":2631,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["updateuserdata",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"components/EditProfilContactformComponent.html":{}}}],["updateuserdata(email",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuserindatabase",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuserindatabase(userid",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["updating",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{}}}],["upload.service.ts",{"_index":1441,"title":{},"body":{"injectables/FileUploadeService.html":{},"coverage.html":{}}}],["upload.service.ts:14",{"_index":1444,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["upload.service.ts:17",{"_index":1448,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["upload.service.ts:42",{"_index":1446,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["uploadbytesresumable",{"_index":1453,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["uploadbytesresumable(storageref",{"_index":1468,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["uploadfile",{"_index":1443,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["uploadfile(file",{"_index":1447,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["uploadtask",{"_index":1467,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["uploadtask.on",{"_index":1471,"title":{},"body":{"injectables/FileUploadeService.html":{}}}],["upon",{"_index":2197,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{},"components/ThreadHeaderComponent.html":{}}}],["url",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/OpenImgComponent.html":{},"injectables/SaveNewUserService.html":{}}}],["url(\"../../../assets/img/header/keyboard_arrow_down.png",{"_index":1519,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url(\"../../../assets/img/landing",{"_index":1810,"title":{},"body":{"components/LogInComponent.html":{}}}],["url('../../../../assets/img/header/expand_more.png",{"_index":638,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["url('../../../../assets/img/header/keyboard_arrow_down.png",{"_index":633,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["url('../../../../assets/img/header/person_add.png",{"_index":617,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["url('../../../../assets/img/header/person_add_hover.png",{"_index":620,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["url('../../../../assets/img/sidebar/tag.png",{"_index":630,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["url('../../../../assets/img/sidebar/tag_hover.png",{"_index":637,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["url('../../../assets/img/create",{"_index":812,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/UserProfilComponent.html":{}}}],["url('../../../assets/img/header/add",{"_index":822,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["url('../../../assets/img/header/expand_more.png",{"_index":1510,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url('../../../assets/img/open",{"_index":2015,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["url('../../../assets/img/sidebar/edit",{"_index":1326,"title":{},"body":{"components/EditProfilComponent.html":{}}}],["url('../../../assets/img/sidebar/edit.png",{"_index":1324,"title":{},"body":{"components/EditProfilComponent.html":{}}}],["url('../../../assets/img/sidebar/offline.png",{"_index":1300,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["url('../../../assets/img/sidebar/online.png",{"_index":1298,"title":{},"body":{"components/EditProfilComponent.html":{},"components/UserProfilComponent.html":{}}}],["url('/assets/img/open",{"_index":2224,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["use",{"_index":2593,"title":{},"body":{"components/ThreadHeaderComponent.html":{},"index.html":{}}}],["used",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["user",{"_index":74,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"classes/Message.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"interfaces/User.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["user's",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["user(this.firebaseauth",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.displayname",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["user.email",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["user.photourl",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["user.png",{"_index":823,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["user.service",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service.ts",{"_index":2323,"title":{},"body":{"injectables/SaveNewUserService.html":{},"coverage.html":{}}}],["user.service.ts:11",{"_index":2331,"title":{},"body":{"injectables/SaveNewUserService.html":{}}}],["user.service.ts:12",{"_index":2334,"title":{},"body":{"injectables/SaveNewUserService.html":{}}}],["user.service.ts:13",{"_index":2333,"title":{},"body":{"injectables/SaveNewUserService.html":{}}}],["user.service.ts:14",{"_index":2332,"title":{},"body":{"injectables/SaveNewUserService.html":{}}}],["user.service.ts:16",{"_index":2328,"title":{},"body":{"injectables/SaveNewUserService.html":{}}}],["user.service.ts:30",{"_index":2330,"title":{},"body":{"injectables/SaveNewUserService.html":{}}}],["user.service.ts:7",{"_index":2326,"title":{},"body":{"injectables/SaveNewUserService.html":{}}}],["user.uid",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["userdata",{"_index":1679,"title":{},"body":{"components/LogInComponent.html":{},"injectables/SidebarService.html":{}}}],["userdata['onlinesince",{"_index":1682,"title":{},"body":{"components/LogInComponent.html":{}}}],["userdocref",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["useremail",{"_index":2630,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["userid",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatAreaService.html":{},"injectables/SaveNewUserService.html":{}}}],["userimage",{"_index":2324,"title":{},"body":{"injectables/SaveNewUserService.html":{}}}],["userinfo",{"_index":1608,"title":{},"body":{"components/LogInComponent.html":{}}}],["userinterface",{"_index":282,"title":{"interfaces/UserInterFace.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/UserInterFace.html":{},"coverage.html":{}}}],["userlist",{"_index":697,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"injectables/SidebarService.html":{}}}],["userlist'},{'name",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["userlist.component",{"_index":1554,"title":{},"body":{"components/HomeComponent.html":{}}}],["userlist.component.html",{"_index":700,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["userlist.component.scss",{"_index":780,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["userlist.component.scss,./channel",{"_index":699,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["userlist.component.ts",{"_index":696,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"coverage.html":{}}}],["userlist.component.ts:102",{"_index":765,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["userlist.component.ts:129",{"_index":722,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["userlist.component.ts:148",{"_index":760,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["userlist.component.ts:160",{"_index":718,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["userlist.component.ts:173",{"_index":736,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["userlist.component.ts:186",{"_index":712,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["userlist.component.ts:203",{"_index":748,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["userlist.component.ts:35",{"_index":774,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["userlist.component.ts:36",{"_index":773,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["userlist.component.ts:37",{"_index":778,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["userlist.component.ts:38",{"_index":772,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["userlist.component.ts:39",{"_index":777,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["userlist.component.ts:40",{"_index":711,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["userlist.component.ts:43",{"_index":775,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["userlist.component.ts:45",{"_index":776,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["userlist.component.ts:58",{"_index":730,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["userlist.component.ts:78",{"_index":766,"title":{},"body":{"components/ChannelUserlistComponent.html":{}}}],["userlist/channel",{"_index":695,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["usermail",{"_index":2325,"title":{},"body":{"injectables/SaveNewUserService.html":{}}}],["username",{"_index":1180,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{},"injectables/SaveNewUserService.html":{}}}],["usernumber",{"_index":455,"title":{},"body":{"components/ChannelHeaderComponent.html":{}}}],["useroffline",{"_index":1616,"title":{},"body":{"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["useronline",{"_index":1248,"title":{},"body":{"components/EditProfilComponent.html":{},"components/LogInComponent.html":{},"components/UserProfilComponent.html":{}}}],["userprofilcomponent",{"_index":172,"title":{"components/UserProfilComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["userprofilopen",{"_index":749,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"injectables/SidebarService.html":{}}}],["userref",{"_index":1689,"title":{},"body":{"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"injectables/SaveNewUserService.html":{}}}],["users",{"_index":724,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/ReactionListComponent.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{}}}],["users/${userid",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["userscollection",{"_index":1673,"title":{},"body":{"components/LogInComponent.html":{},"injectables/SidebarService.html":{}}}],["useruid",{"_index":792,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/DirectMessagesHeaderComponent.html":{}}}],["uses",{"_index":2259,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["using",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{}}}],["valid",{"_index":1637,"title":{},"body":{"components/LogInComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validates",{"_index":1353,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/PasswordResetComponent.html":{}}}],["validator",{"_index":2047,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["validators",{"_index":1376,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.maxlength(20",{"_index":1364,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["validators.minlength(6",{"_index":1363,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/PasswordResetComponent.html":{}}}],["validators.pattern('[a",{"_index":1366,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.required",{"_index":1646,"title":{},"body":{"components/LogInComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["value",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RevealPasswordService.html":{},"injectables/SaveNewUserService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":756,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"injectables/ChatAreaService.html":{}}}],["valuesarray",{"_index":1027,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["valuesarray.filter((value",{"_index":1032,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["valuesarray.includes(newvalue",{"_index":1030,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["valuesarray.join",{"_index":1039,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["valuesarray.push(newvalue",{"_index":1035,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["var",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["variable",{"_index":931,"title":{},"body":{"injectables/ChatAreaService.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["variablename",{"_index":929,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["variables",{"_index":2818,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verantwortliche",{"_index":2115,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verantwortlichen",{"_index":2117,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verarbeitung",{"_index":2167,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vergessen",{"_index":1743,"title":{},"body":{"components/LogInComponent.html":{}}}],["verifies",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifypasswordresetcode",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifypasswordresetcode(this.firebaseauth",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["verpflichtungen",{"_index":2151,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["version",{"_index":2775,"title":{},"body":{"index.html":{},"properties.html":{}}}],["versuchen",{"_index":1716,"title":{},"body":{"components/LogInComponent.html":{}}}],["vertraglichen",{"_index":2150,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verwaltung",{"_index":2134,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verwenden",{"_index":2111,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verwendest",{"_index":1740,"title":{},"body":{"components/LogInComponent.html":{}}}],["verwendet",{"_index":2131,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verwendung",{"_index":2126,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["via",{"_index":2800,"title":{},"body":{"index.html":{}}}],["viele",{"_index":1723,"title":{},"body":{"components/LogInComponent.html":{}}}],["view",{"_index":731,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"components/HeaderComponent.html":{},"components/ProfilOptionsPopupComponent.html":{}}}],["viewchild",{"_index":1206,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["viewchildren",{"_index":1207,"title":{},"body":{"components/DirectMessagesHeaderComponent.html":{}}}],["views",{"_index":2202,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["visibility",{"_index":2000,"title":{},"body":{"components/OpenSidebarComponent.html":{}}}],["visited",{"_index":1584,"title":{},"body":{"components/ImpressumComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["void",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelHeaderComponent.html":{},"injectables/ChannelSelectionService.html":{},"components/ChannelUserlistComponent.html":{},"injectables/DirectMessageSelectionService.html":{},"components/DirectMessagesComponent.html":{},"components/DirectMessagesHeaderComponent.html":{},"injectables/EditChannelService.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressumComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageHeaderComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"injectables/NewMessageSelectionService.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/PasswordResetComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ReactionListComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RevealPasswordService.html":{},"injectables/SearchService.html":{},"injectables/SidebarService.html":{},"components/ThreadComponent.html":{},"components/ThreadHeaderComponent.html":{},"injectables/ThreadService.html":{},"components/UserProfilComponent.html":{}}}],["vollständiger",{"_index":1404,"title":{},"body":{"components/EditProfilContactformComponent.html":{}}}],["von",{"_index":1240,"title":{},"body":{"injectables/EditChannelService.html":{},"components/PrivacyPolicyComponent.html":{}}}],["vor",{"_index":2181,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vorgeschrieben",{"_index":2154,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["weak",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["weekday",{"_index":907,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["weight",{"_index":625,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/LogInComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["weinfelden",{"_index":1598,"title":{},"body":{"components/ImpressumComponent.html":{}}}],["weitergabe",{"_index":2140,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["weitergegeben",{"_index":2143,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["welche",{"_index":2108,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wenden",{"_index":2178,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["went",{"_index":2220,"title":{},"body":{"components/ProfilOptionsPopupComponent.html":{}}}],["werden",{"_index":2128,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wert",{"_index":1146,"title":{},"body":{"injectables/DirectMessageSelectionService.html":{},"injectables/EditChannelService.html":{}}}],["whether",{"_index":1970,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["white",{"_index":584,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["whose",{"_index":758,"title":{},"body":{"components/ChannelUserlistComponent.html":{},"injectables/SearchService.html":{}}}],["wichtig",{"_index":2105,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wider",{"_index":1974,"title":{},"body":{"components/OpenImgComponent.html":{}}}],["widerruf",{"_index":2175,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["width",{"_index":417,"title":{},"body":{"components/ChannelComponent.html":{},"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LogInComponent.html":{},"components/NewMessageSearchResultsComponent.html":{},"components/OpenImgComponent.html":{},"components/OpenSidebarComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["wie",{"_index":2110,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["willkommen",{"_index":2098,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["window",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["window.innerwidth",{"_index":2647,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["wir",{"_index":1735,"title":{},"body":{"components/LogInComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["words",{"_index":924,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["workspace",{"_index":1521,"title":{},"body":{"components/HeaderComponent.html":{},"components/OpenSidebarComponent.html":{}}}],["wrapper",{"_index":1793,"title":{},"body":{"components/LogInComponent.html":{}}}],["x",{"_index":431,"title":{},"body":{"components/ChannelComponent.html":{}}}],["year",{"_index":908,"title":{},"body":{"injectables/ChatAreaService.html":{},"classes/DirectMessage.html":{},"classes/Message.html":{}}}],["yes",{"_index":1086,"title":{},"body":{"classes/DirectMessage.html":{},"components/LogInComponent.html":{},"classes/Message.html":{}}}],["yourclassname",{"_index":2597,"title":{},"body":{"components/ThreadHeaderComponent.html":{}}}],["z",{"_index":607,"title":{},"body":{"components/ChannelHeaderComponent.html":{},"components/ChannelUserlistComponent.html":{},"components/EditProfilComponent.html":{},"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/ProfilOptionsPopupComponent.html":{},"components/UserProfilComponent.html":{}}}],["z0",{"_index":1368,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["z5qgg7xbd0",{"_index":2849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z]{2",{"_index":1371,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["za",{"_index":1367,"title":{},"body":{"components/EditProfilContactformComponent.html":{},"components/LogInComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["zahl",{"_index":997,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["zeichen",{"_index":2084,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["zone.js",{"_index":2768,"title":{},"body":{"dependencies.html":{}}}],["zu",{"_index":1722,"title":{},"body":{"components/LogInComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["zum",{"_index":1561,"title":{},"body":{"components/HomeComponent.html":{}}}],["zur",{"_index":2147,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zurück",{"_index":1233,"title":{},"body":{"injectables/EditChannelService.html":{}}}],["zurückgegebenen",{"_index":1017,"title":{},"body":{"injectables/ChatAreaService.html":{}}}],["zurücksetzen",{"_index":2082,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["zusammenhang",{"_index":2119,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zwecke",{"_index":2130,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zwischen",{"_index":998,"title":{},"body":{"injectables/ChatAreaService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                HeaderComponent\n                                OpenSidebarComponent\n                                SidebarComponent\n                                ChannelComponent\n                                LogInComponent\n                                CreateChannelComponent\n                                SignUpComponent\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DABubble'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { RouterLink, RouterOutlet } from '@angular/router';\nimport { HeaderComponent } from \"./main/header/header.component\";\nimport { OpenSidebarComponent } from \"./main/open-sidebar/open-sidebar.component\";\nimport { SidebarComponent } from \"./main/sidebar/sidebar.component\";\nimport { ChannelComponent } from \"./main/channel/channel/channel.component\";\nimport { LogInComponent } from \"./landing_page/log-in/log-in.component\";\nimport { CreateChannelComponent } from './main/create-channel/create-channel.component';\nimport { SignUpComponent } from \"./landing_page/sign-up/sign-up.component\";\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, HeaderComponent, OpenSidebarComponent, SidebarComponent, ChannelComponent, LogInComponent,\n    CreateChannelComponent, SignUpComponent, RouterLink ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent implements OnInit {\n  title = 'DABubble';\n\n  authService = inject(AuthService);\n\n  ngOnInit(): void {\n    this.authService.user$.subscribe(user => {\n      if (user) {\n        this.authService.currentUserSignal.set({\n          email: user.email!,\n          name: user.displayName!,\n          imgUrl: user.photoURL,\n          uId: user.uid\n        });\n      } else {\n        console.log('No user data, setting currentUserSignal to null');\n        this.authService.currentUserSignal.set(null);\n      }\n      console.log('Current user signal:', this.authService.currentUserSignal());\n    });\n}\n  \n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUserSignal\n                            \n                            \n                                firebaseAuth\n                            \n                            \n                                firestore\n                            \n                            \n                                provider\n                            \n                            \n                                saveUser\n                            \n                            \n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                guestLogin\n                            \n                            \n                                logIn\n                            \n                            \n                                logOut\n                            \n                            \n                                passwordReset\n                            \n                            \n                                register\n                            \n                            \n                                signInWithGoogle\n                            \n                            \n                                    Async\n                                updateUserData\n                            \n                            \n                                    Async\n                                updateUserInDatabase\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(actionCode: string, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:148\n                        \n                    \n\n\n            \n                \n                        Changes the user's password using an action code and new password.\nVerifies the action code and updates the password.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                actionCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe password reset action code.\n\n\n                                            \n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new password to be set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the password is successfully changed.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guestLogin\n                        \n                    \n                \n            \n            \n                \nguestLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:109\n                        \n                    \n\n\n            \n                \n                        Logs in as a guest user using predefined credentials.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable that resolves when the guest login is successful.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logIn\n                        \n                    \n                \n            \n            \n                \nlogIn(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:95\n                        \n                    \n\n\n            \n                \n                        Logs in a user using email and password.\nUpdates the current user signal on success.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's email.\n\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's password.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable that resolves when the login is successful.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:127\n                        \n                    \n\n\n            \n                \n                        Logs out the currently signed-in user.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable that resolves when the logout is complete.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordReset\n                        \n                    \n                \n            \n            \n                \npasswordReset(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:137\n                        \n                    \n\n\n            \n                \n                        Sends a password reset email to the specified email address.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's email address.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the email is sent.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(email: string, name: string, password: string, imgUrl: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:72\n                        \n                    \n\n\n            \n                \n                        Registers a new user with email, name, and password.\nUpdates the user's profile and saves the information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's email.\n\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's display name.\n\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's password.\n\n\n                                            \n                                        \n                                        \n                                                imgUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's profile image URL.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable that returns the user's ID on successful registration.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInWithGoogle\n                        \n                    \n                \n            \n            \n                \nsignInWithGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Signs in a user with Google using a popup window.\nUpdates the current user signal and saves the user's information.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable that resolves when the sign-in is complete.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserData\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserData(email: string | null, name: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:168\n                        \n                    \n\n\n            \n                \n                        Updates the user's email and display name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new email address.\n\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new display name.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the user's data is successfully updated.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserInDatabase\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserInDatabase(userId: string, name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:197\n                        \n                    \n\n\n            \n                \n                        Updates the user's name in the Firestore database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's ID.\n\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new name to be updated in the database.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the user's name is successfully updated in Firestore.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserSignal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firebaseAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Auth)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GoogleAuthProvider()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SaveNewUserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : user(this.firebaseAuth)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport {\n  Auth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  updateProfile,\n  user,\n  GoogleAuthProvider,\n  signInWithPopup,\n  sendPasswordResetEmail,\n  confirmPasswordReset,\n  verifyPasswordResetCode,\n  updateEmail\n} from '@angular/fire/auth';\nimport { from, Observable } from 'rxjs';\nimport { UserInterFace } from '../../models/user.interface';\nimport { SaveNewUserService } from './save-new-user.service';\nimport { doc, Firestore, updateDoc } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  firebaseAuth = inject(Auth);\n  user$ = user(this.firebaseAuth);\n  currentUserSignal = signal(undefined);\n  provider = new GoogleAuthProvider();\n  saveUser = inject(SaveNewUserService);\n  firestore = inject(Firestore)\n\n  /**\n   * Signs in a user with Google using a popup window.\n   * Updates the current user signal and saves the user's information.\n   * @returns {Observable} An observable that resolves when the sign-in is complete.\n   */\n  signInWithGoogle(): Observable {\n    return from(\n      signInWithPopup(this.firebaseAuth, this.provider)\n        .then((result) => {\n          const credential = GoogleAuthProvider.credentialFromResult(result);\n          if (credential) {\n            const token = credential.accessToken;\n            // Google Access Token can be used here\n          }\n          const name = result.user.displayName ?? 'Unknown User';\n          const email = result.user.email ?? 'unknown@example.com';\n          const imgUrl = result.user.photoURL ?? '';\n          const uId = result.user.uid;\n          this.currentUserSignal.set({name,email,imgUrl,uId,});\n          console.log(\"User signed in with Google:\", name, email);\n          this.saveUser.saveUser(uId, email, name, imgUrl);\n        })\n        .catch((error) => {\n          const errorCode = error.code;\n          const errorMessage = error.message;\n          console.error(\"Error during Google Sign-In:\", errorCode, errorMessage);\n          throw error;\n        })\n    );\n  }\n\n  /**\n   * Registers a new user with email, name, and password.\n   * Updates the user's profile and saves the information.\n   * @param {string} email - The user's email.\n   * @param {string} name - The user's display name.\n   * @param {string} password - The user's password.\n   * @param {string} imgUrl - The user's profile image URL.\n   * @returns {Observable} An observable that returns the user's ID on successful registration.\n   */\n  register(email: string, name: string, password: string, imgUrl: string): Observable {\n    const promise = createUserWithEmailAndPassword(this.firebaseAuth, email, password)\n      .then(response => {\n        const uId = response.user.uid;\n        return updateProfile(response.user, { displayName: name, photoURL: imgUrl })\n          .then(() => {\n            this.currentUserSignal.set({ name, email, imgUrl, uId, });\n            return uId;\n          });\n      }).catch(error => {\n        console.error('Error updating profile:', error);\n        throw error;\n      });\n    return from(promise);\n  }\n\n  /**\n   * Logs in a user using email and password.\n   * Updates the current user signal on success.\n   * @param {string} email - The user's email.\n   * @param {string} password - The user's password.\n   * @returns {Observable} An observable that resolves when the login is successful.\n   */\n  logIn(email: string, password: string): Observable {\n    const promise = signInWithEmailAndPassword(this.firebaseAuth, email, password).then((result) => {\n      const uId = result.user.uid;\n      const name = result.user.displayName ?? 'Unknown User';\n      const imgUrl = result.user.photoURL ?? '';\n      this.currentUserSignal.set({ name, email, imgUrl, uId, });\n    });\n    return from(promise);\n  }\n\n  /**\n   * Logs in as a guest user using predefined credentials.\n   * @returns {Observable} An observable that resolves when the guest login is successful.\n   */\n  guestLogin(): Observable {\n    const predefinedEmail = 'gast@gastmail.com';\n    const predefinedPassword = 'asdasd';\n    const promise = signInWithEmailAndPassword(this.firebaseAuth, predefinedEmail, predefinedPassword)\n      .then((result) => {\n        const uId = result.user.uid;\n        const name = result.user.displayName ?? 'Gast';\n        const imgUrl = result.user.photoURL ?? '../../../assets/img/landing-page/profile.png';\n        this.currentUserSignal.set({ name, email: predefinedEmail, imgUrl, uId });\n      });\n\n    return from(promise);\n  }\n\n  /**\n   * Logs out the currently signed-in user.\n   * @returns {Observable} An observable that resolves when the logout is complete.\n   */\n  logOut(): Observable {\n    const promise = signOut(this.firebaseAuth);\n    return from(promise);\n  }\n\n  /**\n   * Sends a password reset email to the specified email address.\n   * @param {string} email - The user's email address.\n   * @returns {Promise} A promise that resolves when the email is sent.\n   */\n  passwordReset(email: string): Promise {\n    return sendPasswordResetEmail(this.firebaseAuth, email);\n  }\n\n  /**\n   * Changes the user's password using an action code and new password.\n   * Verifies the action code and updates the password.\n   * @param {string} actionCode - The password reset action code.\n   * @param {string} newPassword - The new password to be set.\n   * @returns {Promise} A promise that resolves when the password is successfully changed.\n   */\n  changePassword(actionCode: string, newPassword: string): Promise {\n    return verifyPasswordResetCode(this.firebaseAuth, actionCode).then((email) => {\n      return confirmPasswordReset(this.firebaseAuth, actionCode, newPassword).then(() => {\n        console.log('Password reset has been confirmed and updated for email:', email);\n      }).catch((error) => {\n        console.error('Error during password confirmation:', error);\n        throw new Error('Failed to reset password. The code might have expired or the password is too weak.');\n      });\n    }).catch((error) => {\n      console.error('Invalid or expired action code:', error);\n      throw new Error('Invalid or expired password reset code.');\n    });\n  }\n\n  /**\n   * Updates the user's email and display name.\n   * @param {string} email - The new email address.\n   * @param {string} name - The new display name.\n   * @returns {Promise} A promise that resolves when the user's data is successfully updated.\n   */\n  async updateUserData(email: string | null, name: string | null): Promise {\n    const currentUser = this.firebaseAuth.currentUser;\n    if (!currentUser) {\n      throw new Error('No user is currently signed in.');\n    } try {\n      if (email && currentUser.email !== email) {\n        await updateEmail(currentUser, email);\n      } if (name && currentUser.displayName !== name) {\n        await updateProfile(currentUser, { displayName: name });\n      }\n      await this.updateUserInDatabase(currentUser.uid, name || currentUser.displayName || '');\n      this.currentUserSignal.set({\n        email: email || currentUser.email || '',  \n        name: name || currentUser.displayName || '', \n        imgUrl: currentUser.photoURL ?? '',\n        uId: currentUser.uid\n      });\n    } catch (error) {\n      console.error('Error updating user profile:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Updates the user's name in the Firestore database.\n   * @param {string} userId - The user's ID.\n   * @param {string} name - The new name to be updated in the database.\n   * @returns {Promise} A promise that resolves when the user's name is successfully updated in Firestore.\n   */\n  async updateUserInDatabase(userId: string, name: string): Promise {\n    const userDocRef = doc(this.firestore, `Users/${userId}`);\n    await updateDoc(userDocRef, { name: name });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Channel.html":{"url":"interfaces/Channel.html","title":"interface - Channel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Channel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/channel.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Channel {\n    id: string;\n    name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChannelComponent.html":{"url":"components/ChannelComponent.html","title":"component - ChannelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChannelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/channel/channel/channel.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-channel\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ChannelHeaderComponent\n                                ChannelChatAreaComponent\n                                ChannelMessageInputComponent\n                                ThreadComponent\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./channel.component.scss,./channel-responsive.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./channel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentChannel\n                            \n                            \n                                currentThread\n                            \n                            \n                                responsiveService\n                            \n                            \n                                ThreadAnimation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(threadService: ThreadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/channel/channel/channel.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/channel/channel/channel.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentThread\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/channel/channel/channel.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        responsiveService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ResponsiveService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/channel/channel/channel.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ThreadAnimation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/channel/channel/channel.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { ChannelHeaderComponent } from '../channel-header/channel-header.component';\nimport { ChannelChatAreaComponent } from '../channel-chat-area/channel-chat-area.component';\nimport { ChannelMessageInputComponent } from '../channel-message-input/channel-message-input.component';\nimport { ThreadComponent } from '../../thread/thread/thread.component';\nimport { CommonModule } from '@angular/common';\nimport { ThreadService } from '../../../services/thread.service';\nimport { ChannelSelectionService } from '../../../services/channel-selection.service';\nimport { ResponsiveService } from '../../../services/responsive.service';\n\n@Component({\n  selector: 'app-channel',\n  standalone: true,\n  imports: [\n    ChannelHeaderComponent,\n    ChannelChatAreaComponent,\n    ChannelMessageInputComponent,\n    ThreadComponent,\n    CommonModule,\n  ],\n  templateUrl: './channel.component.html',\n  styleUrls: ['./channel.component.scss', './channel-responsive.component.scss']\n})\nexport class ChannelComponent {\n  currentThread: any;\n  currentChannel: any;\n  ThreadAnimation: any;\n  responsiveService = inject(ResponsiveService);\n\n  constructor(private threadService: ThreadService) {\n    this.threadService.currentThread$.subscribe((thread) => {\n      this.currentThread = thread;\n    });\n    this.threadService.ThreadAnimation$.subscribe((thread) => {\n      this.ThreadAnimation = thread;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./channel.component.scss\n                \n                .contentThreadClosed {\n  height: 100%;\n  width: 100%;\n  transition: width 0.3s;\n}\n\n.contentThreadOpen {\n  width: 65% !important;\n  transition: width 0.3s;\n}\n\n.contentContainer {\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  margin-right: 20px;\n  overflow-x: hidden;\n}\n\napp-thread {\n  display: block;\n  height: 100%;\n  margin-left: 20px;\n}\n\n.thread {\n  width: 0px;\n  transition: width 0.3s;\n}\n\n.slide-in-right {\n  width: 35%;\n}\n\n.slide-out-right {\n  width: 0px;\n}\n\n                \n                    ./channel-responsive.component.scss\n                \n                @media (max-width: 1000px) {\n  .contentContainer {\n    display: none;\n    margin-right: 0;\n  }\n\n  .channel-display-flex {\n    display: flex !important;\n  }\n\n  .channel-display-none {\n    display: none !important;\n  }\n  .slide-in-right {\n    width: 100%;\n  }\n\n  app-thread {\n    margin-left: 0;\n  }\n\n  .thread {\n    transition: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChannelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChannelHeaderComponent.html":{"url":"components/ChannelHeaderComponent.html","title":"component - ChannelHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChannelHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/channel/channel-header/channel-header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-channel-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                EditChannelComponent\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./channel-header.component.scss,./channel-header-responsiv.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./channel-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channelInfo\n                            \n                            \n                                    Public\n                                chatAreaService\n                            \n                            \n                                currentChannel\n                            \n                            \n                                currentChannelId\n                            \n                            \n                                divHover\n                            \n                            \n                                    Public\n                                editChannelService\n                            \n                            \n                                userNumber\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hover\n                            \n                            \n                                hoverOff\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openAddUserToChannel\n                            \n                            \n                                openUserList\n                            \n                            \n                                setUserNumberBasedOnImages\n                            \n                            \n                                subChannels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: Firestore, editChannelService: EditChannelService, channelSelectionService: ChannelSelectionService, chatAreaService: ChatAreaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/channel/channel-header/channel-header.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editChannelService\n                                                  \n                                                        \n                                                                        EditChannelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelSelectionService\n                                                  \n                                                        \n                                                                        ChannelSelectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatAreaService\n                                                  \n                                                        \n                                                                        ChatAreaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hover\n                        \n                    \n                \n            \n            \n                \nhover()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/channel/channel-header/channel-header.component.ts:154\n                        \n                    \n\n\n            \n                \n                        Sets the hover state to true.\n\nUpdates divHover to true to indicate that the element is being hovered over.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hoverOff\n                        \n                    \n                \n            \n            \n                \nhoverOff()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/channel/channel-header/channel-header.component.ts:166\n                        \n                    \n\n\n            \n                \n                        Resets the hover state to false.\n\nUpdates divHover to false to indicate that the element is no longer being hovered over.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/channel/channel-header/channel-header.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Initializes the component by subscribing to the selected channel changes.\n\nRetrieves the currently selected channel using channelSelectionService.\nUpdates currentChannelId with the selected channel.\nCalls subChannels to perform additional setup or subscriptions related to the channel.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAddUserToChannel\n                        \n                    \n                \n            \n            \n                \nopenAddUserToChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/channel/channel-header/channel-header.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Opens the dialog to add a user to the current channel.\n\nSets addUserFromHeaderToChannelOpen to true to display the user addition dialog.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserList\n                        \n                    \n                \n            \n            \n                \nopenUserList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/channel/channel-header/channel-header.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Opens the user list in the current channel.\n Sets openUserList to true to display the user list interface.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserNumberBasedOnImages\n                        \n                    \n                \n            \n            \n                \nsetUserNumberBasedOnImages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/channel/channel-header/channel-header.component.ts:127\n                        \n                    \n\n\n            \n                \n                        Updates the user number based on the images in the current channel.\n\nChecks if AllChannelsImages exists and if currentChannelNumber is defined.\nRetrieves the images for the current channel based on the channel number.\nSets userNumber to the length of currentChannel.images if images exist; otherwise, sets it to 0.\nIf the conditions are not met, userNumber is also set to 0.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subChannels\n                        \n                    \n                \n            \n            \n                \nsubChannels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/channel/channel-header/channel-header.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Subscribes to the channels collection in Firestore and updates the current channel.\n\nQueries the Channels collection with a limit of 1000 documents.\nListens for changes in the channels collection using onSnapshot.\nIterates through the channel documents, setting the channel data with setNoteChannel.\nUpdates currentChannel if the channel ID matches currentChannelId.\nCalls setUserNumberBasedOnImages to update the user number based on images.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        channelInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SidebarService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/channel/channel-header/channel-header.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chatAreaService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatAreaService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/channel/channel-header/channel-header.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/channel/channel-header/channel-header.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentChannelId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/channel/channel-header/channel-header.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        divHover\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main/channel/channel-header/channel-header.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        editChannelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EditChannelService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/channel/channel-header/channel-header.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/main/channel/channel-header/channel-header.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { EditChannelComponent } from '../../edit-channel/edit-channel.component';\nimport { EditChannelService } from '../../../services/edit-channel.service';\nimport { ChannelSelectionService } from '../../../services/channel-selection.service';\nimport { SidebarService } from '../../../services/sidebar.service';\nimport { CommonModule } from '@angular/common';\nimport {\n  Firestore,\n  addDoc,\n  collection,\n  deleteDoc,\n  deleteField,\n  doc,\n  getDoc,\n  getDocs,\n  limit,\n  onSnapshot,\n  query,\n  setDoc,\n  updateDoc,\n} from '@angular/fire/firestore';\nimport { ChatAreaService } from '../../../services/chat-area.service';\n\n@Component({\n  selector: 'app-channel-header',\n  standalone: true,\n  imports: [EditChannelComponent, CommonModule],\n  templateUrl: './channel-header.component.html',\n  styleUrls: [\n    './channel-header.component.scss',\n    './channel-header-responsiv.component.scss',\n  ],\n})\nexport class ChannelHeaderComponent {\n  currentChannelId: any;\n  currentChannel: any;\n  channelInfo = inject(SidebarService);\n  userNumber: number = 0;\n  divHover = false;\n\n  constructor(\n    private firestore: Firestore,\n    public editChannelService: EditChannelService,\n    private channelSelectionService: ChannelSelectionService,\n    public chatAreaService: ChatAreaService\n  ) { }\n\n  /**\n * Initializes the component by subscribing to the selected channel changes.\n *\n * @void\n *\n * @description\n * - Retrieves the currently selected channel using `channelSelectionService`.\n * - Updates `currentChannelId` with the selected channel.\n * - Calls `subChannels` to perform additional setup or subscriptions related to the channel.\n */\n  ngOnInit(): void {\n    this.channelSelectionService.getSelectedChannel().subscribe((channel) => {\n      this.currentChannelId = channel;\n      this.subChannels();\n    });\n  }\n\n  /**\n * Opens the dialog to add a user to the current channel.\n *\n * @void\n *\n * @description\n * - Sets `addUserFromHeaderToChannelOpen` to true to display the user addition dialog.\n */\n  openAddUserToChannel() {\n    this.channelInfo.addUserFromHeaderToChannelOpen = true;\n  }\n\n  /**\n * Opens the user list in the current channel.\n *\n * @description\n *  Sets `openUserList` to true to display the user list interface.\n */\n  openUserList() {\n    this.channelInfo.openUserList = true;\n  }\n\n  /**\n * Subscribes to the channels collection in Firestore and updates the current channel.\n *\n * @void\n *\n * @description\n * - Queries the `Channels` collection with a limit of 1000 documents.\n * - Listens for changes in the channels collection using `onSnapshot`.\n * - Iterates through the channel documents, setting the channel data with `setNoteChannel`.\n * - Updates `currentChannel` if the channel ID matches `currentChannelId`.\n * - Calls `setUserNumberBasedOnImages` to update the user number based on images.\n */\n  subChannels() {\n    const q = query(collection(this.firestore, 'Channels'), limit(1000));\n    onSnapshot(q, (list) => {\n      let channel: any;\n      list.forEach((element) => {\n        channel = this.chatAreaService.setNoteChannel(\n          element.data(),\n          element.id\n        );\n        if (channel.id === this.currentChannelId) {\n          this.currentChannel = channel;\n          this.setUserNumberBasedOnImages();\n        }\n      });\n    });\n  }\n\n  /**\n * Updates the user number based on the images in the current channel.\n *\n * @void\n *\n * @description\n * - Checks if `AllChannelsImages` exists and if `currentChannelNumber` is defined.\n * - Retrieves the images for the current channel based on the channel number.\n * - Sets `userNumber` to the length of `currentChannel.images` if images exist; otherwise, sets it to 0.\n * - If the conditions are not met, `userNumber` is also set to 0.\n */\n  setUserNumberBasedOnImages() {\n    if (\n      this.channelInfo.AllChannelsImages &&\n      this.channelInfo.currentChannelNumber !== undefined\n    ) {\n      const images =\n        this.channelInfo.AllChannelsImages[\n        this.channelInfo.currentChannelNumber\n        ];\n      if (images) {\n        this.userNumber = this.currentChannel.images.length;\n      } else {\n        this.userNumber = 0;\n      }\n    } else {\n      this.userNumber = 0;\n    }\n  }\n\n  /**\n * Sets the hover state to true.\n *\n * @void\n *\n * @description\n * - Updates `divHover` to true to indicate that the element is being hovered over.\n */\n  hover() {\n    this.divHover = true;\n  }\n\n  /**\n * Resets the hover state to false.\n *\n * @void\n *\n * @description\n * - Updates `divHover` to false to indicate that the element is no longer being hovered over.\n */\n  hoverOff() {\n    this.divHover = false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{ this.currentChannel.name }}\n    \n    \n  \n  \n    \n      \n      @if(this.currentChannel.images.length > 0 && i > this.currentChannel.images.length -4){\n          \n        }\n      \n      \n        {{ userNumber }}\n      \n    \n    @if(this.currentChannel.images.length == 2){\n      \n      \n    }\n    @if(this.currentChannel.images.length == 1){\n      \n      \n    }\n    @if(this.currentChannel.images.length > 2) {\n      \n      \n    }\n    \n    \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./channel-header.component.scss\n                \n                .header {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 25px 45px;\n  border-radius: 30px 30px 0 0;\n  background-color: white;\n  filter: drop-shadow(0px 2px 10px rgba(0, 0, 0, 0.08));\n}\n\n.header-right {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.channelUserContainer {\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 10px;\n  margin-right: 20px;\n  border-radius: 30px;\n}\n\n.channelUser-background {\n  width: 153px;\n  height: 55px;\n  border-radius: 100px;\n  position: absolute;\n  right: 95px;\n  cursor: pointer;\n  z-index: 0;\n}\n\n.channelUser-background-two {\n  width: 120px;\n  height: 55px;\n  border-radius: 100px;\n  position: absolute;\n  right: 95px;\n  cursor: pointer;\n  z-index: 0;\n}\n\n.channelUser-background-one {\n  width: 88px;\n  height: 55px;\n  border-radius: 100px;\n  position: absolute;\n  right: 95px;\n  cursor: pointer;\n  z-index: 0;\n}\n\n.channelUser-background-hover {\n  background-color: #ECEEFE;\n}\n\n.channelUser-background-top {\n  width: 153px;\n  height: 55px;\n  border-radius: 100px;\n  opacity: 0;\n  position: absolute;\n  right: 95px;\n  cursor: pointer;\n  z-index: 2;\n}\n\n.channelUser-background-top-two {\n  width: 120px;\n  height: 55px;\n  border-radius: 100px;\n  opacity: 0;\n  position: absolute;\n  right: 95px;\n  cursor: pointer;\n  z-index: 2;\n}\n\n.channelUser-background-top-one {\n  width: 88px;\n  height: 55px;\n  border-radius: 100px;\n  opacity: 0;\n  position: absolute;\n  right: 95px;\n  cursor: pointer;\n  z-index: 2;\n}\n\n.channelUser {\n  z-index: 1;\n}\n\n.add-user-icon, .add-user-icon-responsive {\n  cursor: pointer;\n  background-image: url('../../../../assets/img/header/person_add.png');\n  width: 40px;\n  height: 40px;\n  border-radius: 40px;\n  background-color: #ECEEFE;\n  background-repeat: no-repeat;\n  background-position: center center;\n  &:hover {\n    background-image: url('../../../../assets/img/header/person_add_hover.png');\n  }\n}\n\n.add-user-icon-responsive {\n  display: none;\n}\n\n.profil-image {\n  width: 40px;\n  height: 40px;\n  border-radius: 20px;\n  margin-left: -20px;\n  margin-top: 5px;\n  border: 1px solid white;\n}\n\n.userNumber {\n  font-weight: 600;\n  position: absolute;\n  top: 12px;\n  margin-left: 12px;\n  z-index: -5;\n}\n\n.tag {\n  background-image: url('../../../../assets/img/sidebar/tag.png');\n  width: 24px;\n  height: 24px;\n}\n\n.arrow {\n  background-image: url('../../../../assets/img/header/keyboard_arrow_down.png');\n  width: 30px;\n  height: 30px;\n}\n\n.channel-name-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  padding-left: 8px;\n  padding-right: 8px;\n  border-radius: 30px;\n  &:hover {\n    background-color: #ECEEFE;\n    .channel-name {\n      color: #535AF1;\n    }\n    .tag {\n      background-image: url('../../../../assets/img/sidebar/tag_hover.png');\n    }\n    .arrow {\n      background-image: url('../../../../assets/img/header/expand_more.png');\n    }\n    cursor: pointer;\n  }\n}\n\n.channel-name {\n  font-weight: 700;\n}\n\n.user-number {\n  font-weight: 600;\n  margin-left: 8px;\n}\n\n.user-number-hover {\n  color:#535AF1;\n}\n\n.user-number-container {\n  z-index: 1;\n}\n\n\n\n                \n                    ./channel-header-responsiv.component.scss\n                \n                @media(max-width: 1000px){\n    .header-right {\n        display: none;\n      }\n\n      .add-user-icon-responsive {\n        display: block;\n        transform: scale(0.8);\n      }\n\n      .header {\n        padding: 25px;\n        border-radius: 0;\n      }\n        \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ this.currentChannel.name }}                            @if(this.currentChannel.images.length > 0 && i > this.currentChannel.images.length -4){                  }                    {{ userNumber }}              @if(this.currentChannel.images.length == 2){                }    @if(this.currentChannel.images.length == 1){                }    @if(this.currentChannel.images.length > 2) {                }              '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChannelHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChannelSelectionService.html":{"url":"injectables/ChannelSelectionService.html","title":"injectable - ChannelSelectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChannelSelectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/channel-selection.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ChannelOpenVariable\n                            \n                            \n                                    Private\n                                selectedChannel\n                            \n                            \n                                selectedChannelIndex\n                            \n                            \n                                    Private\n                                selectedImg\n                            \n                            \n                                    Private\n                                selectedReaction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeChannel\n                            \n                            \n                                getSelectedChannel\n                            \n                            \n                                getselectedIMG\n                            \n                            \n                                getselectedReaction\n                            \n                            \n                                isChannelOpen\n                            \n                            \n                                openChannel\n                            \n                            \n                                openDirectMessage\n                            \n                            \n                                openNewMessage\n                            \n                            \n                                setSelectedChannel\n                            \n                            \n                                setSelectedImg\n                            \n                            \n                                setselectedReaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/channel-selection.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeChannel\n                        \n                    \n                \n            \n            \n                \ncloseChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/channel-selection.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedChannel\n                        \n                    \n                \n            \n            \n                \ngetSelectedChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/channel-selection.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getselectedIMG\n                        \n                    \n                \n            \n            \n                \ngetselectedIMG()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/channel-selection.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getselectedReaction\n                        \n                    \n                \n            \n            \n                \ngetselectedReaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/channel-selection.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isChannelOpen\n                        \n                    \n                \n            \n            \n                \nisChannelOpen()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/channel-selection.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openChannel\n                        \n                    \n                \n            \n            \n                \nopenChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/channel-selection.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDirectMessage\n                        \n                    \n                \n            \n            \n                \nopenDirectMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/channel-selection.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openNewMessage\n                        \n                    \n                \n            \n            \n                \nopenNewMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/channel-selection.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedChannel\n                        \n                    \n                \n            \n            \n                \nsetSelectedChannel(channel: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/channel-selection.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedImg\n                        \n                    \n                \n            \n            \n                \nsetSelectedImg(src: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/channel-selection.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                src\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setselectedReaction\n                        \n                    \n                \n            \n            \n                \nsetselectedReaction(reactions: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/channel-selection.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reactions\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ChannelOpenVariable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : 'channel'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/channel-selection.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedChannel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/services/channel-selection.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedChannelIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/channel-selection.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedImg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/services/channel-selection.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedReaction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/services/channel-selection.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChannelSelectionService {\n  private selectedChannel = new BehaviorSubject('');\n  private selectedReaction = new BehaviorSubject('');\n  private selectedImg = new BehaviorSubject('');\n  ChannelOpenVariable: any = 'channel';\n  selectedChannelIndex: any;\n  constructor() {}\n\n  // Getter for selectedChannel as an Observable\n  getSelectedChannel() {\n    return this.selectedChannel.asObservable();\n  }\n\n  getselectedReaction() {\n    return this.selectedReaction.asObservable();\n  }\n\n  getselectedIMG() {\n    return this.selectedImg.asObservable();\n  }\n\n  isChannelOpen() {\n    return this.ChannelOpenVariable;\n  }\n\n  openChannel() {\n    this.ChannelOpenVariable = 'channel';\n  }\n\n  openDirectMessage() {\n    this.ChannelOpenVariable = 'directMessage';\n  }\n\n  openNewMessage() {\n    this.ChannelOpenVariable = 'newMessage';\n  }\n\n  closeChannel() {\n    this.ChannelOpenVariable = false;\n  }\n\n  setSelectedChannel(channel: string): void {\n    this.selectedChannel.next(channel);\n  }\n\n  setSelectedImg(src: any): void {\n    this.selectedImg.next(src);\n  }\n\n  setselectedReaction(reactions: string): void {\n    this.selectedReaction.next(reactions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChannelUserlistComponent.html":{"url":"components/ChannelUserlistComponent.html","title":"component - ChannelUserlistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChannelUserlistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/channel-userlist/channel-userlist.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-channel-userlist\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./channel-userlist.component.scss,./channel-userlist-responsive.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./channel-userlist.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allUser\n                            \n                            \n                                authService\n                            \n                            \n                                channelInfo\n                            \n                            \n                                    Public\n                                channelSelectionService\n                            \n                            \n                                    Public\n                                chatAreaService\n                            \n                            \n                                currentChannel\n                            \n                            \n                                currentChannelId\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUserToChannel\n                            \n                            \n                                closeDialog\n                            \n                            \n                                getUser\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                notCloseDialog\n                            \n                            \n                                openUserProfil\n                            \n                            \n                                setOpenUser\n                            \n                            \n                                subChannels\n                            \n                            \n                                subUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(channelSelectionService: ChannelSelectionService, firestore: Firestore, chatAreaService: ChatAreaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/channel-userlist/channel-userlist.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channelSelectionService\n                                                  \n                                                        \n                                                                        ChannelSelectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatAreaService\n                                                  \n                                                        \n                                                                        ChatAreaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUserToChannel\n                        \n                    \n                \n            \n            \n                \naddUserToChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/channel-userlist/channel-userlist.component.ts:186\n                        \n                    \n\n\n            \n                \n                        Opens the dialog for adding a user to the channel.\n\nSets addUserFromHeaderToChannelOpen to true to display the add user dialog.\nCalls closeDialog to ensure any existing dialogs are closed.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/channel-userlist/channel-userlist.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Closes the user list dialog.\n\nSets openUserList to false to hide the user list dialog.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(uid: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/channel-userlist/channel-userlist.component.ts:129\n                        \n                    \n\n\n            \n                \n                        Retrieves a user object by UID from the list of all users.\n\nIterates through the allUser array to find a user with the matching UID.\nReturns the user object if a match is found; otherwise, returns an object\nwith name set to undefined.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe UID of the user to be retrieved.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The user object if found, or an object with name set to undefined if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/channel-userlist/channel-userlist.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Initializes the component after the view has been fully initialized.\n\nSubscribes to the selected channel changes from channelSelectionService.\nUpdates currentChannelId with the selected channel.\nCalls subUser and subChannels to set up user and channel subscriptions.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notCloseDialog\n                        \n                    \n                \n            \n            \n                \nnotCloseDialog(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/channel-userlist/channel-userlist.component.ts:173\n                        \n                    \n\n\n            \n                \n                        Prevents the dialog from closing when an event occurs.\n\nStops the propagation of the event to prevent the dialog from closing.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event object that triggered the function.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserProfil\n                        \n                    \n                \n            \n            \n                \nopenUserProfil(i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/channel-userlist/channel-userlist.component.ts:203\n                        \n                    \n\n\n            \n                \n                        Opens the user profile dialog for a specified user.\n\nSets userProfilOpen to true to display the user profile dialog.\nUpdates activeUserProfil, activeUser, activeEmail, activeImage,\nand activeUid with the corresponding values from the channel's user data.\nCalls closeDialog to ensure any existing dialogs are closed.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe index of the user whose profile is to be opened.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOpenUser\n                        \n                    \n                \n            \n            \n                \nsetOpenUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/channel-userlist/channel-userlist.component.ts:148\n                        \n                    \n\n\n            \n                \n                        Sets the currently open user based on the authentication service.\n\nUpdates the user property with the UID of the current user\nobtained from the authService.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subChannels\n                        \n                    \n                \n            \n            \n                \nsubChannels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/channel-userlist/channel-userlist.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Subscribes to the channels collection in Firestore and updates the current channel.\n\nQueries the Channels collection with a limit of 1000 documents.\nListens for changes in the channels collection using onSnapshot.\nIterates through the channel documents, updating currentChannel\nif the channel ID matches currentChannelId.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subUser\n                        \n                    \n                \n            \n            \n                \nsubUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/channel-userlist/channel-userlist.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Subscribes to the users collection in Firestore and updates the user list.\n\nQueries the Users collection with a limit of 1000 documents.\nListens for changes in the users collection using onSnapshot.\nIterates through the user documents, pushing each user object into allUser\nafter processing it with setNoteObjectUser.\nCalls setOpenUser to handle any updates related to the user list.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main/channel-userlist/channel-userlist.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/channel-userlist/channel-userlist.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SidebarService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/channel-userlist/channel-userlist.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelSelectionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelSelectionService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/channel-userlist/channel-userlist.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chatAreaService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatAreaService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/channel-userlist/channel-userlist.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/channel-userlist/channel-userlist.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentChannelId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main/channel-userlist/channel-userlist.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/channel-userlist/channel-userlist.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { SidebarService } from '../../services/sidebar.service';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { ChannelSelectionService } from '../../services/channel-selection.service';\nimport {\n  Firestore,\n  addDoc,\n  collection,\n  deleteDoc,\n  deleteField,\n  doc,\n  getDoc,\n  getDocs,\n  limit,\n  onSnapshot,\n  query,\n  setDoc,\n  updateDoc,\n} from '@angular/fire/firestore';\nimport { ChatAreaService } from '../../services/chat-area.service';\n\n@Component({\n  selector: 'app-channel-userlist',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './channel-userlist.component.html',\n  styleUrls: [\n    './channel-userlist.component.scss',\n    './channel-userlist-responsive.component.scss',\n  ],\n})\nexport class ChannelUserlistComponent {\n  channelInfo = inject(SidebarService);\n  authService = inject(AuthService);\n  currentChannelId: any = '';\n  allUser: any = [];\n  currentChannel: any;\n  user: any;\n\n  constructor(\n    public channelSelectionService: ChannelSelectionService,\n    private firestore: Firestore,\n    public chatAreaService: ChatAreaService\n  ) { }\n\n  /**\n * Initializes the component after the view has been fully initialized.\n *\n * @void\n *\n * @description\n * - Subscribes to the selected channel changes from `channelSelectionService`.\n * - Updates `currentChannelId` with the selected channel.\n * - Calls `subUser` and `subChannels` to set up user and channel subscriptions.\n */\n  ngAfterViewInit(): void {\n    this.channelSelectionService.getSelectedChannel().subscribe((channel) => {\n      this.currentChannelId = channel;\n      this.subUser();\n      this.subChannels();\n    });\n  }\n\n  /**\n * Subscribes to the users collection in Firestore and updates the user list.\n *\n * @void\n *\n * @description\n * - Queries the `Users` collection with a limit of 1000 documents.\n * - Listens for changes in the users collection using `onSnapshot`.\n * - Iterates through the user documents, pushing each user object into `allUser` \n *   after processing it with `setNoteObjectUser`.\n * - Calls `setOpenUser` to handle any updates related to the user list.\n */\n  subUser() {\n    const q = query(collection(this.firestore, 'Users'), limit(1000));\n    onSnapshot(q, (list) => {\n      this.allUser = [];\n      list.forEach((element) => {\n        this.allUser.push(\n          this.chatAreaService.setNoteObjectUser(element.data(), element.id)\n        );\n      });\n      this.setOpenUser();\n    });\n  }\n\n  /**\n * Subscribes to the channels collection in Firestore and updates the current channel.\n *\n * @void\n *\n * @description\n * - Queries the `Channels` collection with a limit of 1000 documents.\n * - Listens for changes in the channels collection using `onSnapshot`.\n * - Iterates through the channel documents, updating `currentChannel` \n *   if the channel ID matches `currentChannelId`.\n */\n  subChannels() {\n    const q = query(collection(this.firestore, 'Channels'), limit(1000));\n    onSnapshot(q, (list) => {\n      let channel: any;\n      list.forEach((element) => {\n        channel = this.chatAreaService.setNoteChannel(\n          element.data(),\n          element.id\n        );\n        if (channel.id == this.currentChannelId) {\n          this.currentChannel = channel;\n        }\n      });\n    });\n  }\n\n  /**\n * Retrieves a user object by UID from the list of all users.\n *\n * @param {any} uid - The UID of the user to be retrieved.\n * @returns {object} The user object if found, or an object with `name` set to undefined if not found.\n *\n * @description\n * - Iterates through the `allUser` array to find a user with the matching UID.\n * - Returns the user object if a match is found; otherwise, returns an object \n *   with `name` set to undefined.\n */\n  getUser(uid: any) {\n    for (let i = 0; i \n    \n\n    \n        \n  \n    \n      Mitglieder\n      \n    \n    \n      \n        \n          \n          @if(channelInfo.GlobalChannelUids[channelInfo.currentChannelNumber][i]\n          == authService.currentUserSignal()?.uId){\n          {{ authService.currentUserSignal()?.name }}\n          }@else{\n          {{ getUser(userUid).name }}\n          } @if(authService.currentUserSignal()?.uId == userUid ||\n          this.channelInfo.onlineUserUidList.includes(userUid)){\n          \n          }@else {\n          \n          }\n        \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./channel-userlist.component.scss\n                \n                .channel-userlist-container {\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.4);\n    position: fixed;\n    left: 0;\n    top: 0;\n    z-index: 10;\n}\n\n.display-flex {\n    display: flex;\n}\n\n.display-none {\n    display: none;\n}\n\n.channel-userlist-dialog {\n    width: 415px;\n    position: absolute;\n    top: 215px;\n    right: 130px;\n    background-color: white;\n    padding: 40px;\n    border-radius: 30px 0px 30px 30px;\n    gap: 20px;\n    box-shadow: 0px 6px 10px 0px rgba(0, 0, 0, 0.2);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n\n.userlist {\n    width: 100%;\n    max-height: 250px;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n}\n\n.dialog-title-container {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.dialog-title {\n    font-weight: 700;\n}\n\n.close-button {\n    width: 40px;\n    height: 40px;\n    cursor: pointer;\n    background-image: url('../../../assets/img/create-channel/close_button.png');\n    &:hover {\n        background-image: url('../../../assets/img/create-channel/close_button_hover.png');\n    }\n}\n\n.selected-img {\n    height: 40px;\n    width: 40px;\n    border-radius: 80px;\n    margin-right: 10px;\n}\n\n.user {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    margin-left: 20px;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    padding: 6px 16px 6px 16px;\n    border-radius: 30px;\n    font-weight: 400;\n    cursor: pointer;\n    &:hover {\n        background-color: #ECEEFE;\n    }\n}\n\n.add-user-container {\n    width: 274px;\n    height: 56px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    background-image: url('../../../assets/img/header/add-user.png');\n    &:hover {\n        background-image: url('../../../assets/img/header/add-user-hover.png');\n    }\n}\n\n.online-icon {\n    position: absolute;\n    top : 35px;\n    left: 47px;\n    width: 10px;\n    height: 10px;\n}\n                \n                    ./channel-userlist-responsive.component.scss\n                \n                @media(max-width: 1000px) {\n    .channel-userlist-dialog {\n        top: 170px;\n        left: calc(50vw - 248px);\n    }\n}\n\n@media(max-width: 495px) {\n    .channel-userlist-dialog {\n        width: calc(100vw - 60px);\n        left: 0;\n        margin: 0 auto;\n        right: 0;\n        padding: 20px;\n    }\n\n    .userlist,\n    .dialog-title-container {\n        width: calc(100vw - 80px);\n        transform: translateX(-20px);\n    }\n\n    .add-user-container {\n        width: 100%;\n        justify-content: center;\n        background-repeat: no-repeat;\n    }\n}\n\n@media(max-width: 375px) {\n    .channel-userlist-dialog {\n        top: 85px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Mitglieder                                                @if(channelInfo.GlobalChannelUids[channelInfo.currentChannelNumber][i]          == authService.currentUserSignal()?.uId){          {{ authService.currentUserSignal()?.name }}          }@else{          {{ getUser(userUid).name }}          } @if(authService.currentUserSignal()?.uId == userUid ||          this.channelInfo.onlineUserUidList.includes(userUid)){                    }@else {                    }                        '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChannelUserlistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatAreaService.html":{"url":"injectables/ChatAreaService.html","title":"injectable - ChatAreaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChatAreaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/chat-area.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDate\n                            \n                            \n                                getDate\n                            \n                            \n                                getFormattedTime\n                            \n                            \n                                getMonthName\n                            \n                            \n                                getReactionCount\n                            \n                            \n                                hasReaction\n                            \n                            \n                                hasUserReacted\n                            \n                            \n                                isItToday\n                            \n                            \n                                setNoteChannel\n                            \n                            \n                                setNoteObject\n                            \n                            \n                                setNoteObjectUser\n                            \n                            \n                                splitWords\n                            \n                            \n                                    Async\n                                updateMessageVariable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/chat-area.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatDate\n                        \n                    \n                \n            \n            \n                \nformatDate(timestamp: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/chat-area.service.ts:202\n                        \n                    \n\n\n            \n                \n                        Formats a timestamp into a string representation of the date.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                timestamp\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe timestamp to format.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The formatted date string in 'DD.MM.YYYY' format.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDate\n                        \n                    \n                \n            \n            \n                \ngetDate(timestamp: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/chat-area.service.ts:182\n                        \n                    \n\n\n            \n                \n                        Gets a human-readable date string based on the provided timestamp.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                timestamp\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe timestamp to convert.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A string indicating if the date is today or formatted date.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormattedTime\n                        \n                    \n                \n            \n            \n                \ngetFormattedTime(hour: any, minute: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/chat-area.service.ts:118\n                        \n                    \n\n\n            \n                \n                        Formats the given hour and minute into a readable time string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                hour\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe hour to format.\n\n\n                                            \n                                        \n                                        \n                                                minute\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe minute to format.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The formatted time string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMonthName\n                        \n                    \n                \n            \n            \n                \ngetMonthName(monthNumber: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/chat-area.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Retrieves the name of the month for a given month number.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                monthNumber\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe month number (1-12).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The name of the month.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReactionCount\n                        \n                    \n                \n            \n            \n                \ngetReactionCount(message: any, reactionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/chat-area.service.ts:239\n                        \n                    \n\n\n            \n                \n                        Gets the count of reactions of a specified type on the message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message object to check.\n\n\n                                            \n                                        \n                                        \n                                                reactionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the reaction to count.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The count of reactions.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReaction\n                        \n                    \n                \n            \n            \n                \nhasReaction(message: any, reactionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/chat-area.service.ts:218\n                        \n                    \n\n\n            \n                \n                        Checks if the specified reaction exists in the message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message object to check.\n\n\n                                            \n                                        \n                                        \n                                                reactionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the reaction to check for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the reaction exists, otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasUserReacted\n                        \n                    \n                \n            \n            \n                \nhasUserReacted(message: any, reactionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/chat-area.service.ts:228\n                        \n                    \n\n\n            \n                \n                        Checks if the current user has reacted to the message with the specified reaction.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message object to check.\n\n\n                                            \n                                        \n                                        \n                                                reactionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the reaction to check for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the user has reacted, otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isItToday\n                        \n                    \n                \n            \n            \n                \nisItToday(message: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/chat-area.service.ts:266\n                        \n                    \n\n\n            \n                \n                        Checks if the message date is today.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message object containing date details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the message date is not today, otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNoteChannel\n                        \n                    \n                \n            \n            \n                \nsetNoteChannel(obj: any, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/chat-area.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Sets up a note channel object with the provided properties.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe object containing channel details.\n\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe unique identifier for the channel.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { id: string; channelCreatorUid: any; creationsDate: any; description: any; images: any; name: any; uids: any; }\n\n                        \n                            \n                                The structured note channel object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNoteObject\n                        \n                    \n                \n            \n            \n                \nsetNoteObject(obj: any, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/chat-area.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Sets up a note object with the provided properties.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe object containing note details.\n\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe unique identifier for the note.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         { id: string; uid: any; message: any; weekday: any; year: any; month: any; day: any; hour: any; minute: any; seconds: any; milliseconds: any; user: any; fileUrl: any; fileName: any; threadCount: any; lastThreadMessage: any; ... 7 more ...; shushingFace: any; }\n\n                        \n                            \n                                The structured note object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNoteObjectUser\n                        \n                    \n                \n            \n            \n                \nsetNoteObjectUser(obj: any, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/chat-area.service.ts:72\n                        \n                    \n\n\n            \n                \n                        Sets up a note object for a user with the provided properties.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe object containing user details.\n\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe unique identifier for the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { email: any; image: any; name: any; uid: any; }\n\n                        \n                            \n                                The structured user object for the note.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        splitWords\n                        \n                    \n                \n            \n            \n                \nsplitWords(input: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/chat-area.service.ts:252\n                        \n                    \n\n\n            \n                \n                        Counts the number of words in a given input string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe input string to analyze.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The number of words in the input.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMessageVariable\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMessageVariable(messageId: any, newValue: any, variableName: any, src: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/chat-area.service.ts:132\n                        \n                    \n\n\n            \n                \n                        Updates a specified variable in a message document in Firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                messageId\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe identifier of the message.\n\n\n                                            \n                                        \n                                        \n                                                newValue\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be updated.\n\n\n                                            \n                                        \n                                        \n                                                variableName\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the variable to update.\n\n\n                                            \n                                        \n                                        \n                                                src\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe source path to the Firestore document.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                A promise indicating the completion of the update.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/chat-area.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { doc, getDoc, updateDoc } from 'firebase/firestore';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChatAreaService {\n  authService = inject(AuthService);\n\n  constructor() {}\n\n  /**\n   * Sets up a note object with the provided properties.\n   * @param {any} obj - The object containing note details.\n   * @param {string} id - The unique identifier for the note.\n   * @returns {Object} The structured note object.\n   */\n  setNoteObject(obj: any, id: string) {\n    return {\n      id: id,\n      uid: obj.uid || '',\n      message: obj.message || '',\n      weekday: obj.weekday || '',\n      year: obj.year || '',\n      month: obj.month || '',\n      day: obj.day || '',\n      hour: obj.hour || '',\n      minute: obj.minute || '',\n      seconds: obj.seconds || '',\n      milliseconds: obj.milliseconds || '',\n      user: obj.user || '',\n      fileUrl: obj.fileUrl || '',\n      fileName: obj.fileName || '',\n      threadCount: obj.threadCount || '',\n      lastThreadMessage: obj.lastThreadMessage || '',\n      checkMark: obj.checkMark || '',\n      handshake: obj.handshake || '',\n      thumbsUp: obj.thumbsUp || '',\n      thumbsDown: obj.thumbsDown || '',\n      rocket: obj.rocket || '',\n      nerdFace: obj.nerdFace || '',\n      noted: obj.noted || '',\n      shushingFace: obj.shushingFace || '',\n    };\n  }\n\n  /**\n   * Sets up a note channel object with the provided properties.\n   * @param {any} obj - The object containing channel details.\n   * @param {string} id - The unique identifier for the channel.\n   * @returns {Object} The structured note channel object.\n   */\n  setNoteChannel(obj: any, id: string) {\n    return {\n      id: id,\n      channelCreatorUid: obj.channelCreatorUid || '',\n      creationsDate: obj.creationsDate || '',\n      description: obj.description || '',\n      images: obj.images || '',\n      name: obj.name || '',\n      uids: obj.uids || '',\n    };\n  }\n\n  /**\n   * Sets up a note object for a user with the provided properties.\n   * @param {any} obj - The object containing user details.\n   * @param {string} id - The unique identifier for the user.\n   * @returns {Object} The structured user object for the note.\n   */\n  setNoteObjectUser(obj: any, id: string) {\n    return {\n      email: obj.email || '',\n      image: obj.image || '',\n      name: obj.name || '',\n      uid: obj.uid || '',\n    };\n  }\n\n  /**\n   * Retrieves the name of the month for a given month number.\n   * @param {number} monthNumber - The month number (1-12).\n   * @returns {string} The name of the month.\n   * @throws Will throw an error if the month number is invalid.\n   */\n  getMonthName(monthNumber: number): string {\n    const months: string[] = [\n      'Januar',\n      'Februar',\n      'März',\n      'April',\n      'Mai',\n      'Juni',\n      'Juli',\n      'August',\n      'September',\n      'Oktober',\n      'November',\n      'Dezember',\n    ];\n\n    if (monthNumber  12) {\n      throw new Error(\n        'Ungültige Monatszahl. Bitte geben Sie eine Zahl zwischen 1 und 12 ein.'\n      );\n    }\n\n    return months[monthNumber - 1];\n  }\n\n  /**\n   * Formats the given hour and minute into a readable time string.\n   * @param {any} hour - The hour to format.\n   * @param {any} minute - The minute to format.\n   * @returns {any} The formatted time string.\n   */\n  getFormattedTime(hour: any, minute: any): any {\n    const hours = hour.toString().padStart(2, '0');\n    const minutes = minute.toString().padStart(2, '0');\n    return `${hours}:${minutes} Uhr`;\n  }\n\n  /**\n   * Updates a specified variable in a message document in Firestore.\n   * @param {any} messageId - The identifier of the message.\n   * @param {any} newValue - The new value to be updated.\n   * @param {any} variableName - The name of the variable to update.\n   * @param {any} src - The source path to the Firestore document.\n   * @returns {Promise} A promise indicating the completion of the update.\n   */\n  async updateMessageVariable(\n    messageId: any,\n    newValue: any,\n    variableName: any,\n    src: any\n  ) {\n    const [firestoreInstance, ...pathSegments] = src;\n\n    const messageRef = doc(firestoreInstance, ...pathSegments);\n    try {\n      // Get the current value of the variable\n      const messageSnapshot = await getDoc(messageRef);\n      if (messageSnapshot.exists()) {\n        // Typisieren des zurückgegebenen Objekts als ein einfaches Dictionary\n        const currentData = messageSnapshot.data() as { [key: string]: any };\n\n        let currentValue = currentData[variableName] || '';\n\n        // Convert currentValue to an array of values\n        let valuesArray = currentValue.split(' ').filter((value: any) => value);\n\n        if (valuesArray.includes(newValue)) {\n          // Remove the newValue if it exists\n          valuesArray = valuesArray.filter((value: any) => value !== newValue);\n        } else {\n          // Append the new value with a space if it doesn't exist\n          valuesArray.push(newValue);\n        }\n\n        // Join the array back to a string\n        const updatedValue = valuesArray.join(' ');\n\n        // Update the document with the new value\n        await updateDoc(messageRef, {\n          [variableName]: updatedValue,\n        });\n        console.log('Document successfully updated!');\n      } else {\n        console.log('No such document!');\n      }\n    } catch (err) {\n      console.error('Error updating document: ', err);\n    }\n  }\n\n  /**\n   * Gets a human-readable date string based on the provided timestamp.\n   * @param {number} timestamp - The timestamp to convert.\n   * @returns {string} A string indicating if the date is today or formatted date.\n   */\n  getDate(timestamp: number) {\n    const givenDate = new Date(timestamp);\n    const today = new Date();\n\n    if (\n      givenDate.getDate() === today.getDate() &&\n      givenDate.getMonth() === today.getMonth() &&\n      givenDate.getFullYear() === today.getFullYear()\n    ) {\n      return 'heute';\n    } else {\n      return 'am ' + this.formatDate(timestamp);\n    }\n  }\n\n  /**\n   * Formats a timestamp into a string representation of the date.\n   * @param {number} timestamp - The timestamp to format.\n   * @returns {string} The formatted date string in 'DD.MM.YYYY' format.\n   */\n  formatDate(timestamp: number): string {\n    const givenDate = new Date(timestamp);\n\n    const day = String(givenDate.getDate()).padStart(2, '0'); // Tag mit führender Null\n    const month = String(givenDate.getMonth() + 1).padStart(2, '0'); // Monat mit führender Null (getMonth ist nullbasiert, daher +1)\n    const year = givenDate.getFullYear(); // Jahr\n\n    return `${day}.${month}.${year}`;\n  }\n\n  /**\n   * Checks if the specified reaction exists in the message.\n   * @param {any} message - The message object to check.\n   * @param {string} reactionName - The name of the reaction to check for.\n   * @returns {boolean} True if the reaction exists, otherwise false.\n   */\n  hasReaction(message: any, reactionName: string): boolean {\n    return message[reactionName] && message[reactionName].length > 0;\n  }\n\n  /**\n   * Checks if the current user has reacted to the message with the specified reaction.\n   * @param {any} message - The message object to check.\n   * @param {string} reactionName - The name of the reaction to check for.\n   * @returns {boolean} True if the user has reacted, otherwise false.\n   */\n  hasUserReacted(message: any, reactionName: string): boolean {\n    const userId = this.authService.currentUserSignal()?.uId;\n    return message[reactionName]?.split(' ').includes(userId);\n  }\n\n  /**\n   * Gets the count of reactions of a specified type on the message.\n   * @param {any} message - The message object to check.\n   * @param {string} reactionName - The name of the reaction to count.\n   * @returns {number} The count of reactions.\n   */\n  getReactionCount(message: any, reactionName: string): number {\n    const reactions = message[reactionName];\n    if (reactions) {\n      return reactions.split(' ').length;\n    }\n    return 0;\n  }\n\n  /**\n   * Counts the number of words in a given input string.\n   * @param {string} input - The input string to analyze.\n   * @returns {number} The number of words in the input.\n   */\n  splitWords(input: string) {\n    if (input) {\n      let words = input.trim().split(/\\s+/).length;\n      return words;\n    } else {\n      return 0;\n    }\n  }\n\n  /**\n   * Checks if the message date is today.\n   * @param {any} message - The message object containing date details.\n   * @returns {boolean} True if the message date is not today, otherwise false.\n   */\n  isItToday(message: any) {\n    const now = new Date();\n    if (\n      message.year == now.getFullYear() &&\n      message.month == now.getMonth() + 1 &&\n      message.day == now.getDate()\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DirectMessage.html":{"url":"classes/DirectMessage.html","title":"class - DirectMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DirectMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/direct-message.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkMark\n                            \n                            \n                                communicationType\n                            \n                            \n                                    Optional\n                                date\n                            \n                            \n                                day\n                            \n                            \n                                fileName\n                            \n                            \n                                fileUrl\n                            \n                            \n                                handshake\n                            \n                            \n                                hour\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                message\n                            \n                            \n                                milliseconds\n                            \n                            \n                                minute\n                            \n                            \n                                month\n                            \n                            \n                                nerdFace\n                            \n                            \n                                noted\n                            \n                            \n                                rocket\n                            \n                            \n                                seconds\n                            \n                            \n                                shushingFace\n                            \n                            \n                                    Optional\n                                threadCount\n                            \n                            \n                                thumbsDown\n                            \n                            \n                                thumbsUp\n                            \n                            \n                                uid\n                            \n                            \n                                user\n                            \n                            \n                                weekday\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj?: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/direct-message.class.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        checkMark\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        communicationType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        day\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handshake\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        milliseconds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        month\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nerdFace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rocket\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seconds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shushingFace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        threadCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thumbsDown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thumbsUp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weekday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/direct-message.class.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DirectMessage {\n  id?: string;\n  uid: any;\n  date?: boolean;\n  message: string;\n  weekday: string;\n  year: number;\n  month: number;\n  day: number;\n  hour: number;\n  minute: number;\n  seconds: number;\n  milliseconds: number;\n  user: any;\n  fileUrl: any;\n  fileName: any;\n  threadCount?: any;\n  checkMark: any;\n  handshake: any;\n  thumbsUp: any;\n  thumbsDown: any;\n  rocket: any;\n  nerdFace: any;\n  noted: any;\n  shushingFace: any;\n  communicationType: any;\n\n  constructor(obj?: any) {\n    this.id = obj ? obj.id : '';\n    this.uid = obj ? obj.uid : '';\n    this.date = obj ? obj.date : '';\n    this.message = obj ? obj.message : '';\n    this.weekday = obj ? obj.weekday : '';\n    this.year = obj ? obj.year : '';\n    this.month = obj ? obj.month : '';\n    this.day = obj ? obj.day : '';\n    this.hour = obj ? obj.hour : '';\n    this.minute = obj ? obj.minute : '';\n    this.seconds = obj ? obj.seconds : '';\n    this.milliseconds = obj ? obj.milliseconds : '';\n    this.user = obj ? obj.user : '';\n    this.fileUrl = obj ? obj.fileUrl : '';\n    this.fileName = obj ? obj.fileName : '';\n    this.threadCount = obj ? obj.threadCount : '';\n    this.checkMark = obj ? obj.checkMark : '';\n    this.handshake = obj ? obj.handshake : '';\n    this.thumbsUp = obj ? obj.thumbsUp : '';\n    this.thumbsDown = obj ? obj.thumbsDown : '';\n    this.rocket = obj ? obj.rocket : '';\n    this.nerdFace = obj ? obj.nerdFace : '';\n    this.noted = obj ? obj.noted : '';\n    this.shushingFace = obj ? obj.shushingFace : '';\n    this.communicationType = obj ? obj.communicationType : '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DirectMessageSelectionService.html":{"url":"injectables/DirectMessageSelectionService.html","title":"injectable - DirectMessageSelectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DirectMessageSelectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/direct-message-selection.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                selectedUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSelectedChannel\n                            \n                            \n                                setSelectedChannel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/direct-message-selection.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedChannel\n                        \n                    \n                \n            \n            \n                \ngetSelectedChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/direct-message-selection.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedChannel\n                        \n                    \n                \n            \n            \n                \nsetSelectedChannel(channel: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/direct-message-selection.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/direct-message-selection.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DirectMessageSelectionService {\n  private selectedUser = new BehaviorSubject(null); // Initialer Wert kann auch null sein\n\n  constructor() {}\n\n  // Getter für selectedChannel als Observable\n  getSelectedChannel() {\n    return this.selectedUser.asObservable();\n  }\n\n  // Setter für selectedChannel\n  setSelectedChannel(channel: any) {\n    this.selectedUser.next(channel);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DirectMessagesComponent.html":{"url":"components/DirectMessagesComponent.html","title":"component - DirectMessagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DirectMessagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/direct-messages/direct-messages/direct-messages.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-direct-messages\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                DirectMessagesHeaderComponent\n                                DirectMessagesChatAreaComponent\n                                DirectMessagesMessageInputComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./direct-messages.component.html\n            \n\n\n\n            \n                styleUrl\n                ./direct-messages.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                directMessageSelectionService\n                            \n                            \n                                responsiveService\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(directMessageSelectionService: DirectMessageSelectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/direct-messages/direct-messages/direct-messages.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        directMessageSelectionService\n                                                  \n                                                        \n                                                                        DirectMessageSelectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/direct-messages/direct-messages/direct-messages.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUser\n                        \n                    \n                \n            \n            \n                \nsetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/direct-messages/direct-messages/direct-messages.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Sets the user based on the currently selected channel.\nThis method subscribes to the observable from directMessageSelectionService.getSelectedChannel(),\nwhich emits the currently selected channel information. When a new value is emitted,\nit assigns the emitted value to the user property.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        directMessageSelectionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DirectMessageSelectionService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/direct-messages/direct-messages/direct-messages.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        responsiveService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ResponsiveService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/direct-messages/direct-messages/direct-messages.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/direct-messages/direct-messages/direct-messages.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { DirectMessageSelectionService } from '../../../services/direct-message-selection.service';\nimport { DirectMessagesHeaderComponent } from '../direct-messages-header/direct-messages-header.component';\nimport { DirectMessagesChatAreaComponent } from '../direct-messages-chat-area/direct-messages-chat-area.component';\nimport { DirectMessagesMessageInputComponent } from '../direct-messages-message-input/direct-messages-message-input.component';\nimport { ResponsiveService } from '../../../services/responsive.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-direct-messages',\n  standalone: true,\n  imports: [\n    DirectMessagesHeaderComponent,\n    DirectMessagesChatAreaComponent,\n    DirectMessagesMessageInputComponent,\n    CommonModule,\n  ],\n  templateUrl: './direct-messages.component.html',\n  styleUrl: './direct-messages.component.scss',\n})\nexport class DirectMessagesComponent implements OnInit {\n  user: any;\n  responsiveService = inject(ResponsiveService);\n\n  constructor(\n    public directMessageSelectionService: DirectMessageSelectionService\n  ) {}\n\n  ngOnInit(): void {\n    this.setUser();\n  }\n\n  /**\n   * Sets the user based on the currently selected channel.\n   *\n   * This method subscribes to the observable from `directMessageSelectionService.getSelectedChannel()`,\n   * which emits the currently selected channel information. When a new value is emitted,\n   * it assigns the emitted value to the `user` property.\n   *\n   */\n  setUser() {\n    this.directMessageSelectionService\n      .getSelectedChannel()\n      .subscribe((value) => {\n        this.user = value;\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DirectMessagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DirectMessagesHeaderComponent.html":{"url":"components/DirectMessagesHeaderComponent.html","title":"component - DirectMessagesHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DirectMessagesHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/direct-messages/direct-messages-header/direct-messages-header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-direct-messages-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./direct-messages-header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./direct-messages-header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allUser\n                            \n                            \n                                authService\n                            \n                            \n                                channelInfo\n                            \n                            \n                                    Public\n                                directMessageSelectionService\n                            \n                            \n                                imageUrl\n                            \n                            \n                                messageUser\n                            \n                            \n                                user\n                            \n                            \n                                userName\n                            \n                            \n                                userUid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setNoteObjectUser\n                            \n                            \n                                setOpenUser\n                            \n                            \n                                setUser\n                            \n                            \n                                subUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: Firestore, directMessageSelectionService: DirectMessageSelectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/direct-messages/direct-messages-header/direct-messages-header.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        directMessageSelectionService\n                                                  \n                                                        \n                                                                        DirectMessageSelectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProfile\n                        \n                    \n                \n            \n            \n                \ngetProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/direct-messages/direct-messages-header/direct-messages-header.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Retrieves the profile of the currently selected user.\nUpdates the image URL, username, and user UID based on the selected user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/direct-messages/direct-messages-header/direct-messages-header.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNoteObjectUser\n                        \n                    \n                \n            \n            \n                \nsetNoteObjectUser(obj: any, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/direct-messages/direct-messages-header/direct-messages-header.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Creates a user object from the provided data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user data object.\n\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         object\n\n                        \n                            \n                                \nThe structured user object with email, image, name, and uid.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOpenUser\n                        \n                    \n                \n            \n            \n                \nsetOpenUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/direct-messages/direct-messages-header/direct-messages-header.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Sets the current user ID from the authentication service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUser\n                        \n                    \n                \n            \n            \n                \nsetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/direct-messages/direct-messages-header/direct-messages-header.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Subscribes to the selected channel for direct messages.\nUpdates the current message user and retrieves the user's profile.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subUser\n                        \n                    \n                \n            \n            \n                \nsubUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/direct-messages/direct-messages-header/direct-messages-header.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Subscribes to user updates from the Firestore database.\nFetches a list of users and updates the local user list.\nThe list is limited to 1000 users.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main/direct-messages/direct-messages-header/direct-messages-header.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/direct-messages/direct-messages-header/direct-messages-header.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SidebarService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/direct-messages/direct-messages-header/direct-messages-header.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        directMessageSelectionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DirectMessageSelectionService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/direct-messages/direct-messages-header/direct-messages-header.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/direct-messages/direct-messages-header/direct-messages-header.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/direct-messages/direct-messages-header/direct-messages-header.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/direct-messages/direct-messages-header/direct-messages-header.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/direct-messages/direct-messages-header/direct-messages-header.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userUid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/direct-messages/direct-messages-header/direct-messages-header.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  inject,\n  OnInit,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport {\n  Firestore,\n  addDoc,\n  collection,\n  deleteDoc,\n  deleteField,\n  doc,\n  getDoc,\n  getDocs,\n  limit,\n  onSnapshot,\n  query,\n  setDoc,\n  updateDoc,\n} from '@angular/fire/firestore';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, RouterOutlet } from '@angular/router';\nimport { ThreadService } from '../../../services/thread.service';\nimport { ChannelSelectionService } from '../../../services/channel-selection.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { PickerComponent } from '@ctrl/ngx-emoji-mart';\nimport { DirectMessageSelectionService } from '../../../services/direct-message-selection.service';\nimport { DirectMessage } from '../../../../models/direct-message.class';\nimport { SidebarService } from '../../../services/sidebar.service';\n\n@Component({\n  selector: 'app-direct-messages-header',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './direct-messages-header.component.html',\n  styleUrl: './direct-messages-header.component.scss',\n})\nexport class DirectMessagesHeaderComponent implements OnInit {\n  authService = inject(AuthService);\n  channelInfo = inject(SidebarService);\n  allUser: any = [];\n  messageUser: any;\n  imageUrl: any;\n  userName: any;\n  userUid: any;\n  user: any;\n  constructor(\n    private firestore: Firestore,\n    public directMessageSelectionService: DirectMessageSelectionService\n  ) {}\n\n  ngOnInit(): void {\n    this.subUser();\n    this.setOpenUser();\n  }\n\n  /**\n   * Sets the current user ID from the authentication service.\n   */\n  setOpenUser() {\n    this.user = this.authService.currentUserSignal()?.uId;\n  }\n\n  /**\n   * Subscribes to user updates from the Firestore database.\n   * Fetches a list of users and updates the local user list.\n   * The list is limited to 1000 users.\n   */\n  subUser() {\n    const q = query(collection(this.firestore, 'Users'), limit(1000));\n    onSnapshot(q, (list) => {\n      this.allUser = [];\n      list.forEach((element) => {\n        this.allUser.push(this.setNoteObjectUser(element.data(), element.id));\n      });\n      this.setUser();\n    });\n  }\n\n  /**\n   * Subscribes to the selected channel for direct messages.\n   * Updates the current message user and retrieves the user's profile.\n   */\n  setUser() {\n    this.directMessageSelectionService\n      .getSelectedChannel()\n      .subscribe((value) => {\n        this.messageUser = value;\n        this.getProfile();\n      });\n  }\n\n  /**\n   * Retrieves the profile of the currently selected user.\n   * Updates the image URL, username, and user UID based on the selected user.\n   */\n  getProfile() {\n    for (let i = 0; i \n    \n\n    \n        \n  \n    \n    @if(authService.currentUserSignal()?.uId == userUid ||\n    this.channelInfo.onlineUserUidList.includes(userUid)){\n    \n    }@else {\n    \n    }\n    {{ userName }}\n  \n\n  \n    \n    \n    {{ userName }} (Du)\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          @if(authService.currentUserSignal()?.uId == userUid ||    this.channelInfo.onlineUserUidList.includes(userUid)){        }@else {        }    {{ userName }}                {{ userName }} (Du)  '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DirectMessagesHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EditChannelService.html":{"url":"injectables/EditChannelService.html","title":"injectable - EditChannelService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EditChannelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/edit-channel.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                editChannel\n                            \n                            \n                                    Private\n                                openChannel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOpenChannel\n                            \n                            \n                                isEditChannel\n                            \n                            \n                                setEditChannel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/edit-channel.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOpenChannel\n                        \n                    \n                \n            \n            \n                \ngetOpenChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/edit-channel.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditChannel\n                        \n                    \n                \n            \n            \n                \nisEditChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/edit-channel.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEditChannel\n                        \n                    \n                \n            \n            \n                \nsetEditChannel(edit: boolean, open: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/edit-channel.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                edit\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                open\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/edit-channel.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        openChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/edit-channel.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EditChannelService {\n  private editChannel: boolean = false;\n  private openChannel: any = null;\n\n  constructor() {}\n\n  // Gibt true oder false zurück, je nachdem, ob editChannel true oder false ist\n  isEditChannel(): boolean {\n    return this.editChannel;\n  }\n\n  // Setzt den Wert von editChannel und openChannel\n  setEditChannel(edit: boolean, open: any) {\n    this.editChannel = edit;\n    this.openChannel = open;\n  }\n\n  // Gibt den Wert von openChannel zurück\n  getOpenChannel(): any {\n    return this.openChannel;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProfilComponent.html":{"url":"components/EditProfilComponent.html","title":"component - EditProfilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProfilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/edit-profil/edit-profil.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-profil\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./edit-profil.component.scss,./edit-profil-responsive.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-profil.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                hideOrShowPopUp\n                            \n                            \n                                userOnline\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                editUser\n                            \n                            \n                                notCloseDialog\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/edit-profil/edit-profil.component.ts:24\n                        \n                    \n\n\n            \n                \n                        Closes the profile edit dialog.\nThis method sets the editProfilOpen property to false,\neffectively closing the profile editing pop-up dialog.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/edit-profil/edit-profil.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Opens the user contact form for editing.\nThis method sets the editProfilContactformOpen property\nto true, allowing the user to edit their contact information\nin the profile.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notCloseDialog\n                        \n                    \n                \n            \n            \n                \nnotCloseDialog(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/edit-profil/edit-profil.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Prevents the dialog from closing when an event occurs.\nThis method stops the propagation of the event e, which\nprevents the dialog from being closed unintentionally\nduring specific user interactions.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event object from the user interaction.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/edit-profil/edit-profil.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Sends a message to the user.\nThis method triggers an alert to inform the user that the\nmessage has been sent successfully.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/edit-profil/edit-profil.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideOrShowPopUp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SidebarService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/edit-profil/edit-profil.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userOnline\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main/edit-profil/edit-profil.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { SidebarService } from '../../services/sidebar.service';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-edit-profil',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './edit-profil.component.html',\n  styleUrls: ['./edit-profil.component.scss', './edit-profil-responsive.component.scss']\n})\nexport class EditProfilComponent {\n  hideOrShowPopUp = inject(SidebarService);\n  authService = inject(AuthService);\n  userOnline = false;\n\n  /**\n * Closes the profile edit dialog.\n * \n * This method sets the `editProfilOpen` property to false, \n * effectively closing the profile editing pop-up dialog.\n */\n  closeDialog() {\n    this.hideOrShowPopUp.editProfilOpen = false;\n  }\n\n  /**\n  * Prevents the dialog from closing when an event occurs.\n  * \n  * This method stops the propagation of the event `e`, which \n  * prevents the dialog from being closed unintentionally \n  * during specific user interactions.\n  * \n  * @param {any} e - The event object from the user interaction.\n  */\n  notCloseDialog(e: any) {\n    e.stopPropagation();\n  }\n\n  /**\n  * Opens the user contact form for editing.\n  * \n  * This method sets the `editProfilContactformOpen` property \n  * to true, allowing the user to edit their contact information \n  * in the profile.\n  */\n  editUser() {\n    this.hideOrShowPopUp.editProfilContactformOpen = true;\n  }\n\n  /**\n  * Sends a message to the user.\n  * \n  * This method triggers an alert to inform the user that the \n  * message has been sent successfully.\n  */\n  sendMessage() {\n    alert('Message sent');\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            Profil\n            \n        \n        \n            @if (authService.currentUserSignal() == null ) {\n                \n            } @else {\n                \n            }\n            \n        \n        \n            \n                {{authService.currentUserSignal()?.name}}\n                Bearbeiten\n                \n            \n            \n                @if(!userOnline){\n                    \n                    Aktiv\n                }@else {\n                    \n                    Abwesend\n                }\n            \n        \n        \n            \n                \n                E-Mail-Adresse\n            \n            \n                {{authService.currentUserSignal()?.email}}\n            \n        \n        \n            \n            Nachricht\n        \n        \n        -->\n    \n\n    \n\n    \n                \n                    ./edit-profil.component.scss\n                \n                .edit-profil-container {\n    position: fixed;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.4);\n    position: fixed;\n    left: 0;\n    top: 0;\n    z-index: 5;\n}\n\n.dialog {\n    width: 400px;\n    //height: 500px;\n    padding: 35px 30px 35px 30px;\n    gap: 45px;\n    border-radius: 30px 0px 30px 30px;\n    background-color: white;\n    position: absolute;\n    gap: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    top : 100px;\n    right: 40px;\n}\n\n.display-flex {\n    display: flex;\n}\n\n.display-none {\n    display: none;\n}\n\n.header {\n    width: 100%;\n    height: 40px;\n    display: flex;\n    justify-content: space-between;   \n    align-items: center;\n}\n\n.header-title {\n    font-weight: 700;\n}\n\n.close-button {\n    background-image: url('../../../assets/img/create-channel/close_button.png');\n    height: 40px;\n    width: 40px;\n    cursor: pointer;\n    &:hover {\n        background-image: url('../../../assets/img/create-channel/close_button_hover.png');\n    }\n}\n\n.profil-image {\n    width: 200px;\n    height: 200px;\n    border-radius: 500px;\n    object-fit: cover;\n}\n\n.name-container {\n    width: 100%;\n    height: 86px;\n    display: flex;\n    justify-content: space-around;\n    flex-direction: column;\n    align-items: center;\n}\n\n.user-name {\n    font-weight: 700;\n}\n\n.edit {\n    color: rgba(83, 90, 241, 1);\n    cursor: pointer;\n    &:hover {\n        font-weight: 700;\n    }\n}\n\n.name-edit {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    height: 38px;\n    align-items: center;\n}\n\n.online-icon {\n    background-image: url('../../../assets/img/sidebar/Online.png');\n    height: 16px;\n    width: 16px;\n    background-repeat: no-repeat;\n}\n\n.offline-icon {\n    background-image: url('../../../assets/img/sidebar/Offline.png');\n    height: 16px;\n    width: 16px;\n    background-repeat: no-repeat;\n}\n\n.online {\n    width: 100%;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 8px;\n}\n\n.user-online {\n    color: rgba(146, 200, 62, 1);\n\n}\n\n.user-offine {\n    color: rgba(104, 104, 104, 1);\n}\n\n.email-container {\n    width: 100%;\n    height: 70px;\n    display: flex;\n    justify-content: space-between;\n    flex-direction: column;\n}\n\n.email-adress-title {\n    font-weight: 700 !important;\n}\n\n.email-title-container {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    gap: 8px;\n}\n\n.email-adress-container {\n    display: flex;\n    justify-content: flex-start;\n    margin-left: 40px;\n    span {\n        color: rgba(19, 129, 255, 1);\n\n    }\n}\n\n.send-message-button {\n    width: 164px;\n    height: 49px;\n    gap: 10px;\n    border-radius: 50px;\n    background-color: rgba(68, 77, 242, 1);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n}\n\n.message {\n    color: white;\n}\n\n.responsive-edit-icon {\n    display: none;\n}\n\n\n                \n                    ./edit-profil-responsive.component.scss\n                \n                @media(max-width: 1000px){\n    .dialog {\n    border-radius: 30px;\n    top : calc(50vh - 266px);\n    left: calc(50vw - 228px);\n    }\n}\n\n@media(max-width: 500px){\n    .dialog {\n    width: calc(100vw - 100px);\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    }\n\n    .profil-image {\n        width: 180px;\n        height: 180px;\n    }\n\n    .responsive-edit-icon {\n        display: block;\n        background-image: url('../../../assets/img/sidebar/edit.png');\n        width: 24px;\n        height: 24px;\n        &:active {\n            background-image: url('../../../assets/img/sidebar/edit-hover.png');\n        }\n    }\n\n    .edit {\n        display: none;\n    }\n}\n\n@media(max-width: 400px){\n    .dialog {\n        padding: 20px 15px 20px 15px;\n        width: calc(100vw - 80px);\n        }\n\n        .profil-image {\n            width: 150px;\n            height: 150px;\n        }\n\n        .user-name{\n            font-size: 25px;\n        }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Profil                                        @if (authService.currentUserSignal() == null ) {                            } @else {                            }                                                        {{authService.currentUserSignal()?.name}}                Bearbeiten                                                        @if(!userOnline){                                        Aktiv                }@else {                                        Abwesend                }                                                                        E-Mail-Adresse                                        {{authService.currentUserSignal()?.email}}                                                    Nachricht                        -->    '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditProfilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProfilContactformComponent.html":{"url":"components/EditProfilContactformComponent.html","title":"component - EditProfilContactformComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProfilContactformComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/edit-profil-contactform/edit-profil-contactform.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-profil-contactform\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./edit-profil-contactform.component.scss,./edit-profil-contactform-responsive.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-profil-contactform.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                errorMessage\n                            \n                            \n                                fb\n                            \n                            \n                                form\n                            \n                            \n                                hideOrShowPopUp\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                closeDialog\n                            \n                            \n                                closePopup\n                            \n                            \n                                notCloseDialog\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                resetErrorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/edit-profil-contactform/edit-profil-contactform.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Cancels the profile editing process and closes the dialog.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/edit-profil-contactform/edit-profil-contactform.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Closes the profile editing form.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closePopup\n                        \n                    \n                \n            \n            \n                \nclosePopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/edit-profil-contactform/edit-profil-contactform.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notCloseDialog\n                        \n                    \n                \n            \n            \n                \nnotCloseDialog(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/edit-profil-contactform/edit-profil-contactform.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Prevents the dialog from closing when clicking inside the form.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/edit-profil-contactform/edit-profil-contactform.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Handles the form submission to update the user profile.\nValidates the form and calls updateUserData from AuthService to update the user's name and email.\nDisplays success or error messages based on the result.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetErrorMessage\n                        \n                    \n                \n            \n            \n                \nresetErrorMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/edit-profil-contactform/edit-profil-contactform.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/edit-profil-contactform/edit-profil-contactform.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/main/edit-profil-contactform/edit-profil-contactform.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/edit-profil-contactform/edit-profil-contactform.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.nonNullable.group({\n    name: [this.authService.currentUserSignal()?.name ?? '', [\n      Validators.minLength(6),\n      Validators.maxLength(20),\n    ]],\n    email: [this.authService.currentUserSignal()?.email ?? '', [\n      Validators.pattern('[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}'),\n    ]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/main/edit-profil-contactform/edit-profil-contactform.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideOrShowPopUp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SidebarService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/edit-profil-contactform/edit-profil-contactform.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/main/edit-profil-contactform/edit-profil-contactform.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { SidebarService } from '../../services/sidebar.service';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../../services/auth.service';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-edit-profil-contactform',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './edit-profil-contactform.component.html',\n  styleUrls: ['./edit-profil-contactform.component.scss', './edit-profil-contactform-responsive.component.scss']\n})\nexport class EditProfilContactformComponent {\n  authService = inject(AuthService);\n  hideOrShowPopUp = inject(SidebarService);\n  fb = inject(FormBuilder);\n  errorMessage: string | null = null;\n  successMessage: string | null = null;\n\n  form = this.fb.nonNullable.group({\n    name: [this.authService.currentUserSignal()?.name ?? '', [\n      Validators.minLength(6),\n      Validators.maxLength(20),\n    ]],\n    email: [this.authService.currentUserSignal()?.email ?? '', [\n      Validators.pattern('[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}'),\n    ]],\n  });\n\n  /**\n   * Closes the profile editing form.\n   */\n  closeDialog() {\n    this.hideOrShowPopUp.editProfilContactformOpen = false;\n  }\n\n  /**\n   * Prevents the dialog from closing when clicking inside the form.\n   * @param {Event} e - The event object.\n   */\n  notCloseDialog(e: any) {\n    e.stopPropagation(e);\n  }\n\n  /**\n   * Cancels the profile editing process and closes the dialog.\n   */\n  cancel() {\n    this.closeDialog();\n  }\n\n  /**\n   * Handles the form submission to update the user profile.\n   * Validates the form and calls `updateUserData` from `AuthService` to update the user's name and email.\n   * Displays success or error messages based on the result.\n   */\n  async onSubmit() {\n    const { email, name } = this.form.getRawValue();\n    if (!this.form.get('name')?.dirty && !this.form.get('email')?.dirty) {\n      this.errorMessage = 'Bitte ändern Sie mindestens ein Feld.';\n      this.resetErrorMessage();\n      return;\n    } if (this.form.invalid) {\n      this.errorMessage = 'Bitte füllen Sie das Formular korrekt aus.';\n      this.resetErrorMessage();\n      return;\n    } try {\n      await this.authService.updateUserData(email, name);\n      console.log(this.authService.currentUserSignal());\n      this.successMessage = 'Profil erfolgreich aktualisiert.';\n      this.closePopup();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  closePopup(){\n    setTimeout(() => {\n      this.closeDialog();\n      this.errorMessage = '';\n      this.successMessage = '';\n    }, 1500);\n  }\n\n  resetErrorMessage() {\n    setTimeout(() => {\n      this.errorMessage = '';\n    }, 1500);\n  }\n}\n\n\n\n\n\n    \n\n    \n        \n    \n\n        \n            Dein Profil bearbeiten\n            \n        \n\n        \n            @if (authService.currentUserSignal() == null ) {\n            \n            } @else {\n            \n            }\n        \n\n        \n            \n                \n                    \n                    Vollständiger Name\n                \n                @if (authService.currentUserSignal()?.name === 'Gast') {\n                \n                } @else {\n                \n                }\n            \n\n            \n                \n                    \n                    E-Mail-Adresse\n                \n                @if (authService.currentUserSignal()?.name === 'Gast') {\n                \n                } @else {\n                \n                }\n            \n\n            \n                {{ successMessage }}\n                {{ errorMessage }}\n                Änderungen am Gast Profil sind nicht möglich.\n            \n\n            \n                Abbrechen\n                @if (authService.currentUserSignal()?.name === 'Gast') {\n                Speichern\n                } @else {\n                Speichern\n                }\n            \n\n        \n    \n\n    \n\n    \n                \n                    ./edit-profil-contactform.component.scss\n                \n                .edit-profil-container {\n    position: fixed;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.4);\n    position: fixed;\n    left: 0;\n    top: 0;\n    z-index: 6;\n}\n\n.dialog {\n    width: 400px;\n    //height: 500px;\n    padding: 35px 30px 35px 30px;\n    gap: 45px;\n    border-radius: 30px;\n    background-color: white;\n    position: absolute;\n    gap: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    top : 100px;\n    right: 40px;\n}\n\n.display-flex {\n    display: flex;\n}\n\n.display-none {\n    display: none;\n}\n\n.header {\n    width: 100%;\n    height: 40px;\n    display: flex;\n    justify-content: space-between;   \n    align-items: center;\n}\n\n.header-title {\n    font-weight: 700;\n}\n\n.close-button {\n    background-image: url('../../../assets/img/create-channel/close_button.png');\n    height: 40px;\n    width: 40px;\n    cursor: pointer;\n    &:hover {\n        background-image: url('../../../assets/img/create-channel/close_button_hover.png');\n    }\n}\n\n.profil-image {\n    width: 200px;\n    height: 200px;\n    border-radius: 500px;\n    object-fit: cover;\n}\n\n.channel-name-container {\n    width: 400px;\n    height: 80px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: space-between;\n    position: relative;\n    margin-bottom: 10px;\n    gap: 10px;\n    span {\n        font-weight: 700;\n    }\n}\n\ninput {\n    width: 792px;\n    height: 60px;\n    border-radius: 40px;\n    border: 1px solid rgba(173, 176, 217, 1);\n    padding: 18px, 20px, 18px, 20px;\n    font-size: 18px;\n    gap: 10px;\n}\n\n.input-field {\n    width: 100%; \n    padding: 0px 30px;\n    box-sizing: border-box;\n    &:focus {\n        border-color: none;\n    }\n}\n\n.buttons-container {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    gap : 10px;\n    margin-top: 40px;\n}\n\nbutton {\n    width: 141px;\n    height: 49px;\n    padding: 12px 25px 12px 25px;\n    border-radius: 50px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n}\n\n.cancel {\n    border: 1px solid #797EF3;\n    background-color: white;\n    color:  #444DF2;\n    ; \n    span {\n        font-weight: 700;\n    }\n    &:hover {\n        color: white;\n        background-color: #444DF2;\n        border: none;\n    }\n}\n\n.save {\n    border: none;\n    background-color: #444DF2;\n    color:  white;\n    ; \n    span {\n        font-weight: 700;\n    }\n    &:hover {\n        background-color: #797EF3;\n    }\n}\n\n.error-message {\n    color: red;\n    font-size: 14px;\n}\n\n.success-message {\n    color: #92C83E;\n    font-size: 14px;\n}\n\n.message-container{\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.disabled-btn {\n    padding: 12px 25px 12px 25px;\n    background-color: gray;\n    color: white;\n    border-radius: 25px;\n    border-width: 0;\n    cursor: auto;\n}\n\n.disabled-input{\n    width: calc(100% - 24px);\n    border: none;\n    background-color: #22222242;\n    outline: none;\n    height: 26px;\n    border-radius: 25px;\n    padding: 8px 12px;\n    margin-bottom: 12px;\n    font-size: 18px;\n    font-weight: 400;\n}\n\n.account-icon {\n    width: 24px;\n    height: 24px;\n    display: none;\n}\n\n.mail-icon {\n    width: 24px;\n    height: 24px;\n    display: none;\n}\n\n.input-title {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n}\n                \n                    ./edit-profil-contactform-responsive.component.scss\n                \n                @media(max-width: 1000px) {\n    .dialog {\n        border-radius: 30px;\n        top: calc(50vh - 313px);\n        left: calc(50vw - 228px);\n    }\n\n    .header-title {\n        white-space: nowrap;\n    }\n\n    .account-icon {\n        display: flex;\n    }\n\n    .mail-icon {\n        display: flex;\n    }\n}\n\n@media(max-width: 500px) {\n    .dialog {\n        width: calc(100vw - 100px);\n        left: 0;\n        right: 0;\n        margin: 0 auto;\n    }\n\n    .profil-image {\n        width: 180px;\n        height: 180px;\n    }\n\n    .channel-name-container {\n        width: calc(100vw - 100px);\n    }\n}\n\n@media(max-width: 400px) {\n    .dialog {\n        padding: 20px 15px 20px 15px;\n        width: calc(100vw - 80px);\n        top: calc(50vh - 297px);\n    }\n\n    button {\n        width: 110px;\n        height: 40px;\n    }\n\n    .header-title {\n       font-size: 20px;\n    }\n\n    input {\n        height: 40px;\n    }\n\n    .buttons-container{\n        span{\n            font-size: 14px;\n        }\n    }\n\n    .error-message{\n        font-size: 12px;\n    }\n\n    .profil-image {\n        width: 150px;\n        height: 150px;\n    }\n\n    .input-field {\n        padding: 0px 20px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Dein Profil bearbeiten                                        @if (authService.currentUserSignal() == null ) {                        } @else {                        }                                                                                    Vollständiger Name                                @if (authService.currentUserSignal()?.name === \\'Gast\\') {                                } @else {                                }                                                                                E-Mail-Adresse                                @if (authService.currentUserSignal()?.name === \\'Gast\\') {                                } @else {                                }                                        {{ successMessage }}                {{ errorMessage }}                Änderungen am Gast Profil sind nicht möglich.                                        Abbrechen                @if (authService.currentUserSignal()?.name === \\'Gast\\') {                Speichern                } @else {                Speichern                }                        '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditProfilContactformComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileUploadeService.html":{"url":"injectables/FileUploadeService.html","title":"injectable - FileUploadeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileUploadeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/file-upload.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/file-upload.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFile(fileUrl: string, source: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/file-upload.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                source\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: File, source: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/file-upload.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                source\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Firestore } from '@angular/fire/firestore';\nimport {\n  deleteObject,\n  getDownloadURL,\n  getStorage,\n  ref,\n  uploadBytesResumable,\n} from 'firebase/storage';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FileUploadeService {\n  constructor() {}\n\n  async uploadFile(file: File, source: any): Promise {\n    const storage = getStorage();\n\n    // Erstelle einen eindeutigen Namen für die Datei\n    const uniqueFileName = Date.now();\n\n    const storageRef = ref(storage, `${source}/${uniqueFileName}`);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    return new Promise((resolve, reject) => {\n      uploadTask.on(\n        'state_changed',\n        (snapshot) => {},\n        (error) => {\n          reject(error);\n        },\n        () => {\n          getDownloadURL(uploadTask.snapshot.ref).then((downloadURL: any) => {\n            resolve(downloadURL);\n          });\n        }\n      );\n    });\n  }\n\n  async deleteFile(fileUrl: string, source: any): Promise {\n    const storage = getStorage();\n    const fileRef = ref(storage, `${source}/${fileUrl}`);\n\n    deleteObject(fileRef)\n      .then(() => {\n        console.log('File deleted successfully');\n      })\n      .catch((error) => {\n        console.error('Error deleting file:', error);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                SearchFieldComponent\n                                ProfilOptionsPopupComponent\n                \n            \n\n            \n                styleUrls\n                ./header.component.scss,./header-responsiv.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                hideOrShowPopUp\n                            \n                            \n                                responsiveService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backToSidebar\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        backToSidebar\n                        \n                    \n                \n            \n            \n                \nbackToSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/header/header.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Resets the view to the sidebar.\nThis method closes any open channels, direct messages, and threads,\nand checks the window width. If the window width is less than\n1000 pixels, it sets the sidebar to open.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/header/header.component.ts:26\n                        \n                    \n\n\n            \n                \n                        Opens the pop-up dialog.\nThis method sets the popUpOpen property to true,\nallowing the user to view and interact with the pop-up dialog.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/header/header.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideOrShowPopUp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SidebarService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/header/header.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        responsiveService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ResponsiveService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/header/header.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { SearchFieldComponent } from './search-field/search-field.component';\nimport { SidebarService } from '../../services/sidebar.service';\nimport { ProfilOptionsPopupComponent } from './profil-options-popup/profil-options-popup.component';\nimport { AuthService } from '../../services/auth.service';\nimport { ResponsiveService } from '../../services/responsive.service';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [SearchFieldComponent, ProfilOptionsPopupComponent],\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss', './header-responsiv.component.scss']\n})\nexport class HeaderComponent {\n  authService = inject(AuthService);\n  hideOrShowPopUp = inject(SidebarService);\n  responsiveService = inject(ResponsiveService);\n\n  /**\n * Opens the pop-up dialog.\n * \n * This method sets the `popUpOpen` property to true, \n * allowing the user to view and interact with the pop-up dialog.\n */\n  openDialog(){\n   this.hideOrShowPopUp.popUpOpen = true;\n  }\n\n  /**\n * Resets the view to the sidebar.\n * \n * This method closes any open channels, direct messages, and threads, \n * and checks the window width. If the window width is less than \n * 1000 pixels, it sets the sidebar to open.\n */\n  backToSidebar() {\n    this.responsiveService.isChannelOpen = false;\n    this.responsiveService.isDirectMessageOpen = false;\n    this.responsiveService.isThreadOpen = false;\n      if(window.innerWidth \n    \n\n    \n        \n    @if(this.responsiveService.isSidebarOpen){\n        \n    }@else {\n        \n            \n            \n            Devspace\n        \n    }\n    \n    \n    \n        \n            @if (authService.currentUserSignal() == null) {\n                Gast\n              } @else {\n                {{authService.currentUserSignal()?.name}}\n              }\n        \n        \n            @if (authService.currentUserSignal() == null) {\n                \n            } @else {\n                \n            }\n            \n            \n        \n        \n        \n    \n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                header {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    width: 100vw;\n}\n\nimg {\n    position: absolute;\n    left: 35px;\n}\n\n.user-account {\n    right: 35px;\n    height: 70px;\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap:50px;\n    cursor: pointer;\n    &:hover {\n        .arrow {\n            background-image: url('../../../assets/img/header/expand_more.png');\n        }\n        span {\n            color: rgba(121, 126, 243, 1);\n        }\n    }\n}\n\n.profil {\n    transform: translateY(-35px) translateX(-68px);\n}\n\n.profil-image {\n    width: 70px;\n    height: 70px;\n    border-radius: 42px;\n    position: absolute;\n    right: 0;\n    object-fit: cover;\n}\n\n.online-icon {\n    width: 14px;\n    height: 14px;\n    transform: translateY(50px) translateX(57px);\n}\n\n.arrow {\n    background-image: url(\"../../../assets/img/header/keyboard_arrow_down.png\");\n    width: 30px;\n    height: 30px;\n}\n\nspan {\n    font-weight: 700;\n    font-size: 32px;\n}\n\n.header-left-responsive {\n    height: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    cursor: pointer;\n}\n\n.arrow-left {\n    width: 30px;\n    height: 30px;\n}\n\n.workspace-logo {\n    margin-left: 25px;\n    transform: scale(0.8);\n}\n                \n                    ./header-responsiv.component.scss\n                \n                @media(max-width: 1300px){\n    .user-name {\n        display: none;\n    }\n\n    .responsive {\n        transform: translateX(130px);\n    }\n}\n\n@media(max-width: 1000px){\n    header {\n        justify-content: flex-start;\n    }\n\n    .responsive {\n        display: none;\n    }\n\n    .arrow {\n        display: none;\n    }\n\n    .user-account {\n        margin-right: 40px;\n    }\n\n    .bubble-icon {\n        transform: translateX(-60px) scale(0.6);\n    }\n\n    .profil-image {\n        transform: translateX(25px) scale(0.7);\n    }\n\n    .online-icon {\n        width: 10px;\n        height: 10px;\n        transform: translateY(47px) translateX(73px);\n    }\n\n    .responsive-title {\n        transform: translateX(120px);\n        font-size: 24px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if(this.responsiveService.isSidebarOpen){            }@else {                                            Devspace            }                                @if (authService.currentUserSignal() == null) {                Gast              } @else {                {{authService.currentUserSignal()?.name}}              }                            @if (authService.currentUserSignal() == null) {                            } @else {                            }                                                    '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                HeaderComponent\n                                SidebarComponent\n                                ChannelComponent\n                                CreateChannelComponent\n                                OpenSidebarComponent\n                                EditProfilComponent\n                                EditProfilContactformComponent\n                                UserProfilComponent\n                                AddUserToChannelComponent\n                                DirectMessagesComponent\n                            CommonModule\n                                EditChannelComponent\n                                NewMessageComponent\n                                ChannelUserlistComponent\n                                ReactionListComponent\n                                OpenImgComponent\n                \n            \n\n            \n                styleUrls\n                ./home.component.scss,./home-responsive.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelSelectionService\n                            \n                            \n                                    Public\n                                editChannelService\n                            \n                            \n                                searchService\n                            \n                            \n                                selectedReaction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(channelSelectionService: ChannelSelectionService, editChannelService: EditChannelService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/home/home.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channelSelectionService\n                                                  \n                                                        \n                                                                        ChannelSelectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editChannelService\n                                                  \n                                                        \n                                                                        EditChannelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/home/home.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelSelectionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelSelectionService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/home/home.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        editChannelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EditChannelService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/home/home.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SearchService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/home/home.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedReaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main/home/home.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { HeaderComponent } from '../header/header.component';\nimport { SidebarComponent } from '../sidebar/sidebar.component';\nimport { ChannelComponent } from '../channel/channel/channel.component';\nimport { CreateChannelComponent } from '../create-channel/create-channel.component';\nimport { OpenSidebarComponent } from '../open-sidebar/open-sidebar.component';\nimport { EditProfilComponent } from '../edit-profil/edit-profil.component';\nimport { EditProfilContactformComponent } from '../edit-profil-contactform/edit-profil-contactform.component';\nimport { UserProfilComponent } from '../user-profil/user-profil.component';\nimport { AddUserToChannelComponent } from '../add-user-to-channel/add-user-to-channel.component';\nimport { DirectMessagesComponent } from '../direct-messages/direct-messages/direct-messages.component';\nimport { CommonModule } from '@angular/common';\nimport { EditChannelComponent } from '../edit-channel/edit-channel.component';\nimport { OnInit } from '@angular/core';\nimport { ChannelSelectionService } from '../../services/channel-selection.service';\nimport { EditChannelService } from '../../services/edit-channel.service';\nimport { NewMessageComponent } from '../new-message/new-message/new-message.component'; // Importiere den EditChannelService\nimport { ChannelUserlistComponent } from '../channel-userlist/channel-userlist.component';\nimport { ReactionListComponent } from '../reaction-list/reaction-list.component';\nimport { SearchService } from '../../services/search.service';\nimport { OpenImgComponent } from '../open-img/open-img.component';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [\n    HeaderComponent,\n    SidebarComponent,\n    ChannelComponent,\n    CreateChannelComponent,\n    OpenSidebarComponent,\n    EditProfilComponent,\n    EditProfilContactformComponent,\n    UserProfilComponent,\n    AddUserToChannelComponent,\n    DirectMessagesComponent,\n    CommonModule,\n    EditChannelComponent,\n    NewMessageComponent,\n    ChannelUserlistComponent,\n    ReactionListComponent,\n    OpenImgComponent,\n  ],\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss', './home-responsive.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  selectedReaction: string = ''; // Variable zum Speichern der Reaktion\n  searchService = inject(SearchService);\n  constructor(\n    public channelSelectionService: ChannelSelectionService,\n    public editChannelService: EditChannelService // Füge den Service hier hinzu\n  ) {}\n\n  ngOnInit() {\n    this.channelSelectionService.getselectedReaction().subscribe((reaction) => {\n      this.selectedReaction = reaction;\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                app-header {\n  display: block;\n  width: 100%;\n  height: 115px;\n}\napp-sidebar {\n  display: block;\n  margin-bottom: 10px;\n}\n\napp-open-sidebar {\n  position: fixed;\n  bottom: 25px;\n}\n\napp-channel {\n  display: block;\n  width: 100%;\n  margin-bottom: 10px;\n}\n\napp-new-message {\n  display: block;\n  width: 100%;\n  margin-bottom: 10px;\n}\n\napp-direct-messages {\n  display: block;\n  width: 100%;\n  margin-bottom: 10px;\n}\n\n.content {\n  display: flex;\n  flex-direction: row;\n  height: calc(100vh - 115px);\n}\n\n                \n                    ./home-responsive.component.scss\n                \n                @media(max-width: 1000px){\n    app-sidebar {\n        margin-bottom: 0px;\n      }\n\n    app-header {\n    height: 80px;\n    }\n\n    .content {\n    display: flex;\n    flex-direction: row;\n    height: calc(100vh - 80px);\n    }\n\n    app-channel {\n      margin-bottom: 0;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImpressumComponent.html":{"url":"components/ImpressumComponent.html","title":"component - ImpressumComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ImpressumComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing_page/impressum/impressum.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-impressum\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./impressum.component.html\n            \n\n\n\n            \n                styleUrl\n                ./impressum.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                imgSrcArrow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing_page/impressum/impressum.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing_page/impressum/impressum.component.ts:20\n                        \n                    \n\n\n            \n                \n                        Redirects to the last visited page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        imgSrcArrow\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '../../../assets/img/landing-page/arrow-back.png'\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/impressum/impressum.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {Location} from '@angular/common';\n\n@Component({\n  selector: 'app-impressum',\n  standalone: true,\n  imports: [],\n  templateUrl: './impressum.component.html',\n  styleUrl: './impressum.component.scss'\n})\nexport class ImpressumComponent {\n  imgSrcArrow: string = '../../../assets/img/landing-page/arrow-back.png';\n\n  constructor(private _location: Location){\n  }\n\n  /**\n   * Redirects to the last visited page.\n   */\n  goBack() {\n    this._location.back();\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n\n        \n\n        \n            Impressum\n            Mark Hegedüs, Joost Heidrich, Gábor Holzleiter\n            Schützenstrasse 27.\n            8570 Weinfelden\n        \n        \n        \n            Contact:\n            Email: mail&#64;mark.hegedus.com\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Impressum            Mark Hegedüs, Joost Heidrich, Gábor Holzleiter            Schützenstrasse 27.            8570 Weinfelden                                    Contact:            Email: mail@mark.hegedus.com            '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImpressumComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogInComponent.html":{"url":"components/LogInComponent.html","title":"component - LogInComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogInComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing_page/log-in/log-in.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-log-in\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                            RouterLink\n                \n            \n\n            \n                styleUrls\n                ./log-in.component.scss,./log-in.component-2.scss\n            \n\n\n\n            \n                templateUrl\n                ./log-in.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                errorMessage\n                            \n                            \n                                fb\n                            \n                            \n                                form\n                            \n                            \n                                revealPasswordService\n                            \n                            \n                                router\n                            \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchUsersOnline\n                            \n                            \n                                googleSignIn\n                            \n                            \n                                guestLogin\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                logOutToJSON\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onlineSince\n                            \n                            \n                                onSubmit\n                            \n                            \n                                sinceToJSON\n                            \n                            \n                                toJSON\n                            \n                            \n                                    Async\n                                userOffline\n                            \n                            \n                                    Async\n                                userOnline\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing_page/log-in/log-in.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchUsersOnline\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchUsersOnline()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing_page/log-in/log-in.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        googleSignIn\n                        \n                    \n                \n            \n            \n                \ngoogleSignIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing_page/log-in/log-in.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Initiates Google Sign-In process.\nOn success, it navigates to the '/home' page and fetches the user data.\nOn failure, it sets the error message with the error received.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guestLogin\n                        \n                    \n                \n            \n            \n                \nguestLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing_page/log-in/log-in.component.ts:149\n                        \n                    \n\n\n            \n                \n                        Logs in as a guest user.\nOn success, it navigates to the '/home' page and fetches user data.\nOn failure, logs the error in the console.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(errorCode: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing_page/log-in/log-in.component.ts:215\n                        \n                    \n\n\n            \n                \n                        Handles errors by mapping the error code to user-friendly messages.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                errorCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error code returned by the authentication process.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOutToJSON\n                        \n                    \n                \n            \n            \n                \nlogOutToJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing_page/log-in/log-in.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { online: string; onlineSince: any; uId: any; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing_page/log-in/log-in.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onlineSince\n                        \n                    \n                \n            \n            \n                \n                        \n                    onlineSince()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing_page/log-in/log-in.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing_page/log-in/log-in.component.ts:182\n                        \n                    \n\n\n            \n                \n                        Handles the form submission for logging in.\nIf the form is valid, it calls the logIn method from AuthService and navigates to '/home' on success.\nOn error, it calls handleError to display the appropriate error message.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sinceToJSON\n                        \n                    \n                \n            \n            \n                \nsinceToJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing_page/log-in/log-in.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { online: string; onlineSince: any; uId: any; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing_page/log-in/log-in.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { online: string; onlineSince: any; uId: any; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        userOffline\n                        \n                    \n                \n            \n            \n                \n                        \n                    userOffline()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing_page/log-in/log-in.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        userOnline\n                        \n                    \n                \n            \n            \n                \n                        \n                    userOnline()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing_page/log-in/log-in.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/log-in/log-in.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/log-in/log-in.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/log-in/log-in.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.nonNullable.group({\n    email: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}')]],\n    password: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/log-in/log-in.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        revealPasswordService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RevealPasswordService)\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/log-in/log-in.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/log-in/log-in.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SidebarService)\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/log-in/log-in.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router, RouterLink } from '@angular/router';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SidebarService } from '../../services/sidebar.service';\nimport { RevealPasswordService } from '../../services/reveal-password.service';\nimport {\n  Firestore,\n  collection,\n  doc,\n  onSnapshot,\n  setDoc,\n  updateDoc,\n} from '@angular/fire/firestore';\n\n@Component({\n  selector: 'app-log-in',\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule, RouterLink],\n  templateUrl: './log-in.component.html',\n  styleUrls: ['./log-in.component.scss','./log-in.component-2.scss'] \n})\nexport class LogInComponent implements OnInit{\n  authService = inject(AuthService);\n  router = inject(Router);\n  fb = inject(FormBuilder);\n  errorMessage: string | null = null; \n  userInfo = inject(SidebarService);\n  revealPasswordService = inject(RevealPasswordService);\n\n  form = this.fb.nonNullable.group({\n    email: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}')]],\n    password: ['', [Validators.required]],\n  });\n\n  constructor(private firestore : Firestore) {}\n\n  ngOnInit(): void {\n    \n  }\n\n  \n  \n  /**\n   * Initiates Google Sign-In process.\n   * On success, it navigates to the '/home' page and fetches the user data.\n   * On failure, it sets the error message with the error received.\n   */\n  googleSignIn() {\n    this.authService.signInWithGoogle().subscribe({\n      next: () => {\n        this.router.navigateByUrl('/home');\n        this.userInfo.fetchUsers();\n        this.userInfo.activeChannelIndex = 0;\n\n        this.userOnline();\n        this.fetchUsersOnline();\n\n        this.userInfo.online = true;\n        let time = new Date().getTime();\n        if(this.userInfo.asd == 0){\n          setInterval(() => {\n            let newTime = new Date().getTime();\n            if(this.userInfo.online){\n              this.userInfo.asd = newTime - time;\n              this.onlineSince();\n            }\n          }, 3000);\n        }\n        \n      },\n      error: (err) => {\n        this.errorMessage = err.message;\n      }\n    });\n  }\n\n  async fetchUsersOnline(){\n    const usersCollection = collection(this.firestore, 'online');\n    onSnapshot(usersCollection, (querySnapshot) => {\n      \n      this.userInfo.onlineUserUidList = [];\n      querySnapshot.forEach((doc) => {\n          const userData = doc.data();\n          if(userData['online'] == 'yes' && userData['onlineSince'] > (new Date().getTime() - 4000)){    // \n            this.userInfo.onlineUserUidList.push(userData['uId']);\n          };\n          \n      });\n  }, (error) => {\n      console.error('Fehler beim Abrufen der Benutzerdaten:', error);\n  });\n  }\n\n  async userOffline(){\n    const userRef = doc(\n      collection(this.firestore, 'online'),\n      this.authService.currentUserSignal()?.uId\n    );\n    await setDoc(userRef, this.logOutToJSON())\n  }\n\n  logOutToJSON(){\n    return {\n      online : \"no\" ,\n      onlineSince : new Date().getTime() ,\n      uId : this.authService.currentUserSignal()?.uId\n    }\n  }\n\n  async onlineSince(){\n    const userRef = doc(\n      collection(this.firestore, 'online'),\n      this.authService.currentUserSignal()?.uId\n    );\n    await setDoc(userRef, this.sinceToJSON())\n  }\n\n  async userOnline(){\n    const userRef = doc(\n      collection(this.firestore, 'online'),\n      this.authService.currentUserSignal()?.uId\n    );\n    await setDoc(userRef, this.toJSON())\n  }\n\n  sinceToJSON(){\n    return {\n      online : \"yes\" ,\n      onlineSince : new Date().getTime() ,\n      uId : this.authService.currentUserSignal()?.uId\n    }\n  }\n\n  toJSON(){\n    return {\n      online : \"yes\" ,\n      onlineSince : new Date().getTime() ,\n      uId : this.authService.currentUserSignal()?.uId\n    }\n  }\n\n  /**\n   * Logs in as a guest user.\n   * On success, it navigates to the '/home' page and fetches user data.\n   * On failure, logs the error in the console.\n   */\n  guestLogin() {\n    this.authService.guestLogin().subscribe({\n      next: () => {\n        this.router.navigateByUrl('/home');\n        this.userInfo.fetchUsers();\n        this.userInfo.activeChannelIndex = 0;\n\n        this.userOnline();\n        this.fetchUsersOnline();\n\n        this.userInfo.online = true;\n        let time = new Date().getTime();\n        if(this.userInfo.asd == 0){\n          setInterval(() => {\n            let newTime = new Date().getTime();\n            if(this.userInfo.online){\n              this.userInfo.asd = newTime - time;\n              this.onlineSince();\n            }\n          }, 3000);\n        }\n      },\n      error: (err) => {\n        console.error('Guest login failed:', err);\n      }\n    });\n  }\n\n  /**\n   * Handles the form submission for logging in.\n   * If the form is valid, it calls the `logIn` method from `AuthService` and navigates to '/home' on success.\n   * On error, it calls `handleError` to display the appropriate error message.\n   */\n  onSubmit(): void {\n    const rawForm = this.form.getRawValue();\n    if (this.form.valid) {\n      this.authService.logIn(rawForm.email, rawForm.password).subscribe({\n        next: () => {\n          this.router.navigateByUrl('/home');\n          \n          this.userOnline();\n          this.fetchUsersOnline();\n\n          this.userInfo.online = true;\n          let time = new Date().getTime();\n          if(this.userInfo.asd == 0){\n            setInterval(() => {\n              let newTime = new Date().getTime();\n              if(this.userInfo.online){\n                this.userInfo.asd = newTime - time;\n                this.onlineSince();\n              }\n            }, 3000);\n          }\n        },\n        error: (err) => {\n          this.handleError(err.code);\n        }\n      });\n    }\n  }\n\n  /**\n   * Handles errors by mapping the error code to user-friendly messages.\n   * @param {string} errorCode - The error code returned by the authentication process.\n   */\n  private handleError(errorCode: string): void {\n    switch (errorCode) {\n      case 'auth/user-not-found':\n        this.errorMessage = 'Es existiert kein Benutzer mit dieser E-Mail-Adresse.';\n        break;\n      case 'auth/invalid-credential':\n        this.errorMessage = 'Falsches E-Mail oder Passwort. Bitte überprüfen und erneut versuchen.';\n        break;\n      case 'auth/invalid-email':\n        this.errorMessage = 'Diese E-Mail-Adresse ist ungültig.';\n        break;\n      case 'auth/too-many-requests':\n        this.errorMessage = 'Zu viele fehlgeschlagene Anmeldeversuche. Bitte versuchen Sie es später erneut.';\n        break;\n      default:\n        this.errorMessage = 'Ein unbekannter Fehler ist aufgetreten. Bitte versuchen Sie es später erneut.';\n        break;\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n    \n        \n            \n        \n    \n\n    \n\n    \n        Neu bei DABubble?\n        Konto erstellen\n    \n\n    \n        Anmeldung\n\n        Wir empfehlen dir, die E-Mail-Adresse zu nutzen,\n            die du bei der Arbeit verwendest.\n\n        \n            \n                \n                \n                \n                    *Diese E-Mail-Adresse ist leider ungültig.\n                \n            \n\n            \n                \n                \n                \n                \n                    Passwort is erforderlich.\n                \n            \n\n            \n                {{ errorMessage }}\n            \n\n            Passwort vergessen?\n\n            \n                \n                ODER\n                \n            \n\n            Anmelden mit Google\n\n            \n                Anmelden\n                    \n                Gäste-Login\n            \n        \n    \n\n    \n        Neu bei DABubble?\n        Konto erstellen\n    \n\n    \n        Impressum\n        Datenschutz\n    \n\n\n    \n\n    \n                \n                    ./log-in.component.scss\n                \n                section {\n    max-width: 1920px;\n    margin: 0 auto;\n    position: relative;\n    height: 100vh;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n}\n\n.logo {\n    position: absolute;\n    animation: logoSlideOriginal;\n    animation-delay: 2500ms;\n    animation-timing-function: ease-in-out;\n    animation-duration: 500ms;\n    animation-fill-mode: forwards;\n}\n\n.legal-section {\n    display: flex;\n    position: absolute;\n    bottom: 30px;\n    gap: 16px;\n}\n\n.sign-in-section-phone {\n    display: none;\n    flex-direction: column;\n    align-items: center;\n    z-index: 990;\n}\n\n.sign-in-section {\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    top: 50px;\n    right: 30px;\n    align-items: end;\n\n    p {\n        padding-right: 10px;\n    }\n}\n\n.login-section {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    box-shadow: 0px 2px 10px 0px #00000014;\n    background-color: #FFFFFF;\n    padding: 50px;\n    max-width: 606px;\n    border-radius: 30px;\n    gap: 30px;\n\n    p {\n        max-width: 486px;\n        text-align: center\n    }\n}\n\n.formfield {\n    z-index: 997;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 30px;\n}\n\n.input-design {\n    border-radius: 100px;\n    background-color: #ECEEFE;\n    width: 500px;\n    height: 60px;\n    cursor: pointer;\n    text-indent: 70px;\n    border-style: hidden;\n    font-size: 18px;\n    font-family: Nunito;\n\n    &:hover {\n        outline: 1px solid black;\n    }\n\n    &:focus {\n        outline: 1px solid #444DF2;\n    }\n}\n\n.grey-line {\n    background-color: #ADB0D9;\n    height: 1px;\n    width: 210px;\n}\n\n.input-icon {\n    position: absolute;\n    left: 25px;\n    top: 22px\n}\n\n.input-icon-lock {\n    position: absolute;\n    left: 25px;\n    top: 19px\n}\n\n.input-icon-reveal{\n    position: absolute;\n    right: 25px;\n    top: 19px;\n    height: 25px;\n}\n\n.separator {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.login-google-btn {\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    width: 500px;\n    height: 60px;\n    background-color: #ECEEFE;\n    border-radius: 100px;\n    gap: 10px;\n    border: 1px solid transparent;\n    color: #444DF2;\n    transition-duration: 0.2s;\n\n    &:hover {\n        border: 1px solid #444DF2;\n        font-weight: 700;\n    }\n}\n\n.btn-container {\n    display: flex;\n    gap: 30px;\n}\n\n.password-link {\n    text-decoration: none;\n    color: #797ef3;\n    border: 1px solid transparent;\n    padding: 8px;\n    transition-duration: 0.2s;\n\n    &:hover {\n        font-weight: 700;\n        color: #464bdf;\n        background-color: #ECEEFE;\n        border-radius: 50px;\n    }\n}\n\n.animation-wrapper-global {\n    width: 100vw;\n    height: 100%;\n    position: absolute;\n    z-index: 998;\n    background: linear-gradient(1.46deg, #313AE6 1.22%, #797EF3 98.76%);\n    animation: backgroundAnimation;\n    animation-delay: 2500ms;\n    animation-timing-function: ease-out;\n    animation-duration: 500ms;\n    animation-fill-mode: forwards;\n}\n\n.animation-wrapper-local {\n    position: absolute;\n    width: 100%;\n    height: 100vh;\n    animation: backgroundAnimation;\n}\n\n.animated-logo {\n    height: auto;\n    width: auto;\n    animation: logoAnimation;\n    animation-delay: 500ms;\n    animation-timing-function: ease-out;\n    animation-duration: 500ms;\n    animation-fill-mode: forwards;\n    height: auto;\n    max-width: 100%;\n}\n\n.logo-wrapper {\n    z-index: 999;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    animation: logoSlide;\n    animation-delay: 2500ms;\n    animation-timing-function: ease-in-out;\n    animation-duration: 500ms;\n    animation-fill-mode: forwards;\n}\n\n.error-message {\n    color: red;\n    font-size: 14px;\n    padding-top: 5px;\n}\n\n.input-container {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: baseline;\n}\n\n@keyframes backgroundAnimation {\n    0% {\n        opacity: 1;\n    }\n\n    100% {\n        opacity: 0;\n        z-index: -1;\n    }\n}\n\n@keyframes logoAnimation {\n    0% {\n        opacity: 1;\n    }\n\n    50% {\n        content: url(\"../../../assets/img/landing-page/animation-step2.png\");\n        transform: translateX(-5%)\n    }\n\n    100% {\n        content: url(\"../../../assets/img/landing-page/animation-step3.png\");\n        transform: translateX(0);\n    }\n}\n\n@keyframes logoSlide {\n    0% {\n        opacity: 1;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    100% {\n        top: 50px;\n        left: 30px;\n        transform: translate(0, 0);\n        z-index: 1;\n        height: 70px;\n        width: 243px;\n        opacity: 0;\n    }\n}\n\n@keyframes logoSlidePhone {\n    0% {\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    100% {\n        top: 50px;\n        left: 30px;\n        transform: translate(0, 0);\n        z-index: 1;\n        height: 50px;\n        width: auto;\n    }\n}\n\n@keyframes logoSlideOriginal {\n    0% {\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    100% {\n        top: 50px;\n        left: 30px;\n        transform: translate(0, 0);\n        z-index: 1;\n        height: 70px;\n        width: 243px;\n    }\n}\n\n@media (max-width: 1360px) {\n\n    .login-section {\n        padding: 25px;\n\n        h1 {\n            font-size: 40px;\n        }\n\n        p {\n            font-size: 16px;\n        }\n\n        a {\n            font-size: 16px;\n        }\n\n        button {\n            font-size: 16px;\n        }\n\n        input {\n            font-size: 16px;\n        }\n    }\n\n    .sign-in-section {\n        p {\n            font-size: 16px;\n        }\n\n        a {\n            font-size: 16px;\n        }\n    }\n}\n\n@media (max-width: 650px) {\n\n    .login-section {\n        padding: 25px;\n\n        h1 {\n            font-size: 35px;\n        }\n\n        p {\n            font-size: 12px;\n        }\n\n        a {\n            font-size: 12px;\n        }\n\n        button {\n            font-size: 12px;\n        }\n\n        input {\n            font-size: 12px;\n        }\n\n        p {\n            max-width: 400px;\n        }\n    }\n\n    .error-message {\n        font-size: 12px;\n    }\n\n    .sign-in-section {\n        p {\n            font-size: 12px;\n        }\n\n        a {\n            font-size: 12px;\n        }\n    }\n\n    .legal-section {\n        a {\n            font-size: 12px;\n        }\n    }\n\n    .logo {\n        animation: logoSlidePhone;\n        animation-delay: 2500ms;\n        animation-timing-function: ease-in-out;\n        animation-duration: 500ms;\n        animation-fill-mode: forwards;\n    }\n\n    .animated-logo {\n        height: 50px;\n    }\n\n    .input-design {\n        width: 400px;\n        height: 45px;\n        text-indent: 60px;\n    }\n\n    .grey-line {\n        width: 170px;\n    }\n\n    .login-google-btn {\n        width: 400px;\n        height: 45px;\n    }\n\n    .input-icon-reveal{\n        top: 11px;\n    }\n\n    .input-icon {\n        top: 15px;\n    }\n\n    .input-icon-lock {\n        top: 11px;\n    }\n}\n                \n                    ./log-in.component-2.scss\n                \n                @keyframes logoSlidePhone430px {\n    0% {\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    100% {\n        top: 100px;\n        margin-left: auto;\n        margin-right: auto;\n        left: 0;\n        right: 0;\n        transform: translate(0, 0);\n        z-index: 1;\n        height: 50px;\n        width: auto;\n    }\n}\n\n@keyframes logoSlide430px {\n    0% {\n        opacity: 1;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    100% {\n        top: 100px;\n        left: 50%;\n        transform: translateX(-50%);\n        z-index: 1;\n        height: 50px;\n        width: auto;\n        opacity: 0;\n    }\n}\n\n@keyframes logoSlidePhone375px {\n    0% {\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    100% {\n        top: 30px;\n        margin-left: auto;\n        margin-right: auto;\n        left: 0;\n        right: 0;\n        transform: translate(0, 0);\n        z-index: 1;\n        height: 50px;\n        width: auto;\n    }\n}\n\n@keyframes logoSlide375px {\n    0% {\n        opacity: 1;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    100% {\n        top: 30px;\n        left: 50%;\n        transform: translateX(-50%);\n        z-index: 1;\n        height: 50px;\n        width: auto;\n        opacity: 0;\n    }\n}\n\n@media (max-width: 500px) {\n\n    .login-section {\n        padding: 25px;\n        max-width: 350px;\n\n        p {\n            max-width: 300px;\n        }\n    }\n\n    .sign-in-section {\n        display: none;\n    }\n\n    .sign-in-section-phone {\n        display: flex;\n        p{\n            padding-right: 0px;\n        }\n        a {\n            color: #464bdf;\n            border: 1px solid #797ef3;\n            border-radius: 50px;\n            padding: 7px 18px 7px 18px;\n        }\n    }\n\n    .logo-wrapper {\n        transform: translate(-50%, -50%);\n        animation: logoSlide430px;\n        animation-delay: 2500ms;\n        animation-timing-function: ease-in-out;\n        animation-duration: 500ms;\n        animation-fill-mode: forwards;\n    }\n\n    .logo {\n        animation: logoSlidePhone430px;\n        animation-delay: 2500ms;\n        animation-timing-function: ease-in-out;\n        animation-duration: 500ms;\n        animation-fill-mode: forwards;\n    }\n\n    .animated-logo {\n        height: 50px;\n    }\n\n    .input-design {\n        width: 300px;\n        height: 40px;\n    }\n\n    .grey-line {\n        width: 122px;\n    }\n\n    .login-google-btn {\n        width: 300px;\n        height: 40px;\n    }\n\n    .input-icon {\n        top: 13px;\n    }\n\n    .input-icon-lock {\n        top: 9px;\n    }\n\n    .input-icon-reveal {\n        top: 8px;\n    }\n\n    .formfield {\n        gap: 20px;\n    }\n}\n\n@media (max-width: 375px) {\n\n    .login-section {\n        padding: 20px;\n        max-width: 300px;\n        gap: 10px;\n        p {\n            max-width: 250px;\n        }\n    }\n\n    .sign-in-section {\n        display: none;\n    }\n\n    .sign-in-section-phone {\n        p{\n            font-size: 12px;\n        }\n        a {\n            font-size: 12px;\n        }\n    }\n\n    .logo-wrapper {\n        transform: translate(-50%, -50%);\n        animation: logoSlide375px;\n        animation-delay: 2500ms;\n        animation-timing-function: ease-in-out;\n        animation-duration: 500ms;\n        animation-fill-mode: forwards;\n    }\n\n    .logo {\n        animation: logoSlidePhone375px;\n        animation-delay: 2500ms;\n        animation-timing-function: ease-in-out;\n        animation-duration: 500ms;\n        animation-fill-mode: forwards;\n    }\n\n    .animated-logo {\n        height: 50px;\n    }\n\n    .input-design {\n        width: 250px;\n        height: 40px;\n    }\n\n    .grey-line {\n        width: 100px;\n    }\n\n    .login-google-btn {\n        width: 250px;\n        height: 40px;\n    }\n\n    .input-icon {\n        height: 12px;\n        top: 14px;\n    }\n\n    .input-icon-lock {\n        height: 16px;\n        top: 12px;\n    }\n\n    .input-icon-reveal {\n        top: 12px;\n        height: 20px;\n    }\n\n    .formfield {\n        gap: 10px;\n    }\n\n    .legal-section {\n        bottom: 10px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Neu bei DABubble?        Konto erstellen                Anmeldung        Wir empfehlen dir, die E-Mail-Adresse zu nutzen,            die du bei der Arbeit verwendest.                                                                                        *Diese E-Mail-Adresse ist leider ungültig.                                                                                                                            Passwort is erforderlich.                                                        {{ errorMessage }}                        Passwort vergessen?                                            ODER                                        Anmelden mit Google                            Anmelden                                    Gäste-Login                                    Neu bei DABubble?        Konto erstellen                Impressum        Datenschutz    '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogInComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/message.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkMark\n                            \n                            \n                                    Optional\n                                date\n                            \n                            \n                                day\n                            \n                            \n                                fileName\n                            \n                            \n                                fileUrl\n                            \n                            \n                                handshake\n                            \n                            \n                                hour\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                lastThreadMessage\n                            \n                            \n                                message\n                            \n                            \n                                milliseconds\n                            \n                            \n                                minute\n                            \n                            \n                                month\n                            \n                            \n                                nerdFace\n                            \n                            \n                                noted\n                            \n                            \n                                rocket\n                            \n                            \n                                seconds\n                            \n                            \n                                shushingFace\n                            \n                            \n                                    Optional\n                                threadCount\n                            \n                            \n                                thumbsDown\n                            \n                            \n                                thumbsUp\n                            \n                            \n                                uid\n                            \n                            \n                                user\n                            \n                            \n                                weekday\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj?: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/message.class.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        checkMark\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        day\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handshake\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastThreadMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        milliseconds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        month\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nerdFace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rocket\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seconds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shushingFace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        threadCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thumbsDown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thumbsUp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weekday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Message {\n  id?: string;\n  uid: any;\n  date?: boolean;\n  message: string;\n  weekday: string;\n  year: number;\n  month: number;\n  day: number;\n  hour: number;\n  minute: number;\n  seconds: number;\n  milliseconds: number;\n  user: any;\n  fileUrl: any;\n  fileName: any;\n  threadCount?: any;\n  lastThreadMessage?: any;\n  checkMark: any;\n  handshake: any;\n  thumbsUp: any;\n  thumbsDown: any;\n  rocket: any;\n  nerdFace: any;\n  noted: any;\n  shushingFace: any;\n\n  constructor(obj?: any) {\n    this.id = obj ? obj.id : '';\n    this.uid = obj ? obj.uid : '';\n    this.date = obj ? obj.date : '';\n    this.message = obj ? obj.message : '';\n    this.weekday = obj ? obj.weekday : '';\n    this.year = obj ? obj.year : '';\n    this.month = obj ? obj.month : '';\n    this.day = obj ? obj.day : '';\n    this.hour = obj ? obj.hour : '';\n    this.minute = obj ? obj.minute : '';\n    this.seconds = obj ? obj.seconds : '';\n    this.milliseconds = obj ? obj.milliseconds : '';\n    this.user = obj ? obj.user : '';\n    this.fileUrl = obj ? obj.fileUrl : '';\n    this.fileName = obj ? obj.fileName : '';\n    this.threadCount = obj ? obj.threadCount : '';\n    this.lastThreadMessage = obj ? obj.lastThreadMessage : '';\n    this.checkMark = obj ? obj.checkMark : '';\n    this.handshake = obj ? obj.handshake : '';\n    this.thumbsUp = obj ? obj.thumbsUp : '';\n    this.thumbsDown = obj ? obj.thumbsDown : '';\n    this.rocket = obj ? obj.rocket : '';\n    this.nerdFace = obj ? obj.nerdFace : '';\n    this.noted = obj ? obj.noted : '';\n    this.shushingFace = obj ? obj.shushingFace : '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewMessageComponent.html":{"url":"components/NewMessageComponent.html","title":"component - NewMessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewMessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/new-message/new-message/new-message.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-message\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NewMessageInputComponent\n                                NewMessageSearchResultsComponent\n                                NewMessageHeaderComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./new-message.component.html\n            \n\n\n\n            \n                styleUrl\n                ./new-message.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NewMessageInputComponent } from '../new-message-input/new-message-input.component';\nimport { NewMessageSearchResultsComponent } from '../new-message-search-results/new-message-search-results.component';\nimport { NewMessageHeaderComponent } from '../new-message-header/new-message-header.component';\n\n@Component({\n  selector: 'app-new-message',\n  standalone: true,\n  imports: [\n    NewMessageInputComponent,\n    NewMessageSearchResultsComponent,\n    NewMessageHeaderComponent,\n  ],\n  templateUrl: './new-message.component.html',\n  styleUrl: './new-message.component.scss',\n})\nexport class NewMessageComponent {}\n\n    \n\n    \n        \n  \n    \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewMessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewMessageHeaderComponent.html":{"url":"components/NewMessageHeaderComponent.html","title":"component - NewMessageHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewMessageHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/new-message/new-message-header/new-message-header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-message-header\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./new-message-header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./new-message-header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allChannel\n                            \n                            \n                                allChannelSorted\n                            \n                            \n                                allUser\n                            \n                            \n                                allUserSorted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setNoteChannel\n                            \n                            \n                                setNoteObjectUser\n                            \n                            \n                                sortResults\n                            \n                            \n                                subChannels\n                            \n                            \n                                subUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: Firestore, newMessageSelectionService: NewMessageSelectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/new-message/new-message-header/new-message-header.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        newMessageSelectionService\n                                                  \n                                                        \n                                                                        NewMessageSelectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/new-message/new-message-header/new-message-header.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNoteChannel\n                        \n                    \n                \n            \n            \n                \nsetNoteChannel(obj: any, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/new-message/new-message-header/new-message-header.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { id: string; channelCreatorUid: any; creationsDate: any; description: any; images: any; name: any; uids: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNoteObjectUser\n                        \n                    \n                \n            \n            \n                \nsetNoteObjectUser(obj: any, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/new-message/new-message-header/new-message-header.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { email: any; image: any; name: any; uid: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortResults\n                        \n                    \n                \n            \n            \n                \nsortResults(inputValue: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/new-message/new-message-header/new-message-header.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputValue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subChannels\n                        \n                    \n                \n            \n            \n                \nsubChannels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/new-message/new-message-header/new-message-header.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subUser\n                        \n                    \n                \n            \n            \n                \nsubUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/new-message/new-message-header/new-message-header.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/new-message/new-message-header/new-message-header.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allChannelSorted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/new-message/new-message-header/new-message-header.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/new-message/new-message-header/new-message-header.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allUserSorted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/new-message/new-message-header/new-message-header.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport {\n  Firestore,\n  collection,\n  limit,\n  onSnapshot,\n  query,\n} from '@angular/fire/firestore';\nimport { NewMessageSelectionService } from '../../../services/new-message-selection.service';\n\n@Component({\n  selector: 'app-new-message-header',\n  standalone: true,\n  imports: [],\n  templateUrl: './new-message-header.component.html',\n  styleUrl: './new-message-header.component.scss',\n})\nexport class NewMessageHeaderComponent implements OnInit {\n  allChannel: any;\n  allUser: any;\n  allUserSorted: any;\n  allChannelSorted: any;\n\n  constructor(\n    private firestore: Firestore,\n    private newMessageSelectionService: NewMessageSelectionService\n  ) {}\n\n  ngOnInit(): void {\n    this.subChannels();\n    this.subUser();\n  }\n\n  subChannels() {\n    const q = query(collection(this.firestore, 'Channels'), limit(1000));\n    onSnapshot(q, (list) => {\n      this.allChannel = [];\n      list.forEach((element) => {\n        this.allChannel.push(this.setNoteChannel(element.data(), element.id));\n      });\n    });\n  }\n\n  subUser() {\n    const q = query(collection(this.firestore, 'Users'), limit(1000));\n    onSnapshot(q, (list) => {\n      this.allUser = [];\n      list.forEach((element) => {\n        this.allUser.push(this.setNoteObjectUser(element.data(), element.id));\n      });\n      this.sortResults('');\n    });\n  }\n\n  setNoteChannel(obj: any, id: string) {\n    return {\n      id: id,\n      channelCreatorUid: obj.channelCreatorUid || '',\n      creationsDate: obj.creationsDate || '',\n      description: obj.description || '',\n      images: obj.images || '',\n      name: obj.name || '',\n      uids: obj.uids || '',\n    };\n  }\n\n  setNoteObjectUser(obj: any, id: string) {\n    return {\n      email: obj.email || '',\n      image: obj.image || '',\n      name: obj.name || '',\n      uid: obj.uid || '',\n    };\n  }\n\n  sortResults(inputValue: string) {\n    this.allChannelSorted = [];\n    this.allUserSorted = [];\n\n    const lowerCaseInputValue = inputValue.toLowerCase();\n\n    for (let i = 0; i \n    \n\n    \n        \n  Neue Nachricht\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Neue Nachricht  '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewMessageHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewMessageSearchResultsComponent.html":{"url":"components/NewMessageSearchResultsComponent.html","title":"component - NewMessageSearchResultsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewMessageSearchResultsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/new-message/new-message-search-results/new-message-search-results.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-message-search-results\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./new-message-search-results.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./new-message-search-results.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allChannelSorted\n                            \n                            \n                                allUserSorted\n                            \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                channelSelectionService\n                            \n                            \n                                currentUserId\n                            \n                            \n                                    Public\n                                newMessageSelectionService\n                            \n                            \n                                selectedChannel\n                            \n                            \n                                selectedElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setChannel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(newMessageSelectionService: NewMessageSelectionService, authService: AuthService, channelSelectionService: ChannelSelectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/new-message/new-message-search-results/new-message-search-results.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newMessageSelectionService\n                                                  \n                                                        \n                                                                        NewMessageSelectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelSelectionService\n                                                  \n                                                        \n                                                                        ChannelSelectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/new-message/new-message-search-results/new-message-search-results.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChannel\n                        \n                    \n                \n            \n            \n                \nsetChannel(uid: any, channel: any, index: number | null, event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/new-message/new-message-search-results/new-message-search-results.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                channel\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                index\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allChannelSorted\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main/new-message/new-message-search-results/new-message-search-results.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allUserSorted\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main/new-message/new-message-search-results/new-message-search-results.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/new-message/new-message-search-results/new-message-search-results.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelSelectionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelSelectionService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/new-message/new-message-search-results/new-message-search-results.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/new-message/new-message-search-results/new-message-search-results.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        newMessageSelectionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewMessageSelectionService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/new-message/new-message-search-results/new-message-search-results.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/new-message/new-message-search-results/new-message-search-results.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/new-message/new-message-search-results/new-message-search-results.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NewMessageSelectionService } from '../../../services/new-message-selection.service';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../../services/auth.service';\nimport { ChannelSelectionService } from '../../../services/channel-selection.service';\n\n@Component({\n  selector: 'app-new-message-search-results',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './new-message-search-results.component.html',\n  styleUrls: ['./new-message-search-results.component.scss'],\n})\nexport class NewMessageSearchResultsComponent implements OnInit {\n  allUserSorted: any[] = [];\n  allChannelSorted: any[] = [];\n  selectedElement: any;\n  currentUserId: any;\n  selectedChannel: string | undefined;\n  constructor(\n    public newMessageSelectionService: NewMessageSelectionService,\n    public authService: AuthService,\n    public channelSelectionService: ChannelSelectionService\n  ) { }\n\n  ngOnInit(): void {\n    (this.currentUserId = this.authService.currentUserSignal()?.uId),\n      this.newMessageSelectionService.getAllUserSorted().subscribe((data) => {\n        this.allUserSorted = data;\n      });\n    this.newMessageSelectionService.getAllChannelSorted().subscribe((data) => {\n      this.allChannelSorted = data;\n    });\n  }\n\n  setChannel(uid: any, channel: any, index: number | null, event: any) {\n    this.newMessageSelectionService.setselecteduid(uid);\n    this.newMessageSelectionService.setselectedChannel(channel);\n    this.selectedChannel = channel;\n    if (index !== null) {\n      this.channelSelectionService.selectedChannelIndex = index;\n    } if (this.selectedElement) {\n      this.selectedElement.classList.remove('selectedContent');\n    }\n    event.currentTarget.classList.add('selectedContent');\n    this.selectedElement = event.currentTarget;\n  }\n\n\n}\n\n    \n\n    \n        \n  Kanale:\n  \n    \n      \n      \n      \n        \n      \n      \n        \n      \n    \n        {{ element.name }}\n      \n\n      \n      \n      \n    \n        {{ element.name }}\n      \n    \n  \n  Benutzer:\n  \n    \n      \n        {{ element.name }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./new-message-search-results.component.scss\n                \n                .contentContainer {\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  gap: 10px;\n  height: calc(100% - 402px);\n  overflow: auto;\n  padding: 20px 45px;\n  font-size: 24px;\n}\n\n.channel {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 20px;\n  width: fit-content;\n  padding: 10px;\n  border-radius: 20px;\n  &:hover {\n    background-color: #eceefe;\n  }\n}\n\n.user {\n  &:hover {\n    background-color: #eceefe;\n  }\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 20px;\n  width: fit-content;\n  padding: 10px;\n  border-radius: 20px;\n  img {\n    width: 80px;\n    height: 80px;\n    border-radius: 100%;\n  }\n}\n\n.selectedContent {\n  background-color: #c8d1fc !important;\n}\n\n@media (max-width: 500px) {\n  .title-mobile{\n    font-size: 25px;\n  }\n\n  .user{\n    gap: 10px;\n    img{\n      height: 40px;\n      width: 40px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Kanale:                                                                      {{ element.name }}                                    {{ element.name }}              Benutzer:                    {{ element.name }}            '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewMessageSearchResultsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewMessageSelectionService.html":{"url":"injectables/NewMessageSelectionService.html","title":"injectable - NewMessageSelectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NewMessageSelectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/new-message-selection.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                allChannelSortedSubject\n                            \n                            \n                                    Private\n                                allUserSortedSubject\n                            \n                            \n                                    Private\n                                selectedChannel\n                            \n                            \n                                    Private\n                                uid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllChannelSorted\n                            \n                            \n                                getAllUserSorted\n                            \n                            \n                                getselectedChannel\n                            \n                            \n                                getselecteduid\n                            \n                            \n                                setAllChannelSorted\n                            \n                            \n                                setAllUserSorted\n                            \n                            \n                                setselectedChannel\n                            \n                            \n                                setselecteduid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllChannelSorted\n                        \n                    \n                \n            \n            \n                \ngetAllChannelSorted()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/new-message-selection.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Returns an observable of the sorted channel data.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \nAn observable that emits the sorted channel data.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUserSorted\n                        \n                    \n                \n            \n            \n                \ngetAllUserSorted()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/new-message-selection.service.ts:28\n                        \n                    \n\n\n            \n                \n                        Returns an observable of the sorted user data.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \nAn observable that emits the sorted user data.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getselectedChannel\n                        \n                    \n                \n            \n            \n                \ngetselectedChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/new-message-selection.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Returns an observable of the selected channel data.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \nAn observable that emits the selected channel data.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getselecteduid\n                        \n                    \n                \n            \n            \n                \ngetselecteduid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/new-message-selection.service.ts:85\n                        \n                    \n\n\n            \n                \n                        Returns an observable of the selected user ID data.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \nAn observable that emits the selected user ID data.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAllChannelSorted\n                        \n                    \n                \n            \n            \n                \nsetAllChannelSorted(data: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/new-message-selection.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Sets the sorted channel data and emits it to subscribers.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe sorted channel data to be set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAllUserSorted\n                        \n                    \n                \n            \n            \n                \nsetAllUserSorted(data: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/new-message-selection.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Sets the sorted user data and emits it to subscribers.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe sorted user data to be set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setselectedChannel\n                        \n                    \n                \n            \n            \n                \nsetselectedChannel(data: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/new-message-selection.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Sets the selected channel data and emits it to subscribers.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected channel data to be set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setselecteduid\n                        \n                    \n                \n            \n            \n                \nsetselecteduid(data: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/new-message-selection.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Sets the selected user ID data and emits it to subscribers.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected user ID data to be set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        allChannelSortedSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/new-message-selection.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        allUserSortedSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/new-message-selection.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedChannel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/new-message-selection.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/new-message-selection.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NewMessageSelectionService {\n  private allUserSortedSubject = new BehaviorSubject([]);\n  private allChannelSortedSubject = new BehaviorSubject([]);\n  private selectedChannel = new BehaviorSubject([]);\n  private uid = new BehaviorSubject([]);\n\n  /**\n   * Sets the sorted user data and emits it to subscribers.\n   *\n   * @param {any[]} data - The sorted user data to be set.\n   * @returns {void}\n   */\n  setAllUserSorted(data: any[]) {\n    this.allUserSortedSubject.next(data);\n  }\n\n  /**\n   * Returns an observable of the sorted user data.\n   *\n   * @returns {Observable} - An observable that emits the sorted user data.\n   */\n  getAllUserSorted() {\n    return this.allUserSortedSubject.asObservable(); // Return as Observable\n  }\n\n  /**\n   * Sets the sorted channel data and emits it to subscribers.\n   *\n   * @param {any[]} data - The sorted channel data to be set.\n   * @returns {void}\n   */\n  setAllChannelSorted(data: any[]) {\n    this.allChannelSortedSubject.next(data);\n  }\n\n  /**\n   * Returns an observable of the sorted channel data.\n   *\n   * @returns {Observable} - An observable that emits the sorted channel data.\n   */\n  getAllChannelSorted() {\n    return this.allChannelSortedSubject.asObservable(); // Return as Observable\n  }\n\n  /**\n   * Sets the selected channel data and emits it to subscribers.\n   *\n   * @param {any[]} data - The selected channel data to be set.\n   * @returns {void}\n   */\n  setselectedChannel(data: any[]) {\n    this.selectedChannel.next(data);\n  }\n\n  /**\n   * Returns an observable of the selected channel data.\n   *\n   * @returns {Observable} - An observable that emits the selected channel data.\n   */\n  getselectedChannel() {\n    return this.selectedChannel.asObservable(); // Return as Observable\n  }\n\n  /**\n   * Sets the selected user ID data and emits it to subscribers.\n   *\n   * @param {any[]} data - The selected user ID data to be set.\n   * @returns {void}\n   */\n  setselecteduid(data: any[]) {\n    this.uid.next(data);\n  }\n\n  /**\n   * Returns an observable of the selected user ID data.\n   *\n   * @returns {Observable} - An observable that emits the selected user ID data.\n   */\n  getselecteduid() {\n    return this.uid.asObservable(); // Return as Observable\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OnlineService.html":{"url":"injectables/OnlineService.html","title":"injectable - OnlineService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OnlineService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/online.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/online.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OnlineService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OpenImgComponent.html":{"url":"components/OpenImgComponent.html","title":"component - OpenImgComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OpenImgComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/open-img/open-img.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-open-img\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./open-img.component.html\n            \n\n\n\n            \n                styleUrl\n                ./open-img.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelSelectionService\n                            \n                            \n                                src\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getImageDimensionBasedOnAspect\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stopEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(channelSelectionService: ChannelSelectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/open-img/open-img.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channelSelectionService\n                                                  \n                                                        \n                                                                        ChannelSelectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getImageDimensionBasedOnAspect\n                        \n                    \n                \n            \n            \n                \ngetImageDimensionBasedOnAspect(src: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/open-img/open-img.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Determines whether the provided image source has a greater width or height based on its aspect ratio.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                src\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe source URL of the image.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"width\" | \"height\"\n\n                        \n                            \n                                \nReturns 'width' if the image is wider than it is tall, otherwise returns 'height'.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/open-img/open-img.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopEvent\n                        \n                    \n                \n            \n            \n                \nstopEvent(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/open-img/open-img.component.ts:28\n                        \n                    \n\n\n            \n                \n                        Stops the propagation of the specified event, preventing it from bubbling up to parent elements.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event object to stop propagation for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelSelectionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelSelectionService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/open-img/open-img.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main/open-img/open-img.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ChannelSelectionService } from '../../services/channel-selection.service';\n\n@Component({\n  selector: 'app-open-img',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './open-img.component.html',\n  styleUrl: './open-img.component.scss',\n})\nexport class OpenImgComponent implements OnInit {\n  src = '';\n  constructor(public channelSelectionService: ChannelSelectionService) {}\n\n  ngOnInit(): void {\n    this.channelSelectionService.getselectedIMG().subscribe((src) => {\n      this.src = src;\n    });\n  }\n\n  /**\n   * Stops the propagation of the specified event, preventing it from bubbling up to parent elements.\n   *\n   * @param {any} event - The event object to stop propagation for.\n   * @returns {void}\n   */\n  stopEvent(event: any): void {\n    event.stopPropagation();\n  }\n\n  /**\n   * Determines whether the provided image source has a greater width or height based on its aspect ratio.\n   *\n   * @param {string} src - The source URL of the image.\n   * @returns {'width' | 'height'} - Returns 'width' if the image is wider than it is tall, otherwise returns 'height'.\n   */\n  getImageDimensionBasedOnAspect(src: string): 'width' | 'height' {\n    const img = new Image();\n    img.src = src;\n\n    if (img.width > img.height) {\n      return 'width';\n    } else {\n      return 'height';\n    }\n  }\n}\n\n    \n\n    \n         1\"\n  (click)=\"channelSelectionService.setSelectedImg('')\"\n>\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 1\"  (click)=\"channelSelectionService.setSelectedImg(\\'\\')\">  '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OpenImgComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OpenSidebarComponent.html":{"url":"components/OpenSidebarComponent.html","title":"component - OpenSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OpenSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/open-sidebar/open-sidebar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-open-sidebar\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./open-sidebar.component.scss,./open-sidebar-responsiv.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./open-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideOrShowSidebar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openSidebarMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openSidebarMenu\n                        \n                    \n                \n            \n            \n                \nopenSidebarMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/open-sidebar/open-sidebar.component.ts:23\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of the sidebar menu.\nThis method updates the sidebarOpen property in the hideOrShowSidebar\nobject, switching its value between true and false.\nIf the sidebar is currently open, it will close it,\nand if it is closed, it will open it.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hideOrShowSidebar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SidebarService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/open-sidebar/open-sidebar.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { SidebarService } from '../../services/sidebar.service';\n\n@Component({\n  selector: 'app-open-sidebar',\n  standalone: true,\n  imports: [],\n  templateUrl: './open-sidebar.component.html',\n  styleUrls: ['./open-sidebar.component.scss', './open-sidebar-responsiv.component.scss']\n})\nexport class OpenSidebarComponent {\n\n  hideOrShowSidebar = inject(SidebarService);\n\n  /**\n * Toggles the visibility of the sidebar menu.\n * \n * This method updates the `sidebarOpen` property in the `hideOrShowSidebar` \n * object, switching its value between true and false. \n * If the sidebar is currently open, it will close it, \n * and if it is closed, it will open it.\n */\n  openSidebarMenu(){\n    this.hideOrShowSidebar.sidebarOpen = !this.hideOrShowSidebar.sidebarOpen;\n  }\n\n}\n\n    \n\n    \n        @if(hideOrShowSidebar.sidebarOpen){\n    \n        \n            Workspace-Menü öffen\n            \n        \n    \n}@else{\n\n    \n        Workspace-Menü schließen\n        \n    \n\n}\n\n    \n\n    \n                \n                    ./open-sidebar.component.scss\n                \n                .open-sidebar-button-container {\n    width: 50px;\n    height: 297px;\n    border-radius: 0px 30px 30px 0px;\n    box-shadow: 4px 4px 7px 0px #00000033;\n    background-color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    &:hover {\n        .open-menu-text {\n            color: rgba(83,90,241,1);\n        }\n        .rotated-icon {\n            background-image: url('../../../assets/img/open-menu/Show\\ menu2.png');\n        }\n    }\n}\n\n.rotated-text {\n    white-space: nowrap;\n    transform: rotate(-90deg) translateX(-10px);\n    height: 28px;\n}\n\n.open-menu-text {\n    font-weight: 700;\n    margin-right: 12px;\n    transform: translateX(20px);\n}\n\n.rotated-icon {\n    transform: rotate(-90deg) translateX(30px) translateY(220px);\n    background-image: url('../../../assets/img/open-menu/Show menu.png');\n    width: 32px;\n    height: 32px;\n}\n\n.open-sidebar-button-container-opened {\n    width: 50px;\n    height: 347px;\n    border-radius: 0px 30px 30px 0px;\n    box-shadow: 4px 4px 7px 0px #00000033;\n    background-color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    &:hover {\n        .open-menu-text-opened {\n            color: rgba(83,90,241,1);\n        }\n        .rotated-icon-opened {\n            background-image: url('../../../assets/img/open-menu/Show\\ menu4.png');\n        }\n    }\n}\n\n.rotated-text-opened {\n    white-space: nowrap;\n    transform: rotate(-90deg) translateX(-15px) translateY(0.5px);\n    height: 28px;\n}\n\n.open-menu-text-opened {\n    font-weight: 700;\n    margin-right: 12px;\n    transform: translateX(20px);\n}\n\n.rotated-icon-opened {\n    transform: rotate(-90deg) translateX(30px) translateY(260px);\n    background-image: url('../../../assets/img/open-menu/Show menu3.png');\n    width: 32px;\n    height: 32px;\n}\n                \n                    ./open-sidebar-responsiv.component.scss\n                \n                @media(max-width: 1000px){\n    .open-sidebar-button-container, .open-sidebar-button-container-opened {\n        display: none;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if(hideOrShowSidebar.sidebarOpen){                        Workspace-Menü öffen                        }@else{            Workspace-Menü schließen            }'\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OpenSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordResetComponent.html":{"url":"components/PasswordResetComponent.html","title":"component - PasswordResetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordResetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing_page/password-reset/password-reset.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-reset\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./password-reset.component.html\n            \n\n\n\n            \n                styleUrl\n                ./password-reset.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                errorMessage\n                            \n                            \n                                fb\n                            \n                            \n                                form\n                            \n                            \n                                imgSrcArrow\n                            \n                            \n                                revealPasswordService\n                            \n                            \n                                route\n                            \n                            \n                                router\n                            \n                            \n                                succes\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                            \n                                passwordsMatchValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing_page/password-reset/password-reset.component.ts:29\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing_page/password-reset/password-reset.component.ts:39\n                        \n                    \n\n\n            \n                \n                        Handles the form submission for resetting the password.\nValidates the form and calls the changePassword method from AuthService.\nOn success, sets succes to true and navigates to the homepage after a short delay.\nOn error, sets an error message to display to the user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing_page/password-reset/password-reset.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Custom validator to check if the newPassword and confirmPassword fields match.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe form control group containing the password fields.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type | null\n\n                        \n                            \n                                Returns an object with an error key if the passwords don't match, otherwise null.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/password-reset/password-reset.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/password-reset/password-reset.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/password-reset/password-reset.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.fb.group({\n    newPassword: ['', [Validators.required, Validators.minLength(6)]],\n    confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\n  }, { validators: this.passwordsMatchValidator })\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/password-reset/password-reset.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imgSrcArrow\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '../../../assets/img/landing-page/arrow-back.png'\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/password-reset/password-reset.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        revealPasswordService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RevealPasswordService)\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/password-reset/password-reset.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/password-reset/password-reset.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/password-reset/password-reset.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        succes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/password-reset/password-reset.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/password-reset/password-reset.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { FormBuilder, Validators, ReactiveFormsModule, FormGroup, AbstractControl } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RevealPasswordService } from '../../services/reveal-password.service';\n\n@Component({\n  selector: 'app-password-reset',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './password-reset.component.html',\n  styleUrl: './password-reset.component.scss'\n})\nexport class PasswordResetComponent {\n  authService = inject(AuthService);\n  fb = inject(FormBuilder);\n  route = inject(ActivatedRoute);\n  router = inject(Router);\n  revealPasswordService = inject(RevealPasswordService);\n  imgSrcArrow: string = '../../../assets/img/landing-page/arrow-back.png';\n  succes: boolean = false;\n  errorMessage: string | null = null;\n  successMessage: string | null = null;\n\n  form: FormGroup = this.fb.group({\n    newPassword: ['', [Validators.required, Validators.minLength(6)]],\n    confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\n  }, { validators: this.passwordsMatchValidator });\n  \n  constructor() {}\n\n  /**\n   * Handles the form submission for resetting the password.\n   * Validates the form and calls the `changePassword` method from `AuthService`.\n   * On success, sets `succes` to true and navigates to the homepage after a short delay.\n   * On error, sets an error message to display to the user.\n   */\n  onSubmit(): void {\n    const newPassword = this.form.get('newPassword')?.value;\n    const actionCode = this.route.snapshot.queryParams['oobCode'];\n\n    if (newPassword && this.form.valid) {\n      this.authService.changePassword(actionCode, newPassword).then(() => {\n        this.succes = true;\n          setTimeout(() => {\n            this.succes = false;\n            this.router.navigateByUrl('/');\n          }, 500);\n      }).catch((err) => {\n        this.errorMessage = 'Failed to reset password: ' + err.message;\n      });\n    }\n  }\n\n  /**\n   * Custom validator to check if the `newPassword` and `confirmPassword` fields match.\n   * @param {AbstractControl} control - The form control group containing the password fields.\n   * @returns {object | null} Returns an object with an error key if the passwords don't match, otherwise null.\n   */\n  passwordsMatchValidator(control: AbstractControl): { [key: string]: boolean } | null {\n    const newPassword = control.get('newPassword');\n    const confirmPassword = control.get('confirmPassword');\n    if (newPassword && confirmPassword && newPassword.value !== confirmPassword.value) {\n      return { passwordsMismatch: true };\n    }\n    return null;\n  }\n\n}\n\n\n\n\n    \n\n    \n        \n\n    \n\n    \n        \n\n        Passwort zurücksetzen\n\n        \n            \n            \n            \n            \n                Das Passwort muss mindestens 6 Zeichen lang sein.\n            \n        \n\n        \n            \n            \n            \n            \n                Die Passwörter stimmen nicht überein.\n            \n        \n\n        \n            \n                Passwort ändern\n            \n        \n    \n\n    \n        Impressum\n        Datenschutz\n    \n\n    \n        \n            \n            Anmelden\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Passwort zurücksetzen                                                                        Das Passwort muss mindestens 6 Zeichen lang sein.                                                                                            Die Passwörter stimmen nicht überein.                                                        Passwort ändern                                    Impressum        Datenschutz                                        Anmelden            '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordResetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivacyPolicyComponent.html":{"url":"components/PrivacyPolicyComponent.html","title":"component - PrivacyPolicyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PrivacyPolicyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing_page/privacy-policy/privacy-policy.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-privacy-policy\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./privacy-policy.component.html\n            \n\n\n\n            \n                styleUrl\n                ./privacy-policy.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                imgSrcArrow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing_page/privacy-policy/privacy-policy.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing_page/privacy-policy/privacy-policy.component.ts:20\n                        \n                    \n\n\n            \n                \n                        Redirects to the last visited page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        imgSrcArrow\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '../../../assets/img/landing-page/arrow-back.png'\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/privacy-policy/privacy-policy.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {Location} from '@angular/common';\n\n@Component({\n  selector: 'app-privacy-policy',\n  standalone: true,\n  imports: [],\n  templateUrl: './privacy-policy.component.html',\n  styleUrl: './privacy-policy.component.scss'\n})\nexport class PrivacyPolicyComponent {\n  imgSrcArrow: string = '../../../assets/img/landing-page/arrow-back.png';\n\n  constructor(private _location: Location){\n  }\n\n  /**\n   * Redirects to the last visited page.\n   */\n  goBack() {\n    this._location.back();\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n\n        \n            Datenschutzerklärung\n            Willkommen bei DABubble. Der Schutz Ihrer persönlichen Daten ist uns sehr wichtig. In\n                dieser Datenschutzerklärung informieren wir Sie darüber, welche Daten wir erheben, wie wir sie verwenden\n                und welche Rechte Sie bezüglich Ihrer Daten haben.\n\n            1. Verantwortliche Personen\n            Die Verantwortlichen für die Datenverarbeitung in Zusammenhang mit der Nutzung von DABubble\n                sind:\n            \n                Márk Hegedüs\n                Joost Heidrich\n                Gábor Holzleiter\n            \n\n            2. Erhobene Daten\n            Bei der Registrierung erheben wir folgende Daten:\n            \n                E-Mail-Adresse\n                Name\n                Passwort\n            \n\n            3. Verwendung der Daten\n            Die erhobenen Daten werden ausschließlich für folgende Zwecke verwendet:\n            \n                Bereitstellung der Chat-Anwendung\n                Verwaltung Ihres Benutzerkontos\n                Gewährleistung der Sicherheit und Funktionalität der Anwendung\n            \n\n            4. Weitergabe der Daten\n            Ihre Daten werden nicht an Dritte weitergegeben, es sei denn, dies ist zur Erfüllung\n                unserer vertraglichen Verpflichtungen notwendig oder gesetzlich vorgeschrieben.\n\n            5. Ihre Rechte\n            Sie haben das Recht, jederzeit Auskunft über die bei uns gespeicherten personenbezogenen\n                Daten zu erhalten. Außerdem haben Sie das Recht auf Berichtigung, Löschung und Einschränkung der\n                Verarbeitung Ihrer Daten sowie das Recht auf Datenübertragbarkeit.\n\n            6. Kontakt\n            Bei Fragen zur Erhebung, Verarbeitung oder Nutzung Ihrer personenbezogenen Daten, bei\n                Auskünften, Berichtigung, Sperrung oder Löschung von Daten sowie Widerruf erteilter Einwilligungen\n                wenden Sie sich bitte an:\n            \n                Márk Hegedüs\n                Joost Heidrich\n                Gábor Holzleiter\n            \n\n            7. Änderungen dieser Datenschutzerklärung\n            Wir behalten uns vor, diese Datenschutzerklärung jederzeit zu ändern, um sie an geänderte\n                Rechtslagen oder Änderungen des Dienstes sowie der Datenverarbeitung anzupassen.\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Datenschutzerklärung            Willkommen bei DABubble. Der Schutz Ihrer persönlichen Daten ist uns sehr wichtig. In                dieser Datenschutzerklärung informieren wir Sie darüber, welche Daten wir erheben, wie wir sie verwenden                und welche Rechte Sie bezüglich Ihrer Daten haben.            1. Verantwortliche Personen            Die Verantwortlichen für die Datenverarbeitung in Zusammenhang mit der Nutzung von DABubble                sind:                            Márk Hegedüs                Joost Heidrich                Gábor Holzleiter                        2. Erhobene Daten            Bei der Registrierung erheben wir folgende Daten:                            E-Mail-Adresse                Name                Passwort                        3. Verwendung der Daten            Die erhobenen Daten werden ausschließlich für folgende Zwecke verwendet:                            Bereitstellung der Chat-Anwendung                Verwaltung Ihres Benutzerkontos                Gewährleistung der Sicherheit und Funktionalität der Anwendung                        4. Weitergabe der Daten            Ihre Daten werden nicht an Dritte weitergegeben, es sei denn, dies ist zur Erfüllung                unserer vertraglichen Verpflichtungen notwendig oder gesetzlich vorgeschrieben.            5. Ihre Rechte            Sie haben das Recht, jederzeit Auskunft über die bei uns gespeicherten personenbezogenen                Daten zu erhalten. Außerdem haben Sie das Recht auf Berichtigung, Löschung und Einschränkung der                Verarbeitung Ihrer Daten sowie das Recht auf Datenübertragbarkeit.            6. Kontakt            Bei Fragen zur Erhebung, Verarbeitung oder Nutzung Ihrer personenbezogenen Daten, bei                Auskünften, Berichtigung, Sperrung oder Löschung von Daten sowie Widerruf erteilter Einwilligungen                wenden Sie sich bitte an:                            Márk Hegedüs                Joost Heidrich                Gábor Holzleiter                        7. Änderungen dieser Datenschutzerklärung            Wir behalten uns vor, diese Datenschutzerklärung jederzeit zu ändern, um sie an geänderte                Rechtslagen oder Änderungen des Dienstes sowie der Datenverarbeitung anzupassen.            '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrivacyPolicyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfilOptionsPopupComponent.html":{"url":"components/ProfilOptionsPopupComponent.html","title":"component - ProfilOptionsPopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfilOptionsPopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/header/profil-options-popup/profil-options-popup.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profil-options-popup\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./profil-options-popup.component.scss,./profil-options-popup-responsive.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profil-options-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                hideOrShowPopUp\n                            \n                            \n                                responsiveService\n                            \n                            \n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                logOut\n                            \n                            \n                                notCloseDialog\n                            \n                            \n                                openProfil\n                            \n                            \n                                resetViewState\n                            \n                            \n                                toJSON\n                            \n                            \n                                    Async\n                                userOffline\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/header/profil-options-popup/profil-options-popup.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/header/profil-options-popup/profil-options-popup.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Closes the pop-up dialog.\nThis method sets the popUpOpen property to false,\neffectively closing any currently open pop-up dialog.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/header/profil-options-popup/profil-options-popup.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Logs the user out of the application.\nThis method calls the logout service and navigates the user\nback to the home page upon successful logout. It also resets\nthe view state and updates the user's offline status.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notCloseDialog\n                        \n                    \n                \n            \n            \n                \nnotCloseDialog(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/header/profil-options-popup/profil-options-popup.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Prevents the pop-up dialog from closing when an event occurs.\nThis method stops the propagation of the event e, which\nprevents the dialog from being closed unintentionally\nduring specific user interactions.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event object from the user interaction.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openProfil\n                        \n                    \n                \n            \n            \n                \nopenProfil()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/header/profil-options-popup/profil-options-popup.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Opens the user profile editing dialog.\nThis method sets the editProfilOpen property to true,\nallowing the user to edit their profile information.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetViewState\n                        \n                    \n                \n            \n            \n                \nresetViewState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/header/profil-options-popup/profil-options-popup.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Resets the view state of the application.\nThis method closes the pop-up, resets the current channel\nnumber to 0, sets the online status to false, and updates\nthe state of the responsive service to ensure that all\nchannels and sidebar views are closed or reset as necessary.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/header/profil-options-popup/profil-options-popup.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { online: string; onlineSince: any; uId: any; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        userOffline\n                        \n                    \n                \n            \n            \n                \n                        \n                    userOffline()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/header/profil-options-popup/profil-options-popup.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Updates the user's online status to offline in the Firestore database.\nThis method creates a document reference for the current user\nin the 'online' collection and sets the user's online status\nto offline.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/header/profil-options-popup/profil-options-popup.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideOrShowPopUp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SidebarService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/header/profil-options-popup/profil-options-popup.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        responsiveService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ResponsiveService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/header/profil-options-popup/profil-options-popup.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/header/profil-options-popup/profil-options-popup.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { SidebarService } from '../../../services/sidebar.service';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../../../services/auth.service';\nimport { Router } from '@angular/router';\nimport {\n  Firestore,\n  collection,\n  doc,\n  setDoc,\n  updateDoc,\n} from '@angular/fire/firestore';\nimport { ResponsiveService } from '../../../services/responsive.service';\n\n\n@Component({\n  selector: 'app-profil-options-popup',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './profil-options-popup.component.html',\n  styleUrls: ['./profil-options-popup.component.scss', './profil-options-popup-responsive.component.scss']\n})\nexport class ProfilOptionsPopupComponent {\n  authService = inject(AuthService)\n  hideOrShowPopUp = inject(SidebarService);\n  router = inject(Router);\n  responsiveService = inject(ResponsiveService);\n\n  constructor(private firestore : Firestore) {}\n\n  /**\n * Closes the pop-up dialog.\n * \n * This method sets the `popUpOpen` property to false, \n * effectively closing any currently open pop-up dialog.\n */\n  closeDialog(){\n    this.hideOrShowPopUp.popUpOpen = false;\n  }\n\n  /**\n * Prevents the pop-up dialog from closing when an event occurs.\n * \n * This method stops the propagation of the event `e`, which \n * prevents the dialog from being closed unintentionally \n * during specific user interactions.\n * \n * @param {any} e - The event object from the user interaction.\n */\n  notCloseDialog(e : any){\n    e.stopPropagation(e);\n  }\n\n  /**\n * Opens the user profile editing dialog.\n * \n * This method sets the `editProfilOpen` property to true, \n * allowing the user to edit their profile information.\n */\n  openProfil(){\n    this.hideOrShowPopUp.editProfilOpen = true;\n  }\n\n  /**\n * Resets the view state of the application.\n * \n * This method closes the pop-up, resets the current channel \n * number to 0, sets the online status to false, and updates \n * the state of the responsive service to ensure that all \n * channels and sidebar views are closed or reset as necessary.\n */\n  resetViewState(){\n    this.hideOrShowPopUp.popUpOpen = false;\n    this.hideOrShowPopUp.currentChannelNumber = 0;\n    this.hideOrShowPopUp.online = false;\n    this.responsiveService.isChannelOpen = false;\n    this.responsiveService.isDirectMessageOpen = false;\n    this.responsiveService.isThreadOpen = false;\n    this.responsiveService.isSidebarOpen = true;\n  }\n\n  /**\n * Logs the user out of the application.\n * \n * This method calls the logout service and navigates the user \n * back to the home page upon successful logout. It also resets \n * the view state and updates the user's offline status.\n */\n  logOut() {\n    this.authService.logOut().subscribe(() => {\n      this.router.navigate(['/']);\n    });\n    this.resetViewState();\n    this.userOffline();\n  }\n\n  /**\n * Updates the user's online status to offline in the Firestore database.\n * \n * This method creates a document reference for the current user \n * in the 'online' collection and sets the user's online status \n * to offline.\n */\n  async userOffline(){\n    const userRef = doc(\n      collection(this.firestore, 'online'),\n      this.authService.currentUserSignal()?.uId\n    );\n    await setDoc(userRef, this.toJSON())\n  }\n\n  /*\n * Converts the user's status to a JSON object.\n * \n * This method returns an object containing the user's online status,\n * the time they went offline, and their user ID.\n * \n * @returns {Object} - The user's online status data.\n */\n  toJSON(){\n    return {\n      online : \"no\" ,\n      onlineSince : new Date().getTime() ,\n      uId : this.authService.currentUserSignal()?.uId\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n                \n                Profil\n            \n            \n                \n                Log out\n            \n        \n\n    \n\n    \n\n    \n                \n                    ./profil-options-popup.component.scss\n                \n                .display-flex {\n    display: flex;\n}\n\n.display-none {\n    display: none;\n}\n\n.profil-options-popup-container {\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.4);\n    position: fixed;\n    left: 0;\n    top: 0;\n    z-index: 4;\n}\n\n.dialog {\n    background-color: white;\n    position: absolute;\n    gap: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    width: 282px;\n    height: 181px;\n    gap: 32px;\n    border-radius: 30px 0px 30px 30px;\n    top: 100px;\n    right: 40px;\n}\n\nspan {\n    font-weight: 600;\n}\n\n.button {\n    height: 33px;\n    padding: 8px;\n    border-radius: 33px;\n    white-space: nowrap;\n    text-align: center;\n    cursor: pointer;\n\n    &:hover {\n        color: rgba(121, 126, 243, 1);\n        background-color: #ECEEFE;\n\n        .profile-icon{\n            background-image: url('/assets/img/open-menu/account_circle_focus.png');\n        }\n\n        .log-out-icon{\n            background-image: url('/assets/img/open-menu/logout_focus.png');\n        }\n    }\n\n    &:focus {\n        color: rgba(121, 126, 243, 1);\n        background-color: #ECEEFE;\n\n        .profile-icon{\n            background-image: url('/assets/img/open-menu/account_circle_focus.png');\n        }\n\n        .log-out-icon{\n            background-image: url('/assets/img/open-menu/logout_focus.png');\n        }\n    }\n}\n\n.button-icon {\n    width: 24px;\n    height: 24px;\n    background-size: contain;\n    background-repeat: no-repeat;\n    display: none;\n}\n\n.profile-icon {\n    background-image: url('/assets/img/open-menu/account_circle.png');\n    \n}\n\n.log-out-icon {\n    background-image: url('/assets/img/open-menu/logout.png');\n}\n\n.rectangle {\n    display: none;\n}\n                \n                    ./profil-options-popup-responsive.component.scss\n                \n                @media(max-width: 1000px){\n    .dialog {\n        width: 100vw;\n        height: 181px;\n        gap: 32px;\n        border-radius: 30px 30px 0px 0px;\n        top : calc(100vh - 181px);\n        right: 0px;\n    }\n\n    .button-icon{\n        display: block;\n    }\n\n    .rectangle{\n        display: block;\n    }\n\n    .button{\n        width: 70%;\n        display: flex;\n        align-items: center;\n        gap: 15px;\n    }\n\n    .button-container{\n        width: 100%;\n        display: flex;\n        justify-content: start;\n        flex-direction: column;\n        align-items: center;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Profil                                                        Log out                        '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfilOptionsPopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReactionListComponent.html":{"url":"components/ReactionListComponent.html","title":"component - ReactionListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReactionListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/reaction-list/reaction-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reaction-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reaction-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reaction-list.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allUser\n                            \n                            \n                                authService\n                            \n                            \n                                    Public\n                                channelSelectionService\n                            \n                            \n                                selectedReaction\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setNoteObjectUser\n                            \n                            \n                                setOpenUser\n                            \n                            \n                                splitStringBySpace\n                            \n                            \n                                subUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(channelSelectionService: ChannelSelectionService, firestore: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/reaction-list/reaction-list.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channelSelectionService\n                                                  \n                                                        \n                                                                        ChannelSelectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(uid: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/reaction-list/reaction-list.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/reaction-list/reaction-list.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNoteObjectUser\n                        \n                    \n                \n            \n            \n                \nsetNoteObjectUser(obj: any, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/reaction-list/reaction-list.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { email: any; image: any; name: any; uid: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOpenUser\n                        \n                    \n                \n            \n            \n                \nsetOpenUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/reaction-list/reaction-list.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        splitStringBySpace\n                        \n                    \n                \n            \n            \n                \nsplitStringBySpace(input: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/reaction-list/reaction-list.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subUser\n                        \n                    \n                \n            \n            \n                \nsubUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/reaction-list/reaction-list.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main/reaction-list/reaction-list.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/reaction-list/reaction-list.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelSelectionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelSelectionService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/reaction-list/reaction-list.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedReaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/reaction-list/reaction-list.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/reaction-list/reaction-list.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { ChannelSelectionService } from '../../services/channel-selection.service';\nimport { CommonModule } from '@angular/common';\nimport {\n  Firestore,\n  addDoc,\n  collection,\n  deleteDoc,\n  deleteField,\n  doc,\n  getDoc,\n  getDocs,\n  limit,\n  onSnapshot,\n  query,\n  setDoc,\n  updateDoc,\n} from '@angular/fire/firestore';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-reaction-list',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './reaction-list.component.html',\n  styleUrl: './reaction-list.component.scss',\n})\nexport class ReactionListComponent {\n  user: any;\n  allUser: any = [];\n  selectedReaction: any;\n\n  authService = inject(AuthService);\n\n  constructor(\n    public channelSelectionService: ChannelSelectionService,\n    private firestore: Firestore\n  ) {}\n  ngOnInit(): void {\n    this.channelSelectionService.getselectedReaction().subscribe((reaction) => {\n      this.selectedReaction = reaction;\n    });\n    this.setOpenUser();\n    this.subUser();\n  }\n\n  setOpenUser() {\n    this.user = this.authService.currentUserSignal()?.uId;\n  }\n\n  subUser() {\n    const q = query(collection(this.firestore, 'Users'), limit(1000));\n    onSnapshot(q, (list) => {\n      this.allUser = [];\n      list.forEach((element) => {\n        this.allUser.push(this.setNoteObjectUser(element.data(), element.id));\n      });\n    });\n  }\n\n  setNoteObjectUser(obj: any, id: string) {\n    return {\n      email: obj.email || '',\n      image: obj.image || '',\n      name: obj.name || '',\n      uid: obj.uid || '',\n    };\n  }\n\n  getUser(uid: any) {\n    for (let i = 0; i \n    \n\n    \n        \n  \n    \n       du\n      \n        {{ getUser(content).name }}\n      \n        und\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             du              {{ getUser(content).name }}              und            '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReactionListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing_page/reset-password/reset-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                emailSent\n                            \n                            \n                                errorMessage\n                            \n                            \n                                fb\n                            \n                            \n                                form\n                            \n                            \n                                imgSrcArrow\n                            \n                            \n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing_page/reset-password/reset-password.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing_page/reset-password/reset-password.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Navigates the user back to the previous page.\nUses the Location service to handle browser history.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing_page/reset-password/reset-password.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Handles the form submission to trigger a password reset email.\nIf the form is valid, it calls the passwordReset method from AuthService.\nOn success, sets emailSent to true and navigates to the homepage after a short delay.\nOn failure, logs the error to the console.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/reset-password/reset-password.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailSent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/reset-password/reset-password.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/reset-password/reset-password.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/reset-password/reset-password.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.nonNullable.group({\n    email: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}')]]\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/reset-password/reset-password.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imgSrcArrow\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '../../../assets/img/landing-page/arrow-back.png'\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/reset-password/reset-password.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/landing_page/reset-password/reset-password.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.scss'\n})\nexport class ResetPasswordComponent {\n  authService = inject(AuthService);\n  fb = inject(FormBuilder);\n  router = inject(Router);\n  imgSrcArrow: string = '../../../assets/img/landing-page/arrow-back.png';\n  emailSent: boolean = false;\n  errorMessage: string = '';\n  form = this.fb.nonNullable.group({\n    email: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}')]]\n  });\n\n  constructor(private _location: Location) {}\n\n  /**\n   * Handles the form submission to trigger a password reset email.\n   * If the form is valid, it calls the `passwordReset` method from `AuthService`.\n   * On success, sets `emailSent` to true and navigates to the homepage after a short delay.\n   * On failure, logs the error to the console.\n   */\n  onSubmit() {\n    if (this.form.valid) {\n      const email = this.form.get('email')?.value;\n      this.authService.passwordReset(email!)\n        .then(() => {\n          this.emailSent = true;\n          setTimeout(() => {\n            this.emailSent = false;\n            this.router.navigateByUrl('/');\n          }, 500);\n        })\n        .catch(error => {\n          if (error.code === 'auth/user-not-found') {\n            //console.error('Error sending password reset email:', error);\n            this.errorMessage = 'Die eingegebene E-Mail-Adresse ist nicht registriert.'\n            setInterval(() => {\n              this.errorMessage = '';\n            }, 3000);\n          }\n        });\n    } else {\n      console.log('Form is invalid');\n    }\n  }\n\n  /**\n   * Navigates the user back to the previous page.\n   * Uses the `Location` service to handle browser history.\n   */\n  goBack() {\n    this._location.back();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n\n        Passwort zurücksetzen\n\n        Bitte geben Sie Ihre E-Mail-Adresse ein.\n\n        \n            \n            \n            \n                *Diese E-Mail-Adresse ist leider ungültig.\n            \n            \n                {{errorMessage}}\n            \n        \n\n        Wir senden Ihnen eine E-Mail,\n            über die\n            Sie Ihr Passwort ändern können.\n\n        \n            \n                E-Mail senden\n            \n        \n    \n\n    \n        Impressum\n        Datenschutz\n    \n\n    \n        \n            \n            E-Mail gesendet\n        \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Passwort zurücksetzen        Bitte geben Sie Ihre E-Mail-Adresse ein.                                                            *Diese E-Mail-Adresse ist leider ungültig.                                        {{errorMessage}}                            Wir senden Ihnen eine E-Mail,            über die            Sie Ihr Passwort ändern können.                                    E-Mail senden                                    Impressum        Datenschutz                                        E-Mail gesendet            '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponsiveService.html":{"url":"injectables/ResponsiveService.html","title":"injectable - ResponsiveService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponsiveService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/responsive.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isChannelOpen\n                            \n                            \n                                isDirectMessageOpen\n                            \n                            \n                                isHeaderOpen\n                            \n                            \n                                isSidebarOpen\n                            \n                            \n                                isThreadOpen\n                            \n                            \n                                responsive\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/responsive.service.ts:13\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isChannelOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/responsive.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDirectMessageOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/responsive.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHeaderOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/responsive.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSidebarOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/services/responsive.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isThreadOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/responsive.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        responsive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/responsive.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResponsiveService {\n\n  isSidebarOpen = true;\n  isHeaderOpen = false;\n  isChannelOpen = false;\n  isDirectMessageOpen = false;\n  responsive = false;\n  isThreadOpen = false;\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RevealPasswordService.html":{"url":"injectables/RevealPasswordService.html","title":"injectable - RevealPasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RevealPasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/reveal-password.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                imgUrl\n                            \n                            \n                                imgUrlHide\n                            \n                            \n                                imgUrlWiew\n                            \n                            \n                                password\n                            \n                            \n                                reveal\n                            \n                            \n                                text\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeImg\n                            \n                            \n                                changeType\n                            \n                            \n                                togglePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/reveal-password.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeImg\n                        \n                    \n                \n            \n            \n                \nchangeImg()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/reveal-password.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeType\n                        \n                    \n                \n            \n            \n                \nchangeType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/reveal-password.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePassword\n                        \n                    \n                \n            \n            \n                \ntogglePassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/reveal-password.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        imgUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"../../../assets/img/landing-page/hide.png\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/reveal-password.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imgUrlHide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"../../../assets/img/landing-page/hide.png\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/reveal-password.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imgUrlWiew\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"../../../assets/img/landing-page/view.png\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/reveal-password.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"password\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/reveal-password.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reveal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/reveal-password.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"text\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/reveal-password.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"password\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/reveal-password.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RevealPasswordService {\n  imgUrl: string = \"../../../assets/img/landing-page/hide.png\"\n  imgUrlHide: string = \"../../../assets/img/landing-page/hide.png\"\n  imgUrlWiew: string = \"../../../assets/img/landing-page/view.png\"\n  type: string = \"password\"\n  password: string = \"password\"\n  text: string = \"text\"\n  reveal: boolean = false\n  constructor() {\n\n  }\n\n  togglePassword() {\n    this.reveal = !this.reveal\n    this.changeImg();\n    this.changeType();\n  }\n\n  changeImg() {\n    if (this.reveal) {\n      this.imgUrl = this.imgUrlWiew\n    } else {\n      this.imgUrl = this.imgUrlHide\n    }\n  }\n\n  changeType() {\n    if (this.reveal) {\n      this.type = this.text\n    } else {\n      this.type = this.password\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SaveNewUserService.html":{"url":"injectables/SaveNewUserService.html","title":"injectable - SaveNewUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SaveNewUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/save-new-user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                            \n                                userImage\n                            \n                            \n                                userMail\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                saveUser\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/save-new-user.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveUser(uId: string, email: string, name: string, url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/save-new-user.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON(uId: string, email: string, name: string, image: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/save-new-user.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                image\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { uid: string; name: string; email: string; image: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/save-new-user.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/save-new-user.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userMail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/save-new-user.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/save-new-user.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { collection, doc, Firestore, setDoc } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaveNewUserService {\n\n  constructor(private firestore: Firestore) { }\n\n  userId: string = '';\n  userName: string = ''; \n  userMail: string = '';\n  userImage: string = ''; \n\n  async saveUser(uId: string, email: string, name: string, url: string) {\n    const userRef = doc(collection(this.firestore, 'Users'), uId);\n    await setDoc(\n      userRef,\n      this.toJSON(uId, email, name, url)\n    )\n    .catch((err) => {\n      console.error(err);\n    })\n    .then(() => {\n      console.log('User saved with ID:', uId);\n    });\n  }\n\n  toJSON(uId: string, email: string, name: string, image: string) {\n    return {\n      uid: uId,\n      name: name,\n      email: email,\n      image: image\n    };\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchService.html":{"url":"injectables/SearchService.html","title":"injectable - SearchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/search.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideOrShowSidebar\n                            \n                            \n                                isSearching\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getMessagesForChannel\n                            \n                            \n                                hideSearch\n                            \n                            \n                                    Async\n                                searchAllChannelMessages\n                            \n                            \n                                    Async\n                                searchChannels\n                            \n                            \n                                    Async\n                                searchUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/search.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMessagesForChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMessagesForChannel(channelId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:73\n                        \n                    \n\n\n            \n                \n                        Retrieves all messages for a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                channelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the channel.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to a list of messages for the specified channel.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideSearch\n                        \n                    \n                \n            \n            \n                \nhideSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchAllChannelMessages\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAllChannelMessages(searchTerm: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Searches all messages across all channels for a specific term.\nFilters messages that contain the search term (case-insensitive).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search term to filter messages by.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to a list of filtered messages.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchChannels\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchChannels(searchTerm: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Searches for channels based on the given search term.\nFilters channels whose names match the search term (case-insensitive).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search term to filter channels by.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to a list of filtered channels.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchUsers(searchTerm: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Searches for users based on the given search term.\nFilters users whose names match the search term (case-insensitive).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search term to filter users by.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to a list of filtered users.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hideOrShowSidebar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SidebarService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/search.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSearching\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/search.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { collection, Firestore, getDocs } from '@angular/fire/firestore';\nimport { Channel } from '../../models/channel';\nimport { SidebarService } from './sidebar.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n  hideOrShowSidebar = inject(SidebarService);\n  isSearching: boolean = false;\n  constructor(private firestore: Firestore) {}\n\n  hideSearch() {\n    this.isSearching = false;\n  }\n\n  /**\n   * Searches for channels based on the given search term.\n   * Filters channels whose names match the search term (case-insensitive).\n   * @param {string} searchTerm - The search term to filter channels by.\n   * @returns {Promise} A promise that resolves to a list of filtered channels.\n   */\n  async searchChannels(searchTerm: string): Promise {\n    const normalizedTerm = searchTerm.toLowerCase();\n    const channelsRef = collection(this.firestore, 'Channels');\n    const querySnapshot = await getDocs(channelsRef);\n    const filteredChannels = querySnapshot.docs\n      .map(doc => ({\n        id: doc.id,\n        name: doc.data()['name'],\n        uids: doc.data()['uids']\n      }))\n      .filter(channel => channel.name.toLowerCase().includes(normalizedTerm));\n    return filteredChannels;\n  }\n  \n  /**\n   * Searches all messages across all channels for a specific term.\n   * Filters messages that contain the search term (case-insensitive).\n   * @param {string} searchTerm - The search term to filter messages by.\n   * @returns {Promise} A promise that resolves to a list of filtered messages.\n   */\n  async searchAllChannelMessages(searchTerm: string): Promise {\n    const normalizedTerm = searchTerm.toLowerCase();\n    const filteredMessages = [];\n    const channelsRef = collection(this.firestore, 'Channels');\n    const channelsSnapshot = await getDocs(channelsRef);\n    for (const channelDoc of channelsSnapshot.docs) {\n      const channelId = channelDoc.id;\n      const messagesRef = collection(this.firestore, `Channels/${channelId}/messages`);\n      const messagesSnapshot = await getDocs(messagesRef);\n      for (const messageDoc of messagesSnapshot.docs) {\n        const messageData = messageDoc.data();\n        if (messageData['message'] && messageData['message'].toLowerCase().includes(normalizedTerm)) {\n          filteredMessages.push({\n            id: messageDoc.id,\n            channelId: channelId,\n            message: messageData['message'],\n            uid: messageData['uid'],\n          });\n        }\n      }\n    }\n    return filteredMessages;\n  }\n  \n  /**\n   * Retrieves all messages for a specific channel.\n   * @param {string} channelId - The ID of the channel.\n   * @returns {Promise} A promise that resolves to a list of messages for the specified channel.\n   */\n  async getMessagesForChannel(channelId: string): Promise {\n    const messagesRef = collection(this.firestore, `Channels/${channelId}/messages`);\n    const querySnapshot = await getDocs(messagesRef);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      text: doc.data()['message'],\n    }));\n  }\n  \n  /**\n   * Searches for users based on the given search term.\n   * Filters users whose names match the search term (case-insensitive).\n   * @param {string} searchTerm - The search term to filter users by.\n   * @returns {Promise} A promise that resolves to a list of filtered users.\n   */\n  async searchUsers(searchTerm: string): Promise {\n    const normalizedTerm = searchTerm.toLowerCase();\n    const filteredUsers = [];\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SidebarService.html":{"url":"injectables/SidebarService.html","title":"injectable - SidebarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SidebarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sidebar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeChannelIndex\n                            \n                            \n                                activeEmail\n                            \n                            \n                                activeImage\n                            \n                            \n                                activeUid\n                            \n                            \n                                activeUser\n                            \n                            \n                                activeUserIndex\n                            \n                            \n                                activeUserProfil\n                            \n                            \n                                addAllUsersToChannel\n                            \n                            \n                                addSelectedUsersToChannel\n                            \n                            \n                                addUserFromHeaderToChannelOpen\n                            \n                            \n                                addUserToChanelOpen\n                            \n                            \n                                AllChannels\n                            \n                            \n                                AllChannelsCreationsDate\n                            \n                            \n                                AllChannelsCreatorsNames\n                            \n                            \n                                AllChannelsCreatorsUids\n                            \n                            \n                                AllChannelsDescriptions\n                            \n                            \n                                AllChannelsEmails\n                            \n                            \n                                AllChannelsIds\n                            \n                            \n                                AllChannelsImages\n                            \n                            \n                                AllChannelsUids\n                            \n                            \n                                AllChannelsUsers\n                            \n                            \n                                AllCreators\n                            \n                            \n                                AllEmails\n                            \n                            \n                                AllImages\n                            \n                            \n                                AllUids\n                            \n                            \n                                AllUsers\n                            \n                            \n                                asd\n                            \n                            \n                                createChannelDialogActive\n                            \n                            \n                                currentChannelNumber\n                            \n                            \n                                editProfilContactformOpen\n                            \n                            \n                                editProfilOpen\n                            \n                            \n                                emailList\n                            \n                            \n                                GlobalChannelUids\n                            \n                            \n                                imageList\n                            \n                            \n                                online\n                            \n                            \n                                onlineUserUidList\n                            \n                            \n                                openUserList\n                            \n                            \n                                popUpOpen\n                            \n                            \n                                selectedEmails\n                            \n                            \n                                selectedImages\n                            \n                            \n                                selectedUids\n                            \n                            \n                                selectedUsers\n                            \n                            \n                                sidebarOpen\n                            \n                            \n                                threadService\n                            \n                            \n                                uidList\n                            \n                            \n                                userList\n                            \n                            \n                                userProfilOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchChannels\n                            \n                            \n                                fetchUsers\n                            \n                            \n                                openChannel\n                            \n                            \n                                setTopChannel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: Firestore, channelSelectionService: ChannelSelectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/sidebar.service.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelSelectionService\n                                                  \n                                                        \n                                                                        ChannelSelectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchChannels\n                        \n                    \n                \n            \n            \n                \nfetchChannels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sidebar.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchUsers\n                        \n                    \n                \n            \n            \n                \nfetchUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sidebar.service.ts:165\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openChannel\n                        \n                    \n                \n            \n            \n                \nopenChannel(i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sidebar.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTopChannel\n                        \n                    \n                \n            \n            \n                \nsetTopChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sidebar.service.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeChannelIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activeEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activeImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activeUid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activeUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activeUserIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activeUserProfil\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addAllUsersToChannel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addSelectedUsersToChannel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addUserFromHeaderToChannelOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addUserToChanelOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AllChannels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AllChannelsCreationsDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AllChannelsCreatorsNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AllChannelsCreatorsUids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AllChannelsDescriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AllChannelsEmails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AllChannelsIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AllChannelsImages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AllChannelsUids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AllChannelsUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AllCreators\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AllEmails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AllImages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AllUids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AllUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        asd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createChannelDialogActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentChannelNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editProfilContactformOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editProfilOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GlobalChannelUids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        online\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onlineUserUidList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popUpOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedEmails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedImages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sidebarOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        threadService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThreadService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uidList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userProfilOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sidebar.service.ts:35\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { collection, Firestore, getDocs, onSnapshot } from '@angular/fire/firestore';\nimport { ChannelSelectionService } from './channel-selection.service';\nimport { ThreadService } from './thread.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SidebarService {\n  sidebarOpen = false;\n  createChannelDialogActive = false;\n  AllChannels: string[] = [];\n  AllChannelsUsers: string[] = [];\n  AllChannelsIds: string[] = [];\n  AllChannelsEmails: string[] = [];\n  AllChannelsImages: string[] = [];\n  AllChannelsUids: string[] = [];\n  GlobalChannelUids: string[] = [];\n  AllChannelsDescriptions: string[] = [];\n  AllChannelsCreatorsNames: string[] = [];\n  AllChannelsCreatorsUids: string[] = [];\n  AllChannelsCreationsDate: number[] = [];\n  AllUsers: string[] = [];\n  AllEmails: string[] = [];\n  AllImages: string[] = [];\n  AllUids: string[] = [];\n  AllCreators: string[] = [];\n  userList: string[] = [];\n  imageList: string[] = [];\n  uidList: string[] = [];\n  emailList: string[] = [];\n  popUpOpen = false;\n  editProfilOpen = false;\n  editProfilContactformOpen = false;\n  userProfilOpen = false;\n  addUserToChanelOpen = false;\n  addUserFromHeaderToChannelOpen = false;\n  openUserList = false;\n  addAllUsersToChannel = true;\n  addSelectedUsersToChannel = false;\n  selectedUsers: string[] = [];\n  selectedImages: string[] = [];\n  selectedUids: string[] = [];\n  selectedEmails: string[] = [];\n  activeUser = '';\n  activeImage = '';\n  activeEmail = '';\n  activeUid = '';\n  currentChannelNumber: number = 0;\n  activeUserIndex: number | undefined;\n  activeUserProfil: number | undefined;\n  activeChannelIndex: number | null = 0;\n  threadService = inject(ThreadService);\n  asd = 0;\n  online = false;\n  onlineUserUidList: string[] = [];\n\n  constructor(\n    private firestore: Firestore,\n    private channelSelectionService: ChannelSelectionService\n  ) {}\n\n  openChannel(i: number) {\n    this.threadService.closeThread();\n    this.channelSelectionService.openChannel();\n    this.activeChannelIndex = this.AllChannels.length - 1 - i;\n    this.channelSelectionService.setSelectedChannel(\n      this.AllChannelsIds[i]\n    );\n    this.currentChannelNumber = i;\n    this.activeUserIndex = -1;\n  }\n\nfetchChannels() {\n    const channelsCollection = collection(this.firestore, 'Channels');\n    \n    onSnapshot(channelsCollection, (querySnapshot) => {\n        this.AllChannels = [];\n        this.AllChannelsUsers = [];\n        this.AllChannelsEmails = [];\n        this.AllChannelsIds = [];\n        this.AllChannelsImages = [];\n        this.AllChannelsUids = [];\n        this.AllChannelsDescriptions = [];\n        this.AllChannelsCreatorsNames = [];\n        this.AllChannelsCreatorsUids = [];\n        this.GlobalChannelUids = [];\n        this.AllChannelsCreationsDate = [];\n\n        querySnapshot.forEach((doc) => {\n            const channelData = doc.data();\n            this.AllChannels.push(channelData['name']);\n            this.AllChannelsUsers.push(channelData['users']);\n            this.AllChannelsEmails.push(channelData['emails']);\n            this.AllChannelsIds.push(doc.id); \n            this.AllChannelsImages.push(channelData['images']);\n            this.AllChannelsDescriptions.push(channelData['description']);\n            this.AllChannelsCreatorsNames.push(channelData['channelCreatorName']);\n            this.AllChannelsCreatorsUids.push(channelData['channelCreatorUid']);\n            this.GlobalChannelUids.push(channelData['uids']);\n            this.AllChannelsCreationsDate.push(channelData['creationsDate']);\n\n            const uids = channelData['uids'];\n            if (Array.isArray(uids)) {\n                uids.forEach(uid => {\n                    this.AllChannelsUids.push(uid);\n                });\n            } else {\n                this.AllChannelsUids.push(uids);\n            }\n        });\n        this.setTopChannel();\n    }, (error) => {\n        console.error('Fehler beim Abrufen der Kanaldaten:', error);\n    });\n}\n\n  /* Alte fetchChannels Funktion\n  async fetchChannels() {\n    this.AllChannels = [];\n    this.AllChannelsUsers = [];\n    this.AllChannelsEmails = [];\n    this.AllChannelsIds = [];\n    this.AllChannelsImages = [];\n    this.AllChannelsUids = [];\n    this.AllChannelsDescriptions = [];\n    this.AllChannelsCreators = [];\n    this.GlobalChannelUids = [];\n  \n    const channelsCollection = collection(this.firestore, 'Channels');\n    const querySnapshot = await getDocs(channelsCollection);\n  \n    querySnapshot.forEach((doc) => {\n      const channelData = doc.data();\n      this.AllChannels.push(channelData['name']);\n      this.AllChannelsUsers.push(channelData['users']);\n      this.AllChannelsEmails.push(channelData['emails']);\n      this.AllChannelsIds.push(doc.id);  // A Firestore dokumentum azonosítója a csatorna ID\n      this.AllChannelsImages.push(channelData['images']);\n      this.AllChannelsDescriptions.push(channelData['description']);\n      this.AllChannelsCreators.push(channelData['channelCreator']);\n      this.GlobalChannelUids.push(channelData['uids']);\n  \n      const uids = channelData['uids'];\n      if (Array.isArray(uids)) {\n        uids.forEach(uid => {\n          this.AllChannelsUids.push(uid);\n        });\n      } else {\n        this.AllChannelsUids.push(uids);\n      }\n    });\n  \n    this.setTopChannel();\n  }\n  */\n\n  setTopChannel() {\n    const topChannelIndex = this.AllChannelsIds.length - 1;\n    this.channelSelectionService.setSelectedChannel(this.AllChannelsIds[topChannelIndex]);\n    this.activeChannelIndex = 0;\n  }\n\n\nfetchUsers() {\n    const usersCollection = collection(this.firestore, 'Users');\n    \n    onSnapshot(usersCollection, (querySnapshot) => {\n        this.AllUsers = [];\n        this.AllImages = [];\n        this.AllEmails = [];\n        this.AllUids = [];\n        this.userList = [];\n        this.imageList = [];\n        this.uidList = [];\n        this.emailList = [];\n\n        querySnapshot.forEach((doc) => {\n            const userData = doc.data();\n            this.AllUsers.push(userData['name']);\n            this.AllEmails.push(userData['email']);\n            this.AllImages.push(userData['image']);\n            this.AllUids.push(userData['uid']);\n            this.AllCreators.push(userData['channelCreator']);\n            this.userList.push(userData['name']);\n            this.imageList.push(userData['image']);\n            this.uidList.push(userData['uid']);\n            this.emailList.push(userData['email']);\n        });\n    }, (error) => {\n        console.error('Fehler beim Abrufen der Benutzerdaten:', error);\n    });\n  }\n\n\n  /* Alte FetchUsers\n  async fetchUsers() {\n    this.AllUsers = [];\n    this.userList = [];\n    this.imageList = [];\n    this.uidList = [];\n    this.emailList = [];\n    const usersCollection = collection(this.firestore, 'Users');\n    const querySnapshot = await getDocs(usersCollection);\n    querySnapshot.forEach((doc) => {\n      const userData = doc.data();\n      this.AllUsers.push(userData['name']);\n      this.AllEmails.push(userData['email']);\n      this.AllImages.push(userData['image']);\n      this.AllUids.push(userData['uid']);\n      this.userList.push(userData['name']);\n      this.imageList.push(userData['image']);\n      this.uidList.push(userData['uid']);\n      this.emailList.push(userData['email']);\n    });\n  }\n  */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThreadComponent.html":{"url":"components/ThreadComponent.html","title":"component - ThreadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThreadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/thread/thread/thread.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-thread\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ThreadMessageInputComponent\n                                ThreadChatAreaComponent\n                                ThreadHeaderComponent\n                \n            \n\n            \n                styleUrls\n                ./thread.component.scss,./thread-responsive.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./thread.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allDates\n                            \n                            \n                                allMessages\n                            \n                            \n                                allMessagesSorted\n                            \n                            \n                                dateCounter\n                            \n                            \n                                responsiveService\n                            \n                            \n                                threadId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                thread\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/thread/thread/thread.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        thread\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/thread/thread/thread.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/thread/thread/thread.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allDates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main/thread/thread/thread.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main/thread/thread/thread.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allMessagesSorted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main/thread/thread/thread.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateCounter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/main/thread/thread/thread.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        responsiveService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ResponsiveService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/thread/thread/thread.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        threadId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/thread/thread/thread.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, Input, OnInit } from '@angular/core';\nimport { ThreadMessageInputComponent } from '../thread-message-input/thread-message-input.component';\nimport { ThreadChatAreaComponent } from '../thread-chat-area/thread-chat-area.component';\nimport { ThreadHeaderComponent } from '../thread-header/thread-header.component';\nimport {\n  addDoc,\n  collection,\n  Firestore,\n  limit,\n  onSnapshot,\n  query,\n} from '@angular/fire/firestore';\nimport { Message } from '../../../../models/message.class';\nimport { ResponsiveService } from '../../../services/responsive.service';\n\n@Component({\n  selector: 'app-thread',\n  standalone: true,\n  imports: [\n    ThreadMessageInputComponent,\n    ThreadChatAreaComponent,\n    ThreadHeaderComponent,\n  ],\n  templateUrl: './thread.component.html',\n  styleUrls: ['./thread.component.scss', './thread-responsive.component.scss'],\n})\nexport class ThreadComponent implements OnInit {\n  @Input() thread: any;\n  threadId: any;\n  allMessagesSorted: Message[] = [];\n  allMessages: Message[] = [];\n  allDates: any = [];\n  dateCounter = 0;\n  responsiveService = inject(ResponsiveService);\n\n  constructor(private firestore: Firestore) {}\n  ngOnInit(): void {\n    this.threadId = this.thread.id;\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./thread.component.scss\n                \n                .content {\n  height: 100%;\n}\n\n                \n                    ./thread-responsive.component.scss\n                \n                @media(max-width: 1000px){\n  .slideIn{\n    width: 100%;\n  }\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThreadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThreadHeaderComponent.html":{"url":"components/ThreadHeaderComponent.html","title":"component - ThreadHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThreadHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/thread/thread-header/thread-header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-thread-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./thread-header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./thread-header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allChannels\n                            \n                            \n                                    Public\n                                channelSelectionService\n                            \n                            \n                                    Public\n                                chatAreaService\n                            \n                            \n                                currentChannel\n                            \n                            \n                                currentChannelId\n                            \n                            \n                                responsiveService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeThread\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                subChannels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(threadService: ThreadService, firestore: Firestore, channelSelectionService: ChannelSelectionService, chatAreaService: ChatAreaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/thread/thread-header/thread-header.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelSelectionService\n                                                  \n                                                        \n                                                                        ChannelSelectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatAreaService\n                                                  \n                                                        \n                                                                        ChatAreaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeThread\n                        \n                    \n                \n            \n            \n                \ncloseThread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/thread/thread-header/thread-header.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Closes the current thread by invoking the thread service's closeThread method\nand updating the responsive service to indicate that the thread is no longer open.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/thread/thread-header/thread-header.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subChannels\n                        \n                    \n                \n            \n            \n                \nsubChannels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/thread/thread-header/thread-header.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Subscribes to the 'Channels' collection in Firestore and listens for updates.\nUpon receiving a snapshot, it processes each channel document,\nupdates the allChannels array, and sets the currentChannel\nif the channel's ID matches the currentChannelId.\nExample :// To use this method, simply call it on an instance of YourClassName.\ninstance.subChannels();\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allChannels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main/thread/thread-header/thread-header.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelSelectionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelSelectionService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/thread/thread-header/thread-header.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chatAreaService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatAreaService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/thread/thread-header/thread-header.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/thread/thread-header/thread-header.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentChannelId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/thread/thread-header/thread-header.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        responsiveService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ResponsiveService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/thread/thread-header/thread-header.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { ThreadService } from '../../../services/thread.service';\nimport { ResponsiveService } from '../../../services/responsive.service';\nimport {\n  Firestore,\n  addDoc,\n  collection,\n  deleteDoc,\n  deleteField,\n  doc,\n  getDoc,\n  getDocs,\n  limit,\n  onSnapshot,\n  query,\n  setDoc,\n  updateDoc,\n} from '@angular/fire/firestore';\nimport { ChatAreaService } from '../../../services/chat-area.service';\nimport { ChannelSelectionService } from '../../../services/channel-selection.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-thread-header',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './thread-header.component.html',\n  styleUrl: './thread-header.component.scss',\n})\nexport class ThreadHeaderComponent {\n  constructor(\n    private threadService: ThreadService,\n    private firestore: Firestore,\n    public channelSelectionService: ChannelSelectionService,\n    public chatAreaService: ChatAreaService\n  ) {}\n  responsiveService = inject(ResponsiveService);\n  allChannels: any = [];\n  currentChannelId: any;\n  currentChannel: any;\n\n  ngAfterViewInit(): void {\n    this.channelSelectionService.getSelectedChannel().subscribe((channel) => {\n      this.currentChannelId = channel;\n      this.subChannels();\n    });\n  }\n\n  /**\n   * Closes the current thread by invoking the thread service's closeThread method\n   * and updating the responsive service to indicate that the thread is no longer open.\n   *\n   * @method closeThread\n   * @memberof YourClassName\n   * @returns {void} This method does not return a value.\n   */\n  closeThread() {\n    this.threadService.closeThread();\n    this.responsiveService.isThreadOpen = false;\n  }\n\n  /**\n   * Subscribes to the 'Channels' collection in Firestore and listens for updates.\n   * Upon receiving a snapshot, it processes each channel document,\n   * updates the allChannels array, and sets the currentChannel\n   * if the channel's ID matches the currentChannelId.\n   *\n   * @method subChannels\n   * @memberof YourClassName\n   * @returns {void} This method does not return a value.\n   *\n   * @example\n   * // To use this method, simply call it on an instance of YourClassName.\n   * instance.subChannels();\n   */\n  subChannels(): void {\n    const q = query(collection(this.firestore, 'Channels'), limit(1000));\n    onSnapshot(q, (list) => {\n      this.allChannels = [];\n      let channel: any;\n      list.forEach((element) => {\n        channel = this.chatAreaService.setNoteChannel(\n          element.data(),\n          element.id\n        );\n        this.allChannels.push(channel);\n\n        if (channel.id == this.currentChannelId) {\n          this.currentChannel = channel;\n        }\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Thread\n    # {{ currentChannel.name }}\n  \n  \n    \n      \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Thread    # {{ currentChannel.name }}                                                                              '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThreadHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThreadService.html":{"url":"injectables/ThreadService.html","title":"injectable - ThreadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThreadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thread.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentThread$\n                            \n                            \n                                    Private\n                                ThreadAnimation\n                            \n                            \n                                ThreadAnimation$\n                            \n                            \n                                    Private\n                                threadSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeThread\n                            \n                            \n                                isThreadOpen\n                            \n                            \n                                openThread\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeThread\n                        \n                    \n                \n            \n            \n                \ncloseThread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/thread.service.ts:28\n                        \n                    \n\n\n            \n                \n                        Closes the currently open thread by removing the animation class and resetting the thread subject.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isThreadOpen\n                        \n                    \n                \n            \n            \n                \nisThreadOpen()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/thread.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Checks if a thread is currently open.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if a thread is open, otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openThread\n                        \n                    \n                \n            \n            \n                \nopenThread(thread: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/thread.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Opens a thread by updating the thread subject and adding a CSS class for animation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                thread\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe thread object to open.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentThread$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.threadSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/thread.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ThreadAnimation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/thread.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ThreadAnimation$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.ThreadAnimation.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/thread.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        threadSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/thread.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThreadService {\n  private threadSubject = new BehaviorSubject(null);\n  private ThreadAnimation = new BehaviorSubject(null);\n\n  currentThread$ = this.threadSubject.asObservable();\n  ThreadAnimation$ = this.ThreadAnimation.asObservable();\n\n  /**\n   * Opens a thread by updating the thread subject and adding a CSS class for animation.\n   * @param {any} thread - The thread object to open.\n   */\n  openThread(thread: any) {\n    this.threadSubject.next(thread);\n    setTimeout(() => {\n      document.getElementById('slideIn')?.classList.add('slide-in-right');\n    }, 1);\n  }\n\n  /**\n   * Closes the currently open thread by removing the animation class and resetting the thread subject.\n   */\n  closeThread() {\n    let element = document.getElementById('slideIn');\n    element?.classList.remove('slide-in-right');\n    element?.classList.add('slide-out-right');\n    this.threadSubject.next(null);\n  }\n\n  /**\n   * Checks if a thread is currently open.\n   * @returns {boolean} True if a thread is open, otherwise false.\n   */\n  isThreadOpen(): boolean {\n    return this.threadSubject.getValue() !== null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            uid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    uid: string;\n    name: string;\n    image: string;\n    email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterFace.html":{"url":"interfaces/UserInterFace.html","title":"interface - UserInterFace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInterFace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            imgUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            uId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imgUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imgUrl:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserInterFace {\n  email: string;\n  name: string;\n  imgUrl: any;\n  uId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfilComponent.html":{"url":"components/UserProfilComponent.html","title":"component - UserProfilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/user-profil/user-profil.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profil\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./user-profil.component.scss,./user-profil-responsive.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-profil.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                    Public\n                                directMessageSelectionService\n                            \n                            \n                                Gast\n                            \n                            \n                                hideOrShowSidebar\n                            \n                            \n                                responsiveService\n                            \n                            \n                                userEmail\n                            \n                            \n                                userOnline\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                notCloseDialog\n                            \n                            \n                                sendMessage\n                            \n                            \n                                updateSelectedUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(directMessageSelectionService: DirectMessageSelectionService, channelSelectionService: ChannelSelectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/user-profil/user-profil.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        directMessageSelectionService\n                                                  \n                                                        \n                                                                        DirectMessageSelectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelSelectionService\n                                                  \n                                                        \n                                                                        ChannelSelectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/user-profil/user-profil.component.ts:32\n                        \n                    \n\n\n            \n                \n                        Closes the user profile dialog by updating the sidebar state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notCloseDialog\n                        \n                    \n                \n            \n            \n                \nnotCloseDialog(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/user-profil/user-profil.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Prevents the closing of a dialog when an event occurs.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event that triggered this function.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/user-profil/user-profil.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Sends a direct message to the selected user and updates the sidebar state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSelectedUser\n                        \n                    \n                \n            \n            \n                \nupdateSelectedUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/user-profil/user-profil.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Updates the selected user for direct messaging and closes the user profile dialog.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/user-profil/user-profil.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        directMessageSelectionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DirectMessageSelectionService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/user-profil/user-profil.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Gast\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Gast'\n                    \n                \n                    \n                        \n                                Defined in src/app/main/user-profil/user-profil.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideOrShowSidebar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SidebarService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/user-profil/user-profil.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        responsiveService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ResponsiveService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/user-profil/user-profil.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'udgfuid gi@uhegi.eoig'\n                    \n                \n                    \n                        \n                                Defined in src/app/main/user-profil/user-profil.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userOnline\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/main/user-profil/user-profil.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { SidebarService } from '../../services/sidebar.service';\nimport { AuthService } from '../../services/auth.service';\nimport { DirectMessageSelectionService } from '../../services/direct-message-selection.service';\nimport { ChannelSelectionService } from '../../services/channel-selection.service';\nimport { ResponsiveService } from '../../services/responsive.service';\n\n@Component({\n  selector: 'app-user-profil',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './user-profil.component.html',\n  styleUrls: ['./user-profil.component.scss', './user-profil-responsive.component.scss']\n})\nexport class UserProfilComponent {\n  hideOrShowSidebar = inject(SidebarService);\n  authService = inject(AuthService);\n  responsiveService = inject(ResponsiveService);\n  userOnline = true;\n  userEmail = 'udgfuid gi@uhegi.eoig';\n  Gast = 'Gast';\n\n  constructor(\n    public directMessageSelectionService: DirectMessageSelectionService,\n    private channelSelectionService: ChannelSelectionService\n  ) {}\n\n  /**\n * Closes the user profile dialog by updating the sidebar state.\n */\n  closeDialog() {\n    this.hideOrShowSidebar.userProfilOpen = false;\n  }\n\n  /**\n * Prevents the closing of a dialog when an event occurs.\n * \n * @param {Event} e - The event that triggered this function.\n */\n  notCloseDialog(e: any) {\n    e.stopPropagation(e);\n  }\n\n  /**\n * Sends a direct message to the selected user and updates the sidebar state.\n */\n  sendMessage() {\n    this.updateSelectedUser();\n    this.responsiveService.isDirectMessageOpen = true;\n    if (window.innerWidth \n    \n\n    \n        \n    \n        \n            Profil\n            \n        \n        \n            \n        \n        \n            \n                @if(this.hideOrShowSidebar.activeUid == authService.currentUserSignal()?.uId){\n                    {{ authService.currentUserSignal()?.name }}\n                }@else{\n                    {{ this.hideOrShowSidebar.activeUser }}\n                }\n            \n            \n                @if(this.hideOrShowSidebar.activeUid == authService.currentUserSignal()?.uId || this.hideOrShowSidebar.onlineUserUidList.includes(this.hideOrShowSidebar.activeUid)){\n                        \n                        Aktiv\n                      }@else {\n                        \n                        Abwesend\n                      }\n            \n        \n        \n            \n                \n                E-Mail-Adresse\n            \n            \n                @if(this.hideOrShowSidebar.activeUid == authService.currentUserSignal()?.uId){\n                    {{ authService.currentUserSignal()?.email }}\n                }@else{\n                    {{ this.hideOrShowSidebar.activeEmail }}\n                }\n            \n        \n\n\n        \n            \n            Nachricht\n        \n\n\n    \n\n    \n\n    \n                \n                    ./user-profil.component.scss\n                \n                .edit-profil-container {\n    position: fixed;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.4);\n    left: 0;\n    top: 0;\n    z-index: 6;\n}\n\n.dialog {\n    width: 400px;\n    //height: 500px;\n    padding: 45px 40px 45px 40px;\n    gap: 45px;\n    border-radius: 30px;\n    background-color: white;\n    gap: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n\n.display-flex {\n    display: flex;\n}\n\n.display-none {\n    display: none;\n}\n\n.header {\n    width: 100%;\n    height: 40px;\n    display: flex;\n    justify-content: space-between;   \n    align-items: center;\n}\n\n.header-title {\n    font-weight: 700;\n}\n\n.close-button {\n    background-image: url('../../../assets/img/create-channel/close_button.png');\n    height: 40px;\n    width: 40px;\n    cursor: pointer;\n    &:hover {\n        background-image: url('../../../assets/img/create-channel/close_button_hover.png');\n    }\n}\n\n.profil-image {\n    width: 200px;\n    height: 200px;\n    border-radius: 500px;\n    object-fit: cover;\n}\n\n.name-container {\n    width: 100%;\n    height: 86px;\n    display: flex;\n    justify-content: space-around;\n    flex-direction: column;\n    align-items: center;\n}\n\n.user-name {\n    font-weight: 700;\n}\n\n.edit {\n    color: rgba(83, 90, 241, 1);\n    cursor: pointer;\n    &:hover {\n        font-weight: 700;\n    }\n}\n\n.name-edit {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    height: 38px;\n    align-items: center;\n}\n\n.online-icon {\n    background-image: url('../../../assets/img/sidebar/Online.png');\n    height: 16px;\n    width: 16px;\n    background-repeat: no-repeat;\n}\n\n.offline-icon {\n    background-image: url('../../../assets/img/sidebar/Offline.png');\n    height: 16px;\n    width: 16px;\n    background-repeat: no-repeat;\n}\n\n.online {\n    width: 100%;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 8px;\n}\n\n.user-online {\n    color: rgba(146, 200, 62, 1);\n\n}\n\n.user-offine {\n    color: rgba(104, 104, 104, 1);\n}\n\n.email-container {\n    width: 100%;\n    height: 70px;\n    display: flex;\n    justify-content: space-between;\n    flex-direction: column;\n}\n\n.email-adress-title {\n    font-weight: 700 !important;\n}\n\n.email-title-container {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    gap: 8px;\n}\n\n.email-adress-container {\n    display: flex;\n    justify-content: flex-start;\n    margin-left: 40px;\n    span {\n        color: rgba(19, 129, 255, 1);\n\n    }\n}\n\n.send-message-button {\n    width: 164px;\n    height: 49px;\n    gap: 10px;\n    border-radius: 50px;\n    background-color: rgba(68, 77, 242, 1);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n}\n\n.message {\n    color: white;\n}\n\n\n                \n                    ./user-profil-responsive.component.scss\n                \n                @media(max-width: 500px){\n    .dialog {\n        width: calc(100vw - 120px);\n    }\n}\n\n@media(max-width: 430px){\n    .dialog { \n        padding: 20px 15px 20px 15px;\n        width: calc(100vw - 60px);\n        gap: 10px;\n    }\n\n    .profil-image {\n        width: 180px;\n        height: 180px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Profil                                                                                    @if(this.hideOrShowSidebar.activeUid == authService.currentUserSignal()?.uId){                    {{ authService.currentUserSignal()?.name }}                }@else{                    {{ this.hideOrShowSidebar.activeUser }}                }                                        @if(this.hideOrShowSidebar.activeUid == authService.currentUserSignal()?.uId || this.hideOrShowSidebar.onlineUserUidList.includes(this.hideOrShowSidebar.activeUid)){                                                Aktiv                      }@else {                                                Abwesend                      }                                                                        E-Mail-Adresse                                        @if(this.hideOrShowSidebar.activeUid == authService.currentUserSignal()?.uId){                    {{ authService.currentUserSignal()?.email }}                }@else{                    {{ this.hideOrShowSidebar.activeEmail }}                }                                                    Nachricht            '\n    var COMPONENTS = [{'name': 'AddUserToChannelComponent', 'selector': 'app-add-user-to-channel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelChatAreaComponent', 'selector': 'app-channel-chat-area'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChannelHeaderComponent', 'selector': 'app-channel-header'},{'name': 'ChannelMessageInputComponent', 'selector': 'app-channel-message-input'},{'name': 'ChannelUserlistComponent', 'selector': 'app-channel-userlist'},{'name': 'CreateChannelComponent', 'selector': 'app-create-channel'},{'name': 'DirectMessagesChatAreaComponent', 'selector': 'app-direct-messages-chat-area'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'DirectMessagesHeaderComponent', 'selector': 'app-direct-messages-header'},{'name': 'DirectMessagesMessageInputComponent', 'selector': 'app-direct-messages-message-input'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditProfilComponent', 'selector': 'app-edit-profil'},{'name': 'EditProfilContactformComponent', 'selector': 'app-edit-profil-contactform'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressumComponent', 'selector': 'app-impressum'},{'name': 'LogInComponent', 'selector': 'app-log-in'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'NewMessageHeaderComponent', 'selector': 'app-new-message-header'},{'name': 'NewMessageInputComponent', 'selector': 'app-new-message-input'},{'name': 'NewMessageSearchResultsComponent', 'selector': 'app-new-message-search-results'},{'name': 'OpenImgComponent', 'selector': 'app-open-img'},{'name': 'OpenSidebarComponent', 'selector': 'app-open-sidebar'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfilOptionsPopupComponent', 'selector': 'app-profil-options-popup'},{'name': 'ReactionListComponent', 'selector': 'app-reaction-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadChatAreaComponent', 'selector': 'app-thread-chat-area'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ThreadHeaderComponent', 'selector': 'app-thread-header'},{'name': 'ThreadMessageInputComponent', 'selector': 'app-thread-message-input'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            firebaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/landing_page/impressum/impressum.component.ts\n            \n            component\n            ImpressumComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/landing_page/log-in/log-in.component.ts\n            \n            component\n            LogInComponent\n            \n                19 %\n                (4/21)\n            \n        \n        \n            \n                \n                src/app/landing_page/password-reset/password-reset.component.ts\n            \n            component\n            PasswordResetComponent\n            \n                14 %\n                (2/14)\n            \n        \n        \n            \n                \n                src/app/landing_page/privacy-policy/privacy-policy.component.ts\n            \n            component\n            PrivacyPolicyComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/landing_page/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app/landing_page/sign-up/sign-up.component.ts\n            \n            component\n            SignUpComponent\n            \n                34 %\n                (15/44)\n            \n        \n        \n            \n                \n                src/app/main/add-user-to-channel/add-user-to-channel.component.ts\n            \n            component\n            AddUserToChannelComponent\n            \n                57 %\n                (16/28)\n            \n        \n        \n            \n                \n                src/app/main/channel-userlist/channel-userlist.component.ts\n            \n            component\n            ChannelUserlistComponent\n            \n                47 %\n                (9/19)\n            \n        \n        \n            \n                \n                src/app/main/channel/channel-chat-area/channel-chat-area.component.ts\n            \n            component\n            ChannelChatAreaComponent\n            \n                53 %\n                (34/64)\n            \n        \n        \n            \n                \n                src/app/main/channel/channel-header/channel-header.component.ts\n            \n            component\n            ChannelHeaderComponent\n            \n                43 %\n                (7/16)\n            \n        \n        \n            \n                \n                src/app/main/channel/channel-message-input/channel-message-input.component.ts\n            \n            component\n            ChannelMessageInputComponent\n            \n                51 %\n                (34/66)\n            \n        \n        \n            \n                \n                src/app/main/channel/channel/channel.component.ts\n            \n            component\n            ChannelComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/main/create-channel/create-channel.component.ts\n            \n            component\n            CreateChannelComponent\n            \n                53 %\n                (24/45)\n            \n        \n        \n            \n                \n                src/app/main/direct-messages/direct-messages-chat-area/direct-messages-chat-area.component.ts\n            \n            component\n            DirectMessagesChatAreaComponent\n            \n                52 %\n                (35/67)\n            \n        \n        \n            \n                \n                src/app/main/direct-messages/direct-messages-header/direct-messages-header.component.ts\n            \n            component\n            DirectMessagesHeaderComponent\n            \n                29 %\n                (5/17)\n            \n        \n        \n            \n                \n                src/app/main/direct-messages/direct-messages-message-input/direct-messages-message-input.component.ts\n            \n            component\n            DirectMessagesMessageInputComponent\n            \n                47 %\n                (33/69)\n            \n        \n        \n            \n                \n                src/app/main/direct-messages/direct-messages/direct-messages.component.ts\n            \n            component\n            DirectMessagesComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/main/edit-channel/edit-channel.component.ts\n            \n            component\n            EditChannelComponent\n            \n                53 %\n                (16/30)\n            \n        \n        \n            \n                \n                src/app/main/edit-profil-contactform/edit-profil-contactform.component.ts\n            \n            component\n            EditProfilContactformComponent\n            \n                30 %\n                (4/13)\n            \n        \n        \n            \n                \n                src/app/main/edit-profil/edit-profil.component.ts\n            \n            component\n            EditProfilComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/main/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/main/header/profil-options-popup/profil-options-popup.component.ts\n            \n            component\n            ProfilOptionsPopupComponent\n            \n                46 %\n                (6/13)\n            \n        \n        \n            \n                \n                src/app/main/header/search-field/search-field.component.ts\n            \n            component\n            SearchFieldComponent\n            \n                44 %\n                (12/27)\n            \n        \n        \n            \n                \n                src/app/main/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/main/new-message/new-message-header/new-message-header.component.ts\n            \n            component\n            NewMessageHeaderComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/main/new-message/new-message-input/new-message-input.component.ts\n            \n            component\n            NewMessageInputComponent\n            \n                0 %\n                (0/81)\n            \n        \n        \n            \n                \n                src/app/main/new-message/new-message-search-results/new-message-search-results.component.ts\n            \n            component\n            NewMessageSearchResultsComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/main/new-message/new-message/new-message.component.ts\n            \n            component\n            NewMessageComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/open-img/open-img.component.ts\n            \n            component\n            OpenImgComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/main/open-sidebar/open-sidebar.component.ts\n            \n            component\n            OpenSidebarComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/main/reaction-list/reaction-list.component.ts\n            \n            component\n            ReactionListComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/main/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                59 %\n                (19/32)\n            \n        \n        \n            \n                \n                src/app/main/thread/thread-chat-area/thread-chat-area.component.ts\n            \n            component\n            ThreadChatAreaComponent\n            \n                47 %\n                (31/65)\n            \n        \n        \n            \n                \n                src/app/main/thread/thread-header/thread-header.component.ts\n            \n            component\n            ThreadHeaderComponent\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app/main/thread/thread-message-input/thread-message-input.component.ts\n            \n            component\n            ThreadMessageInputComponent\n            \n                47 %\n                (33/70)\n            \n        \n        \n            \n                \n                src/app/main/thread/thread/thread.component.ts\n            \n            component\n            ThreadComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/main/user-profil/user-profil.component.ts\n            \n            component\n            UserProfilComponent\n            \n                30 %\n                (4/13)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                56 %\n                (9/16)\n            \n        \n        \n            \n                \n                src/app/services/channel-selection.service.ts\n            \n            injectable\n            ChannelSelectionService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/services/chat-area.service.ts\n            \n            injectable\n            ChatAreaService\n            \n                81 %\n                (13/16)\n            \n        \n        \n            \n                \n                src/app/services/direct-message-selection.service.ts\n            \n            injectable\n            DirectMessageSelectionService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/edit-channel.service.ts\n            \n            injectable\n            EditChannelService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/file-upload.service.ts\n            \n            injectable\n            FileUploadeService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/new-message-selection.service.ts\n            \n            injectable\n            NewMessageSelectionService\n            \n                61 %\n                (8/13)\n            \n        \n        \n            \n                \n                src/app/services/online.service.ts\n            \n            injectable\n            OnlineService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/responsive.service.ts\n            \n            injectable\n            ResponsiveService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/reveal-password.service.ts\n            \n            injectable\n            RevealPasswordService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/save-new-user.service.ts\n            \n            injectable\n            SaveNewUserService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/search.service.ts\n            \n            injectable\n            SearchService\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/services/sidebar.service.ts\n            \n            injectable\n            SidebarService\n            \n                0 %\n                (0/53)\n            \n        \n        \n            \n                \n                src/app/services/thread.service.ts\n            \n            injectable\n            ThreadService\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/channel.ts\n            \n            interface\n            Channel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/direct-message.class.ts\n            \n            class\n            DirectMessage\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/models/message.class.ts\n            \n            class\n            Message\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/models/message.ts\n            \n            interface\n            Message\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/user.interface.ts\n            \n            interface\n            UserInterFace\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/user.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.3.0\n        \n            @angular/common : ^17.3.0\n        \n            @angular/compiler : ^17.3.0\n        \n            @angular/core : ^17.3.0\n        \n            @angular/fire : ^17.1.0\n        \n            @angular/forms : ^17.3.0\n        \n            @angular/platform-browser : ^17.3.0\n        \n            @angular/platform-browser-dynamic : ^17.3.0\n        \n            @angular/platform-server : ^17.3.0\n        \n            @angular/router : ^17.3.0\n        \n            @angular/ssr : ^17.3.8\n        \n            @ctrl/ngx-emoji-mart : ^9.2.0\n        \n            algoliasearch : ^4.24.0\n        \n            angular-instantsearch : ^4.4.2\n        \n            express : ^4.18.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDABubble\nThis project was generated with Angular CLI version 17.3.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    38 Components\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            firebaseConfig   (src/.../app.config.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(routes),\n    provideClientHydration(),\n    provideFirebaseApp(() =>\n      initializeApp(firebaseConfig)\n    ),\n    provideAuth(() => getAuth()),\n    provideFirestore(() => getFirestore()),\n    provideDatabase(() => getDatabase()),\n    provideStorage(() => getStorage()),\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firebaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        projectId: 'dabubble-3c5b0',\n        appId: '1:904297976039:web:5a55b686aa74fb7763d242',\n        storageBucket: 'dabubble-3c5b0.appspot.com',\n        apiKey: 'AIzaSyC9dPnMg7uyONz8kydSLvm_zg6iLfp4NmM',\n        authDomain: 'dabubble-3c5b0.firebaseapp.com',\n        messagingSenderId: '904297976039',\n        measurementId: 'G-Z5QGG7XBD0'\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
